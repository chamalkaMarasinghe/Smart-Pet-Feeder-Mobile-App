{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/FeaturedCategories.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"../config/Styles\";\nimport { map } from \"lodash\";\nimport { getFeaturedCategories } from \"../config/DataApp\";\nimport { Text, Avatar } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport Strings from \"../config/Strings\";\nexport default function FeaturedCategories() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genres = _useState4[0],\n      setGenres = _useState4[1];\n\n  useEffect(function () {\n    getFeaturedCategories().then(function (response) {\n      setIsLoaded(true);\n      setGenres(response);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      marginVertical: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    contentContainerStyle: {\n      flexGrow: 1,\n      paddingRight: 20\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, map(genres, function (item, index) {\n    return React.createElement(RenderItem, {\n      key: index,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\nfunction RenderItem(props) {\n  var navigation = useNavigation();\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate(\"singlecategory\", {\n      id: id,\n      name: title\n    });\n  };\n\n  var item = props.item;\n  var id = item.id,\n      title = item.title;\n  return React.createElement(View, {\n    style: Styles.card2View,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/FeaturedCategories.js"],"names":["React","useState","useEffect","Styles","map","getFeaturedCategories","Text","Avatar","useNavigation","ConfigApp","ColorsApp","Strings","FeaturedCategories","isLoaded","setIsLoaded","genres","setGenres","then","response","marginVertical","width","flexGrow","paddingRight","item","index","RenderItem","props","navigation","onChangeScreen","id","title","navigate","name","card2View"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,MAAP;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,qBAAT;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,oBAA7B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,kBAAgCX,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA4Bb,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,qBAAqB,GAAGY,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACzCJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACE,QAAD,CAAT;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,qBAAqB,EAAE;AAAEC,MAAAA,QAAQ,EAAE,CAAZ;AAAeC,MAAAA,YAAY,EAAE;AAA7B,KAFzB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,8BAA8B,EAAE,KAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGlB,GAAG,CAACW,MAAD,EAAS,UAACQ,IAAD,EAAOC,KAAP;AAAA,WACX,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAT,CANN,CADF,CADF;AAcD;;AAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,UAAU,GAAGnB,aAAa,EAAhC;;AAEA,MAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAKC,KAAL,EAAe;AACpCH,IAAAA,UAAU,CAACI,QAAX,CAAoB,gBAApB,EAAsC;AACpCF,MAAAA,EAAE,EAAEA,EADgC;AAEpCG,MAAAA,IAAI,EAAEF;AAF8B,KAAtC;AAID,GALD;;AAOA,MAAQP,IAAR,GAAiBG,KAAjB,CAAQH,IAAR;AACA,MAAQM,EAAR,GAAsBN,IAAtB,CAAQM,EAAR;AAAA,MAAYC,KAAZ,GAAsBP,IAAtB,CAAYO,KAAZ;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC8B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ScrollView, View } from \"react-native\";\nimport Styles from \"../config/Styles\";\nimport { map } from \"lodash\";\nimport { getFeaturedCategories } from \"../config/DataApp\";\n// import TouchableScale from 'react-native-touchable-scale';\nimport { Text, Avatar } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport Strings from \"../config/Strings\";\n\nexport default function FeaturedCategories() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    getFeaturedCategories().then((response) => {\n      setIsLoaded(true);\n      setGenres(response);\n    });\n  }, []);\n\n  return (\n    <View style={{ marginVertical: 20 }}>\n      <ScrollView\n        style={{ width: \"100%\" }}\n        contentContainerStyle={{ flexGrow: 1, paddingRight: 20 }}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n      >\n        {map(genres, (item, index) => (\n          <RenderItem key={index} item={item} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction RenderItem(props) {\n  const navigation = useNavigation();\n\n  const onChangeScreen = (id, title) => {\n    navigation.navigate(\"singlecategory\", {\n      id: id,\n      name: title,\n    });\n  };\n\n  const { item } = props;\n  const { id, title } = item;\n\n  return (\n    <View style={Styles.card2View}>\n      {/*<TouchableScale onPress={() => onChangeScreen(id, title)} activeOpacity={1} activeScale={0.98} tension={100} friction={10}>*/}\n      {/*  <View style={Styles.card2Content}>*/}\n      {/*  <Avatar.Image source={{ uri: item.image }} size={80} />*/}\n      {/*  <Text style={Styles.card2Title} numberOfLines={1}>{item.title}</Text>*/}\n      {/*  </View>*/}\n      {/*</TouchableScale>*/}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}