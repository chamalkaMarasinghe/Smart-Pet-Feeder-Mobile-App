{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Button } from 'react-native-paper';\nimport { getUserData, getLogged, signOutApi } from \"../config/DataApp\";\nimport Styles from \"../config/Styles\";\nimport CustomButton from \"../components/CustomButton\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport Strings from \"../config/Strings\";\nimport UserContext from \"../context/UserContext\";\nexport default function Profile(props) {\n  var contextState = useContext(UserContext);\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLogged = _useState4[0],\n      setisLogged = _useState4[1];\n\n  var openLink = function openLink() {\n    var submitUrl = ConfigApp.URL + 'submit-recipe';\n    Linking.openURL(submitUrl);\n  };\n\n  var getUser = function getUser() {\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getUserData().then(function (resp) {\n              if (resp != null) {\n                setUser(resp[0]);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkLogged = function checkLogged() {\n    var response;\n    return _regeneratorRuntime.async(function checkLogged$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getLogged());\n\n          case 2:\n            response = _context2.sent;\n            setisLogged(response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            contextState.updateValue([]);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(signOutApi().then(function (response) {\n              props.navigation.navigate(\"home\");\n            }));\n\n          case 3:\n            ;\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    navigation.navigate(screen);\n  };\n\n  var onClickMember = function onClickMember(id, name) {\n    props.navigation.navigate('singlemember', {\n      id: id,\n      name: name\n    });\n  };\n\n  useEffect(function () {\n    if (checkLogged() != false) {\n      getUser();\n    }\n  }, []);\n\n  if (isLogged === 'true') {\n    return React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }\n    }, React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: Styles.HeaderProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: user.user_avatar\n      },\n      style: Styles.ImageProfile,\n      resizeMode: \"cover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: Styles.TextProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, user.user_name), user.user_verified ? React.createElement(Icon, {\n      name: \"check-decagram\",\n      size: 22,\n      style: Styles.memberBadge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }) : null), React.createElement(Text, {\n      style: Styles.SubTextProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, user.user_email)), React.createElement(View, {\n      style: {\n        marginHorizontal: 30,\n        marginBottom: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }\n    }, React.createElement(CustomButton, {\n      Icon: \"heart-outline\",\n      Label: Strings.ST4,\n      Click: function Click() {\n        return onChangeScreen(\"favorites\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 4\n      }\n    }), React.createElement(CustomButton, {\n      Icon: \"format-list-bulleted\",\n      Label: Strings.ST108,\n      Click: function Click() {\n        return onClickMember(user.user_id, user.user_name);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }), React.createElement(CustomButton, {\n      Icon: \"playlist-edit\",\n      Label: Strings.ST113,\n      Click: openLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }\n    }), React.createElement(CustomButton, {\n      Icon: \"logout\",\n      Label: Strings.ST9,\n      Click: function Click() {\n        return signOut();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }\n    }))));\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }\n    }, React.createElement(Icon, {\n      name: \"account-lock\",\n      color: \"black\",\n      size: 100,\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      style: {\n        borderRadius: 100\n      },\n      contentStyle: Styles.SignButtonContent,\n      labelStyle: Styles.SignButtonLabel,\n      onPress: function onPress() {\n        return onChangeScreen(\"login\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }\n    }, Strings.ST10), React.createElement(TouchableOpacity, {\n      activeOpacity: 0.9,\n      onPress: function onPress() {\n        return onChangeScreen('register');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: Styles.SignButtonTextContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }\n    }, Strings.ST12, \" \", React.createElement(Text, {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, Strings.ST35))));\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Profile.js"],"names":["React","useState","useEffect","useContext","Text","Button","getUserData","getLogged","signOutApi","Styles","CustomButton","Icon","ConfigApp","ColorsApp","Strings","UserContext","Profile","props","contextState","navigation","user","setUser","isLogged","setisLogged","openLink","submitUrl","URL","Linking","openURL","getUser","then","resp","checkLogged","response","signOut","updateValue","navigate","onChangeScreen","screen","onClickMember","id","name","HeaderProfile","uri","user_avatar","ImageProfile","flexDirection","TextProfile","user_name","user_verified","memberBadge","SubTextProfile","user_email","marginHorizontal","marginBottom","ST4","ST108","user_id","ST113","ST9","flex","justifyContent","alignContent","alignItems","borderRadius","SignButtonContent","SignButtonLabel","ST10","SignButtonTextContent","ST12","fontWeight","ST35"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA4B,oBAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpC,MAAMC,YAAY,GAAGf,UAAU,CAACY,WAAD,CAA/B;AACF,MAAOI,UAAP,GAAqBF,KAArB,CAAOE,UAAP;;AACA,kBAAwBlB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOmB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCpB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOqB,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,QAAMC,SAAS,GAAGb,SAAS,CAACc,GAAV,GAAc,eAAhC;AACAC,IAAAA,OAAO,CAACC,OAAR,CAAgBH,SAAhB;AACA,GAHD;;AAKA,MAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AACfvB,YAAAA,WAAW,GAAGwB,IAAd,CAAmB,UAAAC,IAAI,EAAI;AAE1B,kBAAIA,IAAI,IAAI,IAAZ,EAAkB;AACjBV,gBAAAA,OAAO,CAACU,IAAI,CAAC,CAAD,CAAL,CAAP;AACA;AAED,aAND;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIzB,SAAS,EADb;;AAAA;AACb0B,YAAAA,QADa;AAEnBV,YAAAA,WAAW,CAACU,QAAD,CAAX;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AACThB,YAAAA,YAAY,CAACiB,WAAb,CAAyB,EAAzB;AADS;AAAA,6CAET3B,UAAU,GAAGsB,IAAb,CAAkB,UAAAG,QAAQ,EAAI;AACnChB,cAAAA,KAAK,CAACE,UAAN,CAAiBiB,QAAjB,CAA0B,MAA1B;AACA,aAFK,CAFS;;AAAA;AAIZ;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAOA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AAClCnB,IAAAA,UAAU,CAACiB,QAAX,CAAoBE,MAApB;AACA,GAFD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,IAAL,EAAc;AAChCxB,IAAAA,KAAK,CAACE,UAAN,CAAiBiB,QAAjB,CAA0B,cAA1B,EAA0C;AAACI,MAAAA,EAAE,EAAFA,EAAD;AAAKC,MAAAA,IAAI,EAAJA;AAAL,KAA1C;AACF,GAFF;;AAIAvC,EAAAA,SAAS,CAAC,YAAM;AAEf,QAAI8B,WAAW,MAAM,KAArB,EAA4B;AAE3BH,MAAAA,OAAO;AAEP;AAED,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIP,QAAQ,KAAK,MAAjB,EAAyB;AAExB,WAEC,oBAAC,UAAD;AAAY,MAAA,8BAA8B,EAAE,KAA5C;AAAmD,MAAA,4BAA4B,EAAE,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACiC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEvB,IAAI,CAACwB;AAAX,OAAf;AAAwC,MAAA,KAAK,EAAEnC,MAAM,CAACoC,YAAtD;AAAoE,MAAA,UAAU,EAAE,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErC,MAAM,CAACsC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC3B,IAAI,CAAC4B,SAAvC,CADA,EAEC5B,IAAI,CAAC6B,aAAL,GAAqB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,gBAAX;AAA4B,MAAA,IAAI,EAAE,EAAlC;AAAsC,MAAA,KAAK,EAAExC,MAAM,CAACyC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAA0F,IAF3F,CAFH,EAMA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEzC,MAAM,CAAC0C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC/B,IAAI,CAACgC,UAA1C,CANA,CADA,EAUA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,gBAAgB,EAAE,EAAnB;AAAuBC,QAAAA,YAAY,EAAE;AAArC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAmC,MAAA,KAAK,EAAExC,OAAO,CAACyC,GAAlD;AAAuD,MAAA,KAAK,EAAE;AAAA,eAAMlB,cAAc,CAAC,WAAD,CAApB;AAAA,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,sBAAnB;AAA0C,MAAA,KAAK,EAAEvB,OAAO,CAAC0C,KAAzD;AAAgE,MAAA,KAAK,EAAE;AAAA,eAAMjB,aAAa,CAACnB,IAAI,CAACqC,OAAN,EAAerC,IAAI,CAAC4B,SAApB,CAAnB;AAAA,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAmC,MAAA,KAAK,EAAElC,OAAO,CAAC4C,KAAlD;AAAyD,MAAA,KAAK,EAAElC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAEV,OAAO,CAAC6C,GAA3C;AAAgD,MAAA,KAAK,EAAE;AAAA,eAAMzB,OAAO,EAAb;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CAVA,CADA,CAFD;AAyBA,GA3BD,MA2BK;AAEJ,WAEC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAC0B,QAAAA,IAAI,EAAE,CAAP;AAAUC,QAAAA,cAAc,EAAE,QAA1B;AAAoCC,QAAAA,YAAY,EAAE,QAAlD;AAA4DC,QAAAA,UAAU,EAAE;AAAxE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,KAAK,EAAC,OAAhC;AAAwC,MAAA,IAAI,EAAE,GAA9C;AAAmD,MAAA,KAAK,EAAE;AAACT,QAAAA,YAAY,EAAE;AAAf,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAE;AAACU,QAAAA,YAAY,EAAE;AAAf,OAAhC;AAAqD,MAAA,YAAY,EAAEvD,MAAM,CAACwD,iBAA1E;AAA6F,MAAA,UAAU,EAAExD,MAAM,CAACyD,eAAhH;AAAiI,MAAA,OAAO,EAAE;AAAA,eAAM7B,cAAc,CAAC,OAAD,CAApB;AAAA,OAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCvB,OAAO,CAACqD,IADT,CAFA,EAMA,oBAAC,gBAAD;AAAkB,MAAA,aAAa,EAAE,GAAjC;AAAsC,MAAA,OAAO,EAAE;AAAA,eAAM9B,cAAc,CAAC,UAAD,CAApB;AAAA,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE5B,MAAM,CAAC2D,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCtD,OAAO,CAACuD,IADT,OACe,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCxD,OAAO,CAACyD,IAA5C,CADf,CADA,CANA,CAFD;AAkBA;AAED","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { SafeAreaView, ScrollView, Linking, View, Image, TouchableOpacity } from 'react-native';\nimport { Text, Button} from 'react-native-paper';\nimport { getUserData, getLogged, signOutApi } from \"../config/DataApp\";\nimport Styles from '../config/Styles';\nimport CustomButton from '../components/CustomButton';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport ConfigApp from '../config/ConfigApp';\nimport ColorsApp from '../config/ColorsApp';\nimport Strings from '../config/Strings';\nimport UserContext from '../context/UserContext';\n\nexport default function Profile(props) {\n\n  \tconst contextState = useContext(UserContext);\n\tconst {navigation} = props;\n\tconst [user, setUser] = useState('');\n\tconst [isLogged, setisLogged] = useState('');\n\n\tconst openLink = () => {\n\t\tconst submitUrl = ConfigApp.URL+'submit-recipe';\n\t\tLinking.openURL(submitUrl);\n\t};\n\n\tconst getUser = async () => {\n\t\tgetUserData().then(resp => {\n\n\t\t\tif (resp != null) {\n\t\t\t\tsetUser(resp[0]);\n\t\t\t}\n\n\t\t});\n\t}\n\n\tconst checkLogged = async () => {\n\t\tconst response = await getLogged();\n\t\tsetisLogged(response);\n\t}\n\n\tconst signOut = async () => {\n        contextState.updateValue([]);\n\t\tawait signOutApi().then(response => {\n\t\t\tprops.navigation.navigate(\"home\");\n\t\t});;\n\t}\n\n\tconst onChangeScreen = (screen) => {\n\t\tnavigation.navigate(screen);\n\t};\n\n\tconst onClickMember = (id, name) => {\n\t    props.navigation.navigate('singlemember', {id, name});\n\t };\n\n\tuseEffect(() => {\n\n\t\tif (checkLogged() != false) {\n\n\t\t\tgetUser();\n\n\t\t}\n\n\t}, []);\n\n\tif (isLogged === 'true') {\n\n\t\treturn (\n\n\t\t\t<ScrollView showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\n\t\t\t<SafeAreaView>\n\t\t\t<View style={Styles.HeaderProfile}>\n\t\t\t<Image source={{uri: user.user_avatar}} style={Styles.ImageProfile} resizeMode={\"cover\"}/>\n\t\t    <View style={{flexDirection: 'row'}}>\n\t\t    <Text style={Styles.TextProfile}>{user.user_name}</Text>\n\t\t    {user.user_verified ? <Icon name=\"check-decagram\" size={22} style={Styles.memberBadge}/> : null}\n\t\t    </View>\n\t\t\t<Text style={Styles.SubTextProfile}>{user.user_email}</Text>\n\t\t\t</View>\n\n\t\t\t<View style={{marginHorizontal: 30, marginBottom: 40}}>\n\t\t\t<CustomButton Icon=\"heart-outline\" Label={Strings.ST4} Click={() => onChangeScreen(\"favorites\")}/>\n\t\t\t<CustomButton Icon=\"format-list-bulleted\" Label={Strings.ST108} Click={() => onClickMember(user.user_id, user.user_name)}/>\n\t\t\t<CustomButton Icon=\"playlist-edit\" Label={Strings.ST113} Click={openLink}/>\n\t\t\t<CustomButton Icon=\"logout\" Label={Strings.ST9} Click={() => signOut()}/>\n\n\t\t\t</View>\n\t\t\t</SafeAreaView>\n\t\t\t</ScrollView>\n\n\t\t\t);\n\n\t}else{\n\n\t\treturn (\n\n\t\t\t<View style={{flex: 1, justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n\t\t\t<Icon name=\"account-lock\" color=\"black\" size={100} style={{marginBottom: 20}}/>\n\t\t\t<Button mode=\"contained\" style={{borderRadius: 100}} contentStyle={Styles.SignButtonContent} labelStyle={Styles.SignButtonLabel} onPress={() => onChangeScreen(\"login\")}>\n\t\t\t{Strings.ST10}\n\t\t\t</Button>\n\n\t\t\t<TouchableOpacity activeOpacity={0.9} onPress={() => onChangeScreen('register')}>\n\t\t\t<Text style={Styles.SignButtonTextContent}>\n\t\t\t{Strings.ST12} <Text style={{fontWeight: 'bold'}}>{Strings.ST35}</Text>\n\t\t\t</Text>\n\t\t\t</TouchableOpacity>\n\n\t\t\t</View>\n\t\t\t\n\t\t\t);\n\n\t}\n\n}\n\n"]},"metadata":{},"sourceType":"module"}