{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/History.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSelector } from \"react-redux\";\nimport PastSchedule from \"../components/History/PastSchedule\";\nimport { Button, Switch, Text } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Icon from \"react-native-dynamic-vector-icons/lib/Icon\";\nimport * as Validators from \"../helpers/functions\";\n\nvar renderListItem = function renderListItem(itemData) {\n  return React.createElement(PastSchedule, {\n    pastSchedule: itemData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default function History(props) {\n  var history = useSelector(function (state) {\n    return state.history.history;\n  });\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showLatest = _React$useState2[0],\n      setShowLatest = _React$useState2[1];\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredDate = _useState2[0],\n      setFilteredDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFiltered = _useState4[0],\n      setIsFiltered = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShowFilter = _useState6[0],\n      setIsShowFilter = _useState6[1];\n\n  var onToggleSwitch = function onToggleSwitch() {\n    return setShowLatest(function (prevState) {\n      return !prevState;\n    });\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setIsShowFilter(true);\n  };\n\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    setIsShowFilter(false);\n\n    if (event.type === \"dismissed\") {\n      return;\n    }\n\n    setIsFiltered(true);\n    var currentDate = selectedDate || filteredDate;\n    setIsShowFilter(Platform.OS === \"ios\");\n    setFilteredDate(currentDate);\n  };\n\n  var clearFilters = function clearFilters() {\n    setIsFiltered(false);\n    setShowLatest(false);\n    setIsShowFilter(false);\n    setFilteredDate(new Date());\n  };\n\n  var filteredHistory = _toConsumableArray(history);\n\n  if (isFiltered) {\n    filteredHistory = filteredHistory.filter(function (historyData) {\n      return Validators.isSameDate(new Date(historyData.date_time), new Date(filteredDate));\n    });\n  }\n\n  if (showLatest) {\n    filteredHistory = filteredHistory.sort(Validators.dateCompare);\n  }\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.Container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.Inline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"bebas-neue\",\n      fontSize: 20,\n      paddingRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"   \", \" Show Latest\"), React.createElement(Switch, {\n    value: showLatest,\n    onValueChange: onToggleSwitch,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.Inline), {}, {\n      paddingLeft: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"bebas-neue\",\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Filter By Date\"), React.createElement(Button, {\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"calendar\",\n    type: \"AntDesign\",\n    size: 26,\n    color: \"purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.Inline), {}, {\n      paddingBottom: 10,\n      paddingTop: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    icon: \"refresh\",\n    mode: \"contained\",\n    onPress: clearFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Clear Filters\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, isShowFilter && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: filteredDate,\n    mode: \"date\",\n    is24Hour: true,\n    display: Platform.OS === \"ios\" ? \"default\" : \"default\",\n    onChange: onChangeDate,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), React.createElement(FlatList, {\n    contentContainerStyle: {\n      paddingBottom: 150\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: filteredHistory,\n    renderItem: renderListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  Inline: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  Container: {\n    height: 50,\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/History.js"],"names":["React","useEffect","useState","useSelector","PastSchedule","Button","Switch","Text","DateTimePicker","Icon","Validators","renderListItem","itemData","History","props","history","state","showLatest","setShowLatest","Date","filteredDate","setFilteredDate","isFiltered","setIsFiltered","isShowFilter","setIsShowFilter","onToggleSwitch","prevState","showDatePicker","onChangeDate","event","selectedDate","type","currentDate","Platform","OS","clearFilters","filteredHistory","filter","historyData","isSameDate","date_time","sort","dateCompare","onChangeScreen","screen","navigation","navigate","styles","Container","Inline","fontFamily","fontSize","paddingRight","paddingLeft","paddingBottom","paddingTop","marginTop","item","id","StyleSheet","create","flexDirection","alignItems","justifyContent","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  SafeAreaView,\n  FlatList,\n  Platform,\n} from \"react-native\";\n\nimport { useSelector } from \"react-redux\";\nimport PastSchedule from \"../components/History/PastSchedule\";\nimport { Button, Switch, Text } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Icon from \"react-native-dynamic-vector-icons/lib/Icon\";\n\nimport * as Validators from \"../helpers/functions\";\n\nconst renderListItem = (itemData) => {\n  return <PastSchedule pastSchedule={itemData} />;\n};\n\nexport default function History(props) {\n  const history = useSelector((state) => state.history.history);\n  const [showLatest, setShowLatest] = React.useState(false);\n  const [filteredDate, setFilteredDate] = useState(new Date());\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [isShowFilter, setIsShowFilter] = useState(false);\n\n  const onToggleSwitch = () => setShowLatest((prevState) => !prevState);\n\n  const showDatePicker = () => {\n    setIsShowFilter(true);\n  };\n\n  const onChangeDate = (event, selectedDate) => {\n    setIsShowFilter(false);\n\n    if (event.type === \"dismissed\") {\n      return;\n    }\n    setIsFiltered(true);\n    const currentDate = selectedDate || filteredDate;\n    setIsShowFilter(Platform.OS === \"ios\");\n    setFilteredDate(currentDate);\n  };\n\n  const clearFilters = () => {\n    setIsFiltered(false);\n    setShowLatest(false);\n    setIsShowFilter(false);\n\n    setFilteredDate(new Date());\n  };\n\n  let filteredHistory = [...history];\n  if (isFiltered) {\n    // console.log(\"filtering by date\");\n\n    filteredHistory = filteredHistory.filter((historyData) =>\n      Validators.isSameDate(\n        new Date(historyData.date_time),\n        new Date(filteredDate)\n      )\n    );\n  }\n\n  if (showLatest) {\n    filteredHistory = filteredHistory.sort(Validators.dateCompare);\n  }\n\n  // console.log(filteredHistory);\n\n  const onChangeScreen = (screen) => {\n    props.navigation.navigate(screen);\n  };\n  return (\n    <SafeAreaView>\n      <View style={styles.Container}>\n        <View style={styles.Inline}>\n          <Text\n            style={{\n              fontFamily: \"bebas-neue\",\n              fontSize: 20,\n              paddingRight: 20,\n            }}\n          >\n            {\"   \"} Show Latest\n          </Text>\n          <Switch\n            value={showLatest}\n            onValueChange={onToggleSwitch}\n            color=\"black\"\n          />\n        </View>\n\n        <View style={{ ...styles.Inline, paddingLeft: 30 }}>\n          <Text\n            style={{\n              fontFamily: \"bebas-neue\",\n              fontSize: 20,\n            }}\n          >\n            Filter By Date\n          </Text>\n\n          <Button onPress={showDatePicker}>\n            <Icon name=\"calendar\" type=\"AntDesign\" size={26} color=\"purple\" />\n          </Button>\n        </View>\n      </View>\n\n      <View style={{ ...styles.Inline, paddingBottom: 10, paddingTop: 10 }}>\n        <Button icon=\"refresh\" mode=\"contained\" onPress={clearFilters}>\n          Clear Filters\n        </Button>\n      </View>\n\n      <View>\n        {isShowFilter && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={filteredDate}\n            mode=\"date\"\n            is24Hour={true}\n            display={Platform.OS === \"ios\" ? \"default\" : \"default\"}\n            onChange={onChangeDate}\n            style={{\n              marginTop: 10,\n            }}\n          />\n        )}\n      </View>\n\n      <FlatList\n        contentContainerStyle={{ paddingBottom: 150 }}\n        keyExtractor={(item) => item.id}\n        data={filteredHistory}\n        renderItem={renderListItem}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  Inline: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  Container: {\n    height: 50,\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}