{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/node_modules/react-native-video-players/src/VideoPlayerComponents/components/CheckBox.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar CB_ENABLED_IMAGE = require(\"./images/ic_check.png\");\n\nvar CB_DISABLED_IMAGE = require(\"./images/ic_un_check.png\");\n\nvar CheckBox = function (_Component) {\n  _inherits(CheckBox, _Component);\n\n  var _super = _createSuper(CheckBox);\n\n  function CheckBox(props) {\n    var _this;\n\n    _classCallCheck(this, CheckBox);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      internalChecked: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckBox, [{\n    key: \"onChange\",\n    value: function onChange() {\n      if (this.props.onChange && typeof this.props.checked === 'boolean') {\n        this.props.onChange(this.props.checked);\n      } else {\n        var internalChecked = this.state.internalChecked;\n\n        if (this.props.onChange) {\n          this.props.onChange(internalChecked);\n        }\n\n        this.setState({\n          internalChecked: !internalChecked\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var container = React.createElement(View, {\n        style: this.props.containerStyle || Styles.checkboxField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: this.props.checkboxStyle || Styles.checkboxImg,\n        source: source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: Styles.labelContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [Styles.label, this.props.labelStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, this.props.label)));\n      var source;\n\n      if (typeof this.props.checked === 'boolean') {\n        source = this.props.checked ? this.props.checkedImage : this.props.uncheckedImage;\n      } else {\n        source = this.state.internalChecked ? this.props.checkedImage : this.props.uncheckedImage;\n      }\n\n      if (this.props.labelBefore) {\n        container = React.createElement(View, {\n          style: this.props.containerStyle || [Styles.checkboxField, Styles.flexContainer],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: [Styles.labelContainer, this.props.labelContainerStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          numberOfLines: this.props.labelLines,\n          style: [Styles.label, this.props.labelStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, this.props.label)), React.createElement(Image, {\n          resizeMode: \"contain\",\n          style: [Styles.checkboxImg, this.props.checkboxStyle],\n          source: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }));\n      } else if (this.props.label === '') {\n        container = React.createElement(View, {\n          style: [Styles.checkboxField, this.props.containerStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          resizeMode: \"contain\",\n          style: [Styles.checkboxImg, this.props.checkboxStyle],\n          source: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        container = React.createElement(View, {\n          style: [Styles.checkboxField, this.props.containerStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          resizeMode: \"contain\",\n          style: [Styles.checkboxImg, this.props.checkboxStyle],\n          source: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: Styles.labelContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, this.props.label == 'hide' ? null : React.createElement(Text, {\n          numberOfLines: this.props.labelLines,\n          style: [Styles.label, this.props.labelStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }, this.props.label), this.props.renderComponent));\n      }\n\n      return React.createElement(TouchableOpacity, {\n        disabled: this.props.isDisable,\n        onPress: this.onChange,\n        underlayColor: this.props.underlayColor,\n        style: Styles.flexContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, container);\n    }\n  }]);\n\n  return CheckBox;\n}(Component);\n\nexport { CheckBox as default };\nCheckBox.propTypes = {\n  label: PropTypes.string,\n  labelBefore: PropTypes.bool,\n  labelStyle: PropTypes.any,\n  labelContainerStyle: PropTypes.any,\n  labelLines: PropTypes.number,\n  checkboxStyle: PropTypes.any,\n  containerStyle: PropTypes.any,\n  checked: PropTypes.bool,\n  checkedImage: PropTypes.number,\n  uncheckedImage: PropTypes.number,\n  underlayColor: PropTypes.string,\n  onChange: PropTypes.func,\n  isDisable: PropTypes.any\n};\nCheckBox.defaultProps = {\n  label: 'Label',\n  labelLines: 1,\n  labelBefore: false,\n  checked: null,\n  checkedImage: CB_ENABLED_IMAGE,\n  uncheckedImage: CB_DISABLED_IMAGE,\n  underlayColor: 'white',\n  isDisable: false\n};\nvar Styles = StyleSheet.create({\n  flexContainer: {\n    marginRight: 10\n  },\n  checkboxField: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  checkboxImg: {\n    width: 15,\n    height: 15\n  },\n  labelContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 0\n  },\n  label: {\n    color: '#fff',\n    fontSize: 12,\n    marginLeft: 5,\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/node_modules/react-native-video-players/src/VideoPlayerComponents/components/CheckBox.js"],"names":["PropTypes","React","Component","CB_ENABLED_IMAGE","require","CB_DISABLED_IMAGE","CheckBox","props","state","internalChecked","onChange","bind","checked","setState","container","containerStyle","Styles","checkboxField","checkboxStyle","checkboxImg","source","labelContainer","label","labelStyle","checkedImage","uncheckedImage","labelBefore","flexContainer","labelContainerStyle","labelLines","renderComponent","isDisable","underlayColor","propTypes","string","bool","any","number","func","defaultProps","StyleSheet","create","marginRight","flexDirection","alignItems","width","height","justifyContent","marginLeft","color","fontSize"],"mappings":"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","sourcesContent":["'use strict';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport { Image, Text, TouchableOpacity, View, StyleSheet } from 'react-native';\r\n// import {TextPlain, Text} from './RegularComponents';\r\nlet CB_ENABLED_IMAGE = require('./images/ic_check.png');\r\nlet CB_DISABLED_IMAGE = require('./images/ic_un_check.png');\r\nexport default class CheckBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      internalChecked: false,\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange() {\r\n    if (this.props.onChange && typeof this.props.checked === 'boolean') {\r\n      this.props.onChange(this.props.checked);\r\n    } else {\r\n      let internalChecked = this.state.internalChecked;\r\n\r\n      if (this.props.onChange) {\r\n        this.props.onChange(internalChecked);\r\n      }\r\n      this.setState({\r\n        internalChecked: !internalChecked,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let container = (\r\n      <View style={this.props.containerStyle || Styles.checkboxField}>\r\n        <Image\r\n          style={this.props.checkboxStyle || Styles.checkboxImg}\r\n          source={source}\r\n        />\r\n        <View style={Styles.labelContainer}>\r\n          <Text style={[Styles.label, this.props.labelStyle]}>\r\n            {this.props.label}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n\r\n    let source;\r\n\r\n    if (typeof this.props.checked === 'boolean') {\r\n      source = this.props.checked\r\n        ? this.props.checkedImage\r\n        : this.props.uncheckedImage;\r\n    } else {\r\n      source = this.state.internalChecked\r\n        ? this.props.checkedImage\r\n        : this.props.uncheckedImage;\r\n    }\r\n\r\n    if (this.props.labelBefore) {\r\n      container = (\r\n        <View\r\n          style={\r\n            this.props.containerStyle || [\r\n              Styles.checkboxField,\r\n              Styles.flexContainer,\r\n            ]\r\n          }>\r\n          <View style={[Styles.labelContainer, this.props.labelContainerStyle]}>\r\n            <Text\r\n              numberOfLines={this.props.labelLines}\r\n              style={[Styles.label, this.props.labelStyle]}>\r\n              {this.props.label}\r\n            </Text>\r\n          </View>\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            style={[Styles.checkboxImg, this.props.checkboxStyle]}\r\n            source={source}\r\n          />\r\n        </View>\r\n      );\r\n    } else if (this.props.label === '') {\r\n      container = (\r\n        <View style={[Styles.checkboxField, this.props.containerStyle]}>\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            style={[Styles.checkboxImg, this.props.checkboxStyle]}\r\n            source={source}\r\n          />\r\n        </View>\r\n      );\r\n    } else {\r\n      container = (\r\n        <View style={[Styles.checkboxField, this.props.containerStyle]}>\r\n          <Image\r\n            resizeMode=\"contain\"\r\n            style={[Styles.checkboxImg, this.props.checkboxStyle]}\r\n            source={source}\r\n          />\r\n          <View style={Styles.labelContainer}>\r\n            {this.props.label == 'hide' ? null : (\r\n              <Text\r\n                numberOfLines={this.props.labelLines}\r\n                style={[Styles.label, this.props.labelStyle]}>\r\n                {this.props.label}\r\n              </Text>\r\n            )}\r\n            {/* )} */}\r\n\r\n            {this.props.renderComponent}\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        disabled={this.props.isDisable}\r\n        onPress={this.onChange}\r\n        underlayColor={this.props.underlayColor}\r\n        style={Styles.flexContainer}>\r\n        {container}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBox.propTypes = {\r\n  label: PropTypes.string,\r\n  labelBefore: PropTypes.bool,\r\n  labelStyle: PropTypes.any,\r\n  labelContainerStyle: PropTypes.any,\r\n  labelLines: PropTypes.number,\r\n  checkboxStyle: PropTypes.any,\r\n  containerStyle: PropTypes.any,\r\n  checked: PropTypes.bool,\r\n  checkedImage: PropTypes.number,\r\n  uncheckedImage: PropTypes.number,\r\n  underlayColor: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  isDisable: PropTypes.any,\r\n};\r\n\r\nCheckBox.defaultProps = {\r\n  label: 'Label',\r\n  labelLines: 1,\r\n  labelBefore: false,\r\n  checked: null,\r\n  checkedImage: CB_ENABLED_IMAGE,\r\n  uncheckedImage: CB_DISABLED_IMAGE,\r\n  underlayColor: 'white',\r\n  isDisable: false,\r\n};\r\n\r\nconst Styles = StyleSheet.create({\r\n  flexContainer: {\r\n    // flex: 1,\r\n    marginRight: 10\r\n  },\r\n  checkboxField: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  checkboxImg: {\r\n    width: 15,\r\n    height: 15,\r\n  },\r\n  labelContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginLeft: 0,\r\n  },\r\n  label: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    marginLeft: 5,\r\n    marginRight: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}