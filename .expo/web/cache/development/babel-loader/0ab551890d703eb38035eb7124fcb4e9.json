{"ast":null,"code":"var _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/navigation/StackNavigation.js\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Strings from \"../config/Strings\";\nimport { IconButton } from \"react-native-paper\";\nimport Home from \"../screens/Home\";\nimport History from \"../screens/History\";\nimport Status from \"../screens/Status\";\nimport Video from \"../screens/Video\";\nimport Profile from \"../screens/Profile\";\nimport ColorsApp from \"../config/ColorsApp\";\nvar Stack = createStackNavigator();\nexport default function StackNavigation(props) {\n  var _this = this;\n\n  var navigation = props.navigation;\n\n  var onSearch = function onSearch() {\n    navigation.navigate(\"search\", {\n      string: \"\"\n    });\n  };\n\n  var navigatorOptions = {\n    headerStyle: {\n      backgroundColor: ColorsApp.PRIMARY,\n      shadowColor: \"transparent\",\n      elevation: 0,\n      shadowOpacity: 0\n    },\n    headerTitleStyle: {\n      fontSize: 18,\n      color: \"#fff\"\n    },\n    headerTitleAlign: \"center\"\n  };\n\n  var buttonLeft = function buttonLeft() {\n    return React.createElement(IconButton, {\n      icon: \"menu\",\n      color: \"#fff\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var buttonBack = function buttonBack() {\n    return React.createElement(IconButton, {\n      icon: I18nManager.isRTL ? \"arrow-right\" : \"arrow-left\",\n      color: \"#fff\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var buttonBackDark = function buttonBackDark() {\n    return React.createElement(IconButton, {\n      icon: I18nManager.isRTL ? \"arrow-right\" : \"arrow-left\",\n      color: \"#000\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var buttonSearch = function buttonSearch() {\n    return React.createElement(IconButton, {\n      icon: \"magnify\",\n      color: \"#fff\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var buttonMenu = function buttonMenu() {\n    return React.createElement(IconButton, {\n      icon: \"menu\",\n      color: \"#fff\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: navigatorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"home\",\n    component: Home,\n    options: {\n      title: null,\n      headerTransparent: true,\n      headerLeft: function headerLeft() {\n        return buttonMenu();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Status\",\n    component: Status,\n    options: function options(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        title: \"Status\",\n        headerTransparent: false,\n        headerLeft: function headerLeft() {\n          return buttonBack();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"History\",\n    component: History,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"History\",\n        headerTransparent: false,\n        headerLeft: function headerLeft() {\n          return buttonBack();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Video\",\n    component: Video,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        title: \"Video\",\n        headerTransparent: false,\n        headerLeft: function headerLeft() {\n          return buttonBack();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: function options(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        title: \"Profile\",\n        headerTransparent: false,\n        headerLeft: function headerLeft() {\n          return buttonBack();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/navigation/StackNavigation.js"],"names":["React","createStackNavigator","Strings","IconButton","Home","History","Status","Video","Profile","ColorsApp","Stack","StackNavigation","props","navigation","onSearch","navigate","string","navigatorOptions","headerStyle","backgroundColor","PRIMARY","shadowColor","elevation","shadowOpacity","headerTitleStyle","fontSize","color","headerTitleAlign","buttonLeft","openDrawer","buttonBack","I18nManager","isRTL","goBack","buttonBackDark","buttonSearch","buttonMenu","title","headerTransparent","headerLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Dimensions, I18nManager } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Strings from \"../config/Strings\";\nimport { IconButton } from \"react-native-paper\";\nimport Home from \"../screens/Home\";\nimport History from \"../screens/History\";\nimport Status from \"../screens/Status\";\nimport Video from \"../screens/Video\";\nimport Profile from \"../screens/Profile\";\nimport ColorsApp from \"../config/ColorsApp\";\n\nconst Stack = createStackNavigator();\n\nexport default function StackNavigation(props) {\n  const { navigation } = props;\n\n  const onSearch = () => {\n    navigation.navigate(\"search\", { string: \"\" });\n  };\n\n  const navigatorOptions = {\n    headerStyle: {\n      backgroundColor: ColorsApp.PRIMARY,\n      shadowColor: \"transparent\",\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTitleStyle: {\n      fontSize: 18,\n      color: \"#fff\",\n    },\n    headerTitleAlign: \"center\",\n  };\n\n  // ******************************** Buttons\n\n  const buttonLeft = () => {\n    return (\n      <IconButton\n        icon=\"menu\"\n        color={\"#fff\"}\n        size={24}\n        onPress={() => navigation.openDrawer()}\n      />\n    );\n  };\n\n  const buttonBack = () => {\n    return (\n      <IconButton\n        icon={I18nManager.isRTL ? \"arrow-right\" : \"arrow-left\"}\n        color={\"#fff\"}\n        size={24}\n        onPress={() => navigation.goBack()}\n      />\n    );\n  };\n\n  const buttonBackDark = () => {\n    return (\n      <IconButton\n        icon={I18nManager.isRTL ? \"arrow-right\" : \"arrow-left\"}\n        color={\"#000\"}\n        size={24}\n        onPress={() => navigation.goBack()}\n      />\n    );\n  };\n\n  const buttonSearch = () => {\n    return (\n      <IconButton\n        icon=\"magnify\"\n        color={\"#fff\"}\n        size={24}\n        onPress={() => navigation.goBack()}\n      />\n    );\n  };\n\n  const buttonMenu = () => {\n    return (\n      <IconButton\n        icon=\"menu\"\n        color={\"#fff\"}\n        size={24}\n        onPress={() => navigation.openDrawer()}\n      />\n    );\n  };\n\n  return (\n    <Stack.Navigator screenOptions={navigatorOptions}>\n      <Stack.Screen\n        name=\"home\"\n        component={Home}\n        options={{\n          title: null,\n          headerTransparent: true,\n          headerLeft: () => buttonMenu(),\n        }}\n      />\n\n      <Stack.Screen\n        name=\"Status\"\n        component={Status}\n        options={({ navigation }) => ({\n          title: \"Status\",\n          headerTransparent: false,\n          headerLeft: () => buttonBack(),\n        })}\n      />\n\n      <Stack.Screen\n        name=\"History\"\n        component={History}\n        options={({ navigation }) => ({\n          title: \"History\",\n          headerTransparent: false,\n          headerLeft: () => buttonBack(),\n        })}\n      />\n\n      <Stack.Screen\n        name=\"Video\"\n        component={Video}\n        options={({ navigation }) => ({\n          title: \"Video\",\n          headerTransparent: false,\n          headerLeft: () => buttonBack(),\n        })}\n      />\n\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={({ navigation }) => ({\n          title: \"Profile\",\n          headerTransparent: false,\n          headerLeft: () => buttonBack(),\n        })}\n      />\n      {/*<Stack.Screen name=\"singlemember\" component={SingleMember} options={({ navigation }) => ({title: null, headerTransparent: true, headerLeft: () => buttonBackDark()})} />*/}\n      {/*<Stack.Screen name=\"singlecategory\" component={SingleCategory} options={({ navigation }) => ({title: null, headerLeft: () => buttonBack()})} />*/}\n      {/*<Stack.Screen name=\"profile\" component={Profile} options={{title: Strings.ST6, headerLeft: () => buttonBack()}} />*/}\n      {/*<Stack.Screen name=\"members\" component={Members} options={{title: Strings.ST5, headerLeft: () => buttonBack()}} />*/}\n      {/*<Stack.Screen name=\"search\" component={Search} options={{title: Strings.ST3, headerLeft: () => buttonBack()}} />*/}\n      {/*<Stack.Screen name=\"submit\" component={Submit} options={{title: Strings.ST113, headerLeft: () => buttonBack()}} />*/}\n      {/*<Stack.Screen name=\"favorites\" component={Favorites} options={{title: Strings.ST4, headerLeft: () => buttonBack()}} />*/}\n      {/*<Stack.Screen name=\"feed\" component={Feed} options={{title: Strings.ST29, headerLeft: () => buttonBack()}} />*/}\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}