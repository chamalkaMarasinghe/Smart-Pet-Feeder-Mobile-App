{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sachi/Desktop/Mobile App/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { LogBox } from \"react-native-web/dist/index\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Asset } from 'expo-asset';\nimport AppLoading from 'expo-app-loading';\nimport Loading from \"./application/components/AppLoading\";\nimport AdmobBanner from \"./application/components/AdmobBanner\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Provider as PaperProvider, DefaultTheme as DefaultThemePaper } from 'react-native-paper';\nimport { NavigationContainer, DefaultTheme as DefaultThemeNav } from '@react-navigation/native';\nimport Navigation from \"./application/navigation/Navigation\";\nimport ColorsApp from \"./application/config/ColorsApp\";\nimport ConfigApp from \"./application/config/ConfigApp\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { checkUserApi, getUserData, setUserData, getLogged, setLogged } from \"./application/config/DataApp\";\nimport UserContext from \"./application/context/UserContext\";\nimport AdmobConfig from \"./application/config/AdmobConfig\";\nDefaultThemePaper.colors.primary = ColorsApp.PRIMARY;\nDefaultThemePaper.colors.placeholder = '#959595';\nDefaultThemePaper.colors.accent = ColorsApp.PRIMARY;\nDefaultThemeNav.colors.background = ColorsApp.BACKGROUND;\nDefaultThemeNav.colors.card = ColorsApp.HEADER;\nDefaultThemePaper.roundness = 6;\nLogBox.ignoreAllLogs();\n\nvar cacheImages = function cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n};\n\nvar loadAssetsAsync = function loadAssetsAsync() {\n  var imageAssets;\n  return _regeneratorRuntime.async(function loadAssetsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          imageAssets = cacheImages([require(\"./assets/header.jpg\"), require(\"./assets/logo.png\"), require(\"./assets/logo-white.png\")]);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var updateValue = function updateValue(user) {\n    setUser(user);\n  };\n\n  var checkUser = function checkUser() {\n    return _regeneratorRuntime.async(function checkUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getUserData().then(function (resp) {\n              if (resp.length >= 1 && resp != null) {\n                var email = resp[0]['user_email'];\n                setUser(resp[0]);\n                updateValue(resp[0]);\n                checkUserApi(email).then(function (response) {\n                  if (response != 'error') {\n                    setUserData(response).then(function (response) {\n                      setLogged(true);\n                    });\n                  } else if (response === 'error') {\n                    setLogged(false);\n                  }\n                });\n              } else {\n                setLogged(false);\n              }\n            }));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            setLogged(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  useEffect(function () {\n    LogBox.ignoreLogs(['VirtualizedLists should never be nested']);\n    checkUser();\n    setTimeout(function () {\n      setLoaded(true);\n    }, 1500);\n    AdmobConfig.ShowInterstitial();\n  }, []);\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: loadAssetsAsync,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: console.warn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    });\n  }\n\n  if (!loaded) {\n    return React.createElement(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    });\n  }\n\n  if (loaded && isReady) {\n    return React.createElement(UserContext.Provider, {\n      value: {\n        user: user,\n        updateValue: updateValue\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, React.createElement(PaperProvider, {\n      theme: DefaultThemePaper,\n      settings: {\n        icon: function icon(props) {\n          return React.createElement(MaterialIcons, _extends({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 75\n            }\n          }));\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, React.createElement(StatusBar, {\n      translucent: true,\n      backgroundColor: \"transparent\",\n      barStyle: \"light-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }), React.createElement(NavigationContainer, {\n      theme: DefaultThemeNav,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, React.createElement(Navigation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }), React.createElement(AdmobBanner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }))));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/App.js"],"names":["React","useState","useEffect","LogBox","Asset","AppLoading","Loading","AdmobBanner","AsyncStorage","Provider","PaperProvider","DefaultTheme","DefaultThemePaper","NavigationContainer","DefaultThemeNav","Navigation","ColorsApp","ConfigApp","MaterialIcons","checkUserApi","getUserData","setUserData","getLogged","setLogged","UserContext","AdmobConfig","colors","primary","PRIMARY","placeholder","accent","background","BACKGROUND","card","HEADER","roundness","ignoreAllLogs","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","loadAssetsAsync","imageAssets","require","Promise","all","App","isReady","setIsReady","loaded","setLoaded","user","setUser","updateValue","checkUser","then","resp","length","email","response","ignoreLogs","setTimeout","ShowInterstitial","console","warn","icon","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { LogBox, StatusBar } from 'react-native';\nimport { Asset } from 'expo-asset';\nimport AppLoading from 'expo-app-loading';\nimport Loading from './application/components/AppLoading';\nimport AdmobBanner from './application/components/AdmobBanner';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Provider as PaperProvider, DefaultTheme as DefaultThemePaper } from 'react-native-paper';\nimport { NavigationContainer, DefaultTheme as DefaultThemeNav } from '@react-navigation/native';\nimport Navigation from './application/navigation/Navigation';\nimport ColorsApp from './application/config/ColorsApp';\nimport ConfigApp from './application/config/ConfigApp';\nimport MaterialIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { checkUserApi, getUserData, setUserData, getLogged, setLogged } from \"./application/config/DataApp\";\nimport UserContext from './application/context/UserContext';\nimport AdmobConfig from './application/config/AdmobConfig';\n//import moment from \"moment\";\n//import 'moment/locale/es';\n\nDefaultThemePaper.colors.primary = ColorsApp.PRIMARY;\nDefaultThemePaper.colors.placeholder = '#959595';\nDefaultThemePaper.colors.accent = ColorsApp.PRIMARY;\nDefaultThemeNav.colors.background = ColorsApp.BACKGROUND;\nDefaultThemeNav.colors.card = ColorsApp.HEADER;\nDefaultThemePaper.roundness = 6;\n\nLogBox.ignoreAllLogs();\n\nconst cacheImages = (images) => {\n\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\n  const loadAssetsAsync = async () => {\n\n    const imageAssets = cacheImages([\n      require('./assets/header.jpg'),\n      require('./assets/logo.png'),\n      require('./assets/logo-white.png'),\n    ]);\n\n    await Promise.all([...imageAssets]);\n  }\n\nconst App = () => {\n\n  const [isReady, setIsReady] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState([]);\n\n  const updateValue = (user) => {\n    setUser(user);\n  }\n\n  const checkUser = async () => {\n\n    try {\n\n       await getUserData().then((resp) => {\n\n       if (resp.length >= 1 && resp != null) {\n\n        const email = resp[0]['user_email'];\n\n        setUser(resp[0]);\n        updateValue(resp[0]);\n\n        checkUserApi(email).then(response => {\n\n          if (response != 'error') {\n\n              setUserData(response).then(response => {\n              setLogged(true);\n\n            });\n\n          }else if(response === 'error'){\n\n            setLogged(false);\n\n          }\n\n        });\n\n      }else{\n        setLogged(false);\n\n      }\n\n    })\n\n      } catch (error) {\n        setLogged(false);\n        // console.log(\"Error\", error);\n      }\n\n    }\n\n  useEffect(() => {\n\n    //moment.locale(\"es\");\n\n    LogBox.ignoreLogs(['VirtualizedLists should never be nested']);\n\n    checkUser();\n    setTimeout(() => {\n      setLoaded(true);\n    }, 1500);\n\n    AdmobConfig.ShowInterstitial();\n\n  }, []);\n\n    if (!isReady) {\n      return (\n        <AppLoading\n          startAsync={loadAssetsAsync}\n          onFinish={() => setIsReady(true)}\n          onError={console.warn}\n        />\n      );\n    }\n\n    if (!loaded) {\n      return (\n        <Loading/>\n        );\n    }\n\n    if (loaded && isReady) {\n      return (\n      <UserContext.Provider value={{ user, updateValue }}>\n      <PaperProvider theme={DefaultThemePaper} settings={{ icon: props => <MaterialIcons {...props} />, }}>\n      <StatusBar translucent backgroundColor=\"transparent\" barStyle={\"light-content\"}/>\n      <NavigationContainer theme={DefaultThemeNav}>\n      <Navigation/>\n      <AdmobBanner/>\n      </NavigationContainer>\n      </PaperProvider>\n      </UserContext.Provider>\n        );\n    }\n\n    };\n\n    export default App;"]},"metadata":{},"sourceType":"module"}