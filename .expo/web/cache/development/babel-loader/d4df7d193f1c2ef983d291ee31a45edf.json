{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AppLoading from \"../components/AppLoading\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport { Title, Text, Divider, FAB } from \"react-native-paper\";\nimport SchedulePart from \"../components/Home/SchedulePart\";\nexport default function Home(props) {\n  var _this = this;\n\n  console.log(\"home\");\n  var yOffset = useRef(new Animated.Value(0)).current;\n  var headerOpacity = yOffset.interpolate({\n    inputRange: [0, 200],\n    outputRange: [0, 1],\n    extrapolate: \"clamp\"\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  useEffect(function () {\n    props.navigation.setOptions({\n      title: Strings.ST1,\n      headerTransparent: true,\n      headerTintColor: \"#ffffff\",\n      headerTitleStyle: {\n        opacity: headerOpacity\n      },\n      headerBackground: function headerBackground() {\n        return React.createElement(Animated.View, {\n          style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n            opacity: headerOpacity,\n            backgroundColor: ColorsApp.PRIMARY\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        });\n      }\n    });\n  }, [headerOpacity]);\n\n  if (isLoaded) {\n    return React.createElement(Animated.ScrollView, {\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            y: yOffset\n          }\n        }\n      }], {\n        useNativeDriver: true\n      }),\n      scrollEventThrottle: 16,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, React.createElement(LinearGradient, {\n      colors: [\"rgba(0,0,0,0.8)\", \"transparent\"],\n      style: Styles.homeOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), React.createElement(ImageBackground, {\n      source: require(\"../assets/images/header.jpg\"),\n      resizeMode: \"cover\",\n      style: Styles.headerBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: Styles.headerOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, React.createElement(Title, {\n      style: Styles.headerTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"SMART PET FEEDER\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onChangeScreen(\"Video\");\n      },\n      activeOpacity: 0.9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Styles.headerButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: Styles.headerButtonText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Watch Pet\"))))), React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: Styles.HomeScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, React.createElement(SchedulePart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Home.js"],"names":["React","useState","useEffect","useRef","AppLoading","LinearGradient","Styles","Strings","ColorsApp","Title","Text","Divider","FAB","SchedulePart","Home","props","console","log","yOffset","Animated","Value","current","headerOpacity","interpolate","inputRange","outputRange","extrapolate","isLoaded","setIsLoaded","onChangeScreen","screen","navigation","navigate","setOptions","title","ST1","headerTransparent","headerTintColor","headerTitleStyle","opacity","headerBackground","StyleSheet","absoluteFillObject","backgroundColor","PRIMARY","event","nativeEvent","contentOffset","y","useNativeDriver","homeOverlay","require","headerOverlay","headerTitle","headerButton","headerButtonText","HomeScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ImageBackground,\n  TouchableOpacity,\n  SafeAreaView,\n} from \"react-native\";\nimport AppLoading from \"../components/AppLoading\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport { Title, Text, Divider, FAB } from \"react-native-paper\";\nimport SchedulePart from \"../components/Home/SchedulePart\";\n\nexport default function Home(props) {\n  console.log(\"home\");\n\n  const yOffset = useRef(new Animated.Value(0)).current;\n  const headerOpacity = yOffset.interpolate({\n    inputRange: [0, 200],\n    outputRange: [0, 1],\n    extrapolate: \"clamp\",\n  });\n\n  const [isLoaded, setIsLoaded] = useState(true);\n\n  const onChangeScreen = (screen) => {\n    props.navigation.navigate(screen);\n  };\n\n  useEffect(() => {\n    props.navigation.setOptions({\n      title: Strings.ST1,\n      headerTransparent: true,\n      headerTintColor: \"#ffffff\",\n      headerTitleStyle: { opacity: headerOpacity },\n      headerBackground: () => (\n        <Animated.View\n          style={{\n            ...StyleSheet.absoluteFillObject,\n            opacity: headerOpacity,\n            backgroundColor: ColorsApp.PRIMARY,\n          }}\n        />\n      ),\n    });\n  }, [headerOpacity]);\n\n  if (isLoaded) {\n    return (\n      <Animated.ScrollView\n        onScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                contentOffset: {\n                  y: yOffset,\n                },\n              },\n            },\n          ],\n          { useNativeDriver: true }\n        )}\n        scrollEventThrottle={16}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <LinearGradient\n          colors={[\"rgba(0,0,0,0.8)\", \"transparent\"]}\n          style={Styles.homeOverlay}\n        />\n\n        <ImageBackground\n          source={require(\"../assets/images/header.jpg\")}\n          resizeMode={\"cover\"}\n          style={Styles.headerBackground}\n        >\n          <View style={Styles.headerOverlay}>\n            <Title style={Styles.headerTitle}>SMART PET FEEDER</Title>\n            <TouchableOpacity\n              onPress={() => onChangeScreen(\"Video\")}\n              activeOpacity={0.9}\n            >\n              <View style={Styles.headerButton}>\n                <Text style={Styles.headerButtonText}>Watch Pet</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n        </ImageBackground>\n\n        <SafeAreaView>\n          <View style={Styles.HomeScreen}>\n            <SchedulePart />\n          </View>\n        </SafeAreaView>\n      </Animated.ScrollView>\n    );\n  } else {\n    return <AppLoading />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}