{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/node_modules/react-native-video-players/src/VideoPlayerComponents/components/Scrubber.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Slider from \"../Slider\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  slider: {\n    marginHorizontal: -10\n  },\n  thumbStyle: {\n    width: 22,\n    height: 22,\n    borderRadius: 22 / 2,\n    backgroundColor: 'rgba(247,109,28,1)',\n    borderColor: 'white',\n    borderWidth: 3\n  },\n  trackStyle: {\n    borderRadius: 1\n  }\n});\n\nvar Scrubber = function Scrubber(props) {\n  var trackColor = 'transparent';\n  var progress = props.progress,\n      theme = props.theme,\n      onSeek = props.onSeek,\n      onSeekRelease = props.onSeekRelease,\n      back = props.back,\n      next = props.next,\n      isRepeat = props.isRepeat,\n      isShuffle = props.isShuffle,\n      isAutoPlay = props.isAutoPlay,\n      repeat = props.repeat,\n      shuffle = props.shuffle,\n      autoPlayFunc = props.autoPlayFunc,\n      isSplashScreen = props.isSplashScreen;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Slider, {\n    onValueChange: function onValueChange(val) {\n      return onSeek(val);\n    },\n    onSlidingComplete: function onSlidingComplete(val) {\n      return onSeekRelease(val);\n    },\n    value: progress === Number.POSITIVE_INFINITY ? 0 : progress,\n    thumbStyle: styles.thumbStyle,\n    trackStyle: styles.trackStyle,\n    minimumTrackTintColor: theme.scrubberBar,\n    maximumTrackTintColor: trackColor,\n    trackClickable: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), !isSplashScreen && React.createElement(View, {\n    style: {\n      height: 50,\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 27\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return back();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    source: require(\"./images/ic_active_back.png\"),\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 50\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return repeat();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    source: isRepeat ? require(\"./images/ic_repeat_active.png\") : require(\"./images/ic_repeat.png\"),\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 52\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return shuffle();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    source: isShuffle ? require(\"./images/ic_shuffle_arrow_active.png\") : require(\"./images/ic_shuffle_arrow.png\"),\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 53\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return autoPlayFunc();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    source: isAutoPlay ? require(\"./images/ic_active_arrow.png\") : require(\"./images/ic_arrow.png\"),\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 58\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return next();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30\n    },\n    source: require(\"./images/ic_next_active.png\"),\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 50\n    }\n  }))));\n};\n\nScrubber.propTypes = {\n  onSeek: PropTypes.func.isRequired,\n  onSeekRelease: PropTypes.func.isRequired,\n  progress: PropTypes.number.isRequired,\n  theme: PropTypes.object.isRequired,\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  isRepeat: PropTypes.bool.isRequired,\n  isShuffle: PropTypes.bool.isRequired,\n  isAutoPlay: PropTypes.bool.isRequired,\n  repeat: PropTypes.func.isRequired,\n  shuffle: PropTypes.func.isRequired,\n  autoPlayFunc: PropTypes.func.isRequired,\n  isSplashScreen: PropTypes.bool\n};\nexport { Scrubber };","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/node_modules/react-native-video-players/src/VideoPlayerComponents/components/Scrubber.js"],"names":["React","PropTypes","Slider","styles","StyleSheet","create","container","flex","justifyContent","slider","marginHorizontal","thumbStyle","width","height","borderRadius","backgroundColor","borderColor","borderWidth","trackStyle","Scrubber","props","trackColor","progress","theme","onSeek","onSeekRelease","back","next","isRepeat","isShuffle","isAutoPlay","repeat","shuffle","autoPlayFunc","isSplashScreen","val","Number","POSITIVE_INFINITY","scrubberBar","flexDirection","alignItems","require","propTypes","func","isRequired","number","object","bool"],"mappings":"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","sourcesContent":["import React from 'react' // eslint-disable-line\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image\r\n} from 'react-native'\r\nimport Slider from '../Slider'\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  slider: {\r\n    marginHorizontal: -10\r\n  },\r\n  thumbStyle: {\r\n    width: 22,\r\n    height: 22,\r\n    borderRadius: 22 / 2,\r\n    backgroundColor: 'rgba(247,109,28,1)',\r\n    borderColor: 'white',\r\n    borderWidth: 3,\r\n  },\r\n  trackStyle: {\r\n    borderRadius: 1\r\n  }\r\n})\r\n\r\nconst Scrubber = (props) => {\r\n  const trackColor = 'transparent'\r\n  const { progress, theme, onSeek, onSeekRelease, back, next, isRepeat, isShuffle,\r\n    isAutoPlay, repeat, shuffle, autoPlayFunc, isSplashScreen } = props\r\n  return (\r\n    <View style={styles.container}>\r\n      <Slider\r\n        onValueChange={val => onSeek(val)}\r\n        onSlidingComplete={val => onSeekRelease(val)}\r\n        value={progress === Number.POSITIVE_INFINITY ? 0 : progress}\r\n        thumbStyle={styles.thumbStyle}\r\n        trackStyle={styles.trackStyle}\r\n        minimumTrackTintColor={theme.scrubberBar}\r\n        maximumTrackTintColor={trackColor}\r\n        trackClickable\r\n      />\r\n      {!isSplashScreen && <View style={{ height: 50, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n        <TouchableOpacity onPress={() => back()}><Image style={{ height: 30, width: 30 }} source={require('./images/ic_active_back.png')} resizeMode={'contain'} /></TouchableOpacity>\r\n        <TouchableOpacity onPress={() => repeat()}><Image style={{ height: 30, width: 30 }} source={isRepeat ? require('./images/ic_repeat_active.png') : require('./images/ic_repeat.png')} resizeMode={'contain'} /></TouchableOpacity>\r\n        <TouchableOpacity onPress={() => shuffle()}><Image style={{ height: 30, width: 30 }} source={isShuffle ? require('./images/ic_shuffle_arrow_active.png') : require('./images/ic_shuffle_arrow.png')} resizeMode={'contain'} /></TouchableOpacity>\r\n        <TouchableOpacity onPress={() => autoPlayFunc()}><Image style={{ height: 30, width: 30 }} source={isAutoPlay ? require('./images/ic_active_arrow.png') : require('./images/ic_arrow.png')} resizeMode={'contain'} /></TouchableOpacity>\r\n        <TouchableOpacity onPress={() => next()}><Image style={{ height: 30, width: 30 }} source={require('./images/ic_next_active.png')} resizeMode={'contain'} /></TouchableOpacity>\r\n      </View>}\r\n    </View>\r\n  )\r\n}\r\n\r\nScrubber.propTypes = {\r\n  onSeek: PropTypes.func.isRequired,\r\n  onSeekRelease: PropTypes.func.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  back: PropTypes.func.isRequired,\r\n  next: PropTypes.func.isRequired,\r\n  isRepeat: PropTypes.bool.isRequired,\r\n  isShuffle: PropTypes.bool.isRequired,\r\n  isAutoPlay: PropTypes.bool.isRequired,\r\n  repeat: PropTypes.func.isRequired,\r\n  shuffle: PropTypes.func.isRequired,\r\n  autoPlayFunc: PropTypes.func.isRequired,\r\n  isSplashScreen: PropTypes.bool\r\n}\r\n\r\nexport { Scrubber }\r\n"]},"metadata":{},"sourceType":"module"}