{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, TextInput, Button, Checkbox } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport useInput from \"../hooks/use-input\";\nimport * as Validators from \"../helpers/validators\";\nimport { useDispatch } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport { DotIndicator } from \"react-native-indicators\";\nexport default function Register(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPageLoading = _useState6[0],\n      setIsPageLoaded = _useState6[1];\n\n  useEffect(function () {\n    setIsPageLoaded(false);\n  }, []);\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert(\"Authentication Failed!\", error, [{\n        text: \"Okay\"\n      }]);\n    }\n  }, [error]);\n\n  var _useInput = useInput(\"\", Validators.isValidString),\n      name = _useInput.value,\n      nameIsValid = _useInput.isValid,\n      nameHasError = _useInput.hasError,\n      nameChangeHandler = _useInput.valueChangeHandler,\n      nameBlurHandler = _useInput.inputBlurHandler,\n      resetName = _useInput.reset;\n\n  var _useInput2 = useInput(\"\", Validators.isEmail),\n      email = _useInput2.value,\n      emailIsValid = _useInput2.isValid,\n      emailHasError = _useInput2.hasError,\n      emailChangeHandler = _useInput2.valueChangeHandler,\n      emailBlurHandler = _useInput2.inputBlurHandler,\n      resetEmail = _useInput2.reset;\n\n  var _useInput3 = useInput(\"\", Validators.isMobileNumber),\n      mobileNumber = _useInput3.value,\n      mobileNumberIsValid = _useInput3.isValid,\n      mobileNumberHasError = _useInput3.hasError,\n      mobileNumberChangeHandler = _useInput3.valueChangeHandler,\n      mobileNumberBlurHandler = _useInput3.inputBlurHandler,\n      resetMobileNumber = _useInput3.reset;\n\n  var _useInput4 = useInput(\"\", Validators.isPassword),\n      password = _useInput4.value,\n      passwordIsValid = _useInput4.isValid,\n      passwordHasError = _useInput4.hasError,\n      passwordChangeHandler = _useInput4.valueChangeHandler,\n      passwordBlurHandler = _useInput4.inputBlurHandler,\n      resetPassword = _useInput4.reset;\n\n  var _useInput5 = useInput(\"\", Validators.isConfirmPassword.bind(null, password)),\n      confirmPassword = _useInput5.value,\n      confirmPasswordIsValid = _useInput5.isValid,\n      confirmPasswordHasError = _useInput5.hasError,\n      confirmPasswordChangeHandler = _useInput5.valueChangeHandler,\n      confirmPasswordBlurHandler = _useInput5.inputBlurHandler,\n      resetConfirmPassword = _useInput5.reset;\n\n  var formIsValid = false;\n\n  if (nameIsValid && emailIsValid && mobileNumberIsValid && passwordIsValid && confirmPasswordIsValid) {\n    formIsValid = true;\n  }\n\n  var submitForm = function submitForm() {\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(authActions.signup(name, email, mobileNumber, password, confirmPassword)));\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n            setIsLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n\n  if (isPageLoading) {\n    return React.createElement(DotIndicator, {\n      color: ColorsApp.PRIMARY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: Styles.AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      justifyContent: \"center\",\n      paddingBottom: 30,\n      paddingTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/logo.png\"),\n    resizeMode: \"contain\",\n    style: Styles.AuthLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: Styles.AuthContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Name\",\n    mode: \"flat\",\n    style: Styles.AuthInput,\n    onChangeText: nameChangeHandler,\n    onBlur: nameBlurHandler,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), nameHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"*Name should contain at least 5 characters.\")), React.createElement(TextInput, {\n    label: \"Email\",\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.AuthInput,\n    onChangeText: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    value: email,\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }), emailHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"*Incorrect Email \")), React.createElement(TextInput, {\n    label: \"Mobile Number\",\n    mode: \"flat\",\n    style: Styles.AuthInput,\n    onChangeText: mobileNumberChangeHandler,\n    onBlur: mobileNumberBlurHandler,\n    value: mobileNumber,\n    keyboardType: \"phone-pad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }), mobileNumberHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"*Invalid mobile number \")), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"flat\",\n    secureTextEntry: true,\n    style: Styles.AuthInput,\n    onChangeText: passwordChangeHandler,\n    onBlur: passwordBlurHandler,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }), passwordHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, \"*6 minimum characters with uppercase & number\")), React.createElement(TextInput, {\n    label: \"Confirm Password\",\n    mode: \"flat\",\n    secureTextEntry: true,\n    style: Styles.AuthInput,\n    onChangeText: confirmPasswordChangeHandler,\n    onBlur: confirmPasswordBlurHandler,\n    value: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), confirmPasswordHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, \"*Password does not match \")), isLoading ? React.createElement(View, {\n    style: {\n      height: 72\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, React.createElement(DotIndicator, {\n    color: ColorsApp.PRIMARY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  })) : React.createElement(Button, {\n    mode: \"contained\",\n    onPress: submitForm,\n    style: _objectSpread(_objectSpread({}, Styles.AuthButton), {}, {\n      backgroundColor: formIsValid ? ColorsApp.PRIMARY : \"grey\"\n    }),\n    contentStyle: Styles.AuthButtonContent,\n    labelStyle: Styles.AuthButtonLabel,\n    disabled: !formIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"Register\"), React.createElement(View, {\n    style: Styles.AuthBottomContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen(\"Login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.AuthBottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, \"Already have an account?\", \"  \", React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, \"Sign In\")))))));\n}\nvar styles = StyleSheet.create({\n  Error: {\n    flexDirection: \"row\"\n  },\n  ErrorMessage: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Register.js"],"names":["React","useState","useContext","useEffect","Text","TextInput","Button","Checkbox","Styles","ColorsApp","useInput","Validators","useDispatch","authActions","DotIndicator","Register","props","error","setError","isLoading","setIsLoading","dispatch","isPageLoading","setIsPageLoaded","onChangeScreen","screen","navigation","navigate","Alert","alert","text","isValidString","name","value","nameIsValid","isValid","nameHasError","hasError","nameChangeHandler","valueChangeHandler","nameBlurHandler","inputBlurHandler","resetName","reset","isEmail","email","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","isMobileNumber","mobileNumber","mobileNumberIsValid","mobileNumberHasError","mobileNumberChangeHandler","mobileNumberBlurHandler","resetMobileNumber","isPassword","password","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","isConfirmPassword","bind","confirmPassword","confirmPasswordIsValid","confirmPasswordHasError","confirmPasswordChangeHandler","confirmPasswordBlurHandler","resetConfirmPassword","formIsValid","submitForm","signup","message","PRIMARY","AuthPage","flexGrow","justifyContent","paddingBottom","paddingTop","require","AuthLogo","AuthContent","AuthInput","styles","Error","ErrorMessage","height","AuthButton","backgroundColor","AuthButtonContent","AuthButtonLabel","AuthBottomContent","AuthBottomText","fontWeight","StyleSheet","create","flexDirection","color","fontSize","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;;;;;AAWA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAkD,oBAAlD;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,UAAZ;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,WAAZ;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,kBAA0Bf,QAAQ,EAAlC;AAAA;AAAA,MAAOgB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCjB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,mBAAyCX,QAAQ,CAAC,IAAD,CAAjD;AAAA;AAAA,MAAOqB,aAAP;AAAA,MAAsBC,eAAtB;;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACjCT,IAAAA,KAAK,CAACU,UAAN,CAAiBC,QAAjB,CAA0BF,MAA1B;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,KAAJ,EAAW;AACTW,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ,EAAsCZ,KAAtC,EAA6C,CAAC;AAAEa,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA7C;AACD;AACF,GAJQ,EAIN,CAACb,KAAD,CAJM,CAAT;;AAMA,kBAOIP,QAAQ,CAAC,EAAD,EAAKC,UAAU,CAACoB,aAAhB,CAPZ;AAAA,MACSC,IADT,aACEC,KADF;AAAA,MAEWC,WAFX,aAEEC,OAFF;AAAA,MAGYC,YAHZ,aAGEC,QAHF;AAAA,MAIsBC,iBAJtB,aAIEC,kBAJF;AAAA,MAKoBC,eALpB,aAKEC,gBALF;AAAA,MAMSC,SANT,aAMEC,KANF;;AASA,mBAOIjC,QAAQ,CAAC,EAAD,EAAKC,UAAU,CAACiC,OAAhB,CAPZ;AAAA,MACSC,KADT,cACEZ,KADF;AAAA,MAEWa,YAFX,cAEEX,OAFF;AAAA,MAGYY,aAHZ,cAGEV,QAHF;AAAA,MAIsBW,kBAJtB,cAIET,kBAJF;AAAA,MAKoBU,gBALpB,cAKER,gBALF;AAAA,MAMSS,UANT,cAMEP,KANF;;AASA,mBAOIjC,QAAQ,CAAC,EAAD,EAAKC,UAAU,CAACwC,cAAhB,CAPZ;AAAA,MACSC,YADT,cACEnB,KADF;AAAA,MAEWoB,mBAFX,cAEElB,OAFF;AAAA,MAGYmB,oBAHZ,cAGEjB,QAHF;AAAA,MAIsBkB,yBAJtB,cAIEhB,kBAJF;AAAA,MAKoBiB,uBALpB,cAKEf,gBALF;AAAA,MAMSgB,iBANT,cAMEd,KANF;;AASA,mBAOIjC,QAAQ,CAAC,EAAD,EAAKC,UAAU,CAAC+C,UAAhB,CAPZ;AAAA,MACSC,QADT,cACE1B,KADF;AAAA,MAEW2B,eAFX,cAEEzB,OAFF;AAAA,MAGY0B,gBAHZ,cAGExB,QAHF;AAAA,MAIsByB,qBAJtB,cAIEvB,kBAJF;AAAA,MAKoBwB,mBALpB,cAKEtB,gBALF;AAAA,MAMSuB,aANT,cAMErB,KANF;;AASA,mBAOIjC,QAAQ,CAAC,EAAD,EAAKC,UAAU,CAACsD,iBAAX,CAA6BC,IAA7B,CAAkC,IAAlC,EAAwCP,QAAxC,CAAL,CAPZ;AAAA,MACSQ,eADT,cACElC,KADF;AAAA,MAEWmC,sBAFX,cAEEjC,OAFF;AAAA,MAGYkC,uBAHZ,cAGEhC,QAHF;AAAA,MAIsBiC,4BAJtB,cAIE/B,kBAJF;AAAA,MAKoBgC,0BALpB,cAKE9B,gBALF;AAAA,MAMS+B,oBANT,cAME7B,KANF;;AASA,MAAI8B,WAAW,GAAG,KAAlB;;AACA,MACEvC,WAAW,IACXY,YADA,IAEAO,mBAFA,IAGAO,eAHA,IAIAQ,sBALF,EAME;AACAK,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AACjBxD,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAFiB;AAAA;AAAA,6CAITC,QAAQ,CACZR,WAAW,CAAC8D,MAAZ,CAAmB3C,IAAnB,EAAyBa,KAAzB,EAAgCO,YAAhC,EAA8CO,QAA9C,EAAwDQ,eAAxD,CADY,CAJC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASfjD,YAAAA,QAAQ,CAAC,YAAI0D,OAAL,CAAR;AACAxD,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAwDA,MAAIE,aAAJ,EAAmB;AACjB,WAAO,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEb,SAAS,CAACoE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAErE,MAAM,CAACsE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,qBAAqB,EAAE;AACrBC,MAAAA,QAAQ,EAAE,CADW;AAErBC,MAAAA,cAAc,EAAE,QAFK;AAGrBC,MAAAA,aAAa,EAAE,EAHM;AAIrBC,MAAAA,UAAU,EAAE;AAJS,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEC,OAAO,6BADjB;AAEE,IAAA,UAAU,EAAE,SAFd;AAGE,IAAA,KAAK,EAAE3E,MAAM,CAAC4E,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5E,MAAM,CAAC6E,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAE7E,MAAM,CAAC8E,SAHhB;AAIE,IAAA,YAAY,EAAEhD,iBAJhB;AAKE,IAAA,MAAM,EAAEE,eALV;AAME,IAAA,KAAK,EAAER,IANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGI,YAAY,IACX,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmD,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,CAXJ,EAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,cAAc,EAAC,MAHjB;AAIE,IAAA,KAAK,EAAEjF,MAAM,CAAC8E,SAJhB;AAKE,IAAA,YAAY,EAAEtC,kBALhB;AAME,IAAA,MAAM,EAAEC,gBANV;AAOE,IAAA,KAAK,EAAEJ,KAPT;AAQE,IAAA,YAAY,EAAC,eARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EA4BGE,aAAa,IACZ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CA7BJ,EAkCE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEjF,MAAM,CAAC8E,SAHhB;AAIE,IAAA,YAAY,EAAE/B,yBAJhB;AAKE,IAAA,MAAM,EAAEC,uBALV;AAME,IAAA,KAAK,EAAEJ,YANT;AAOE,IAAA,YAAY,EAAC,WAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EA4CGE,oBAAoB,IACnB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CA7CJ,EAiDE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,KAAK,EAAEjF,MAAM,CAAC8E,SAJhB;AAKE,IAAA,YAAY,EAAExB,qBALhB;AAME,IAAA,MAAM,EAAEC,mBANV;AAOE,IAAA,KAAK,EAAEJ,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,EA2DGE,gBAAgB,IACf,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,CA5DJ,EAkEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,KAAK,EAAEjF,MAAM,CAAC8E,SAJhB;AAKE,IAAA,YAAY,EAAEhB,4BALhB;AAME,IAAA,MAAM,EAAEC,0BANV;AAOE,IAAA,KAAK,EAAEJ,eAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlEF,EA4EGE,uBAAuB,IACtB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CA7EJ,EAkFGtE,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEuE,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEjF,SAAS,CAACoE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAEH,UAFX;AAGE,IAAA,KAAK,kCACAlE,MAAM,CAACmF,UADP;AAEHC,MAAAA,eAAe,EAAEnB,WAAW,GAAGhE,SAAS,CAACoE,OAAb,GAAuB;AAFhD,MAHP;AAOE,IAAA,YAAY,EAAErE,MAAM,CAACqF,iBAPvB;AAQE,IAAA,UAAU,EAAErF,MAAM,CAACsF,eARrB;AASE,IAAA,QAAQ,EAAE,CAACrB,WATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvFJ,EAsGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjE,MAAM,CAACuF,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMvE,cAAc,CAAC,OAAD,CAApB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACwF,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC2B,IAD3B,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAJF,CADF,CAtGF,CAdF,CADF,CADF;AAqID;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,aAAa,EAAE;AADV,GADwB;AAO/BX,EAAAA,YAAY,EAAE;AACZY,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,QAAQ,EAAE,EAFE;AAGZC,IAAAA,SAAS,EAAE;AAHC;AAPiB,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  TouchableOpacity,\n  Image,\n  StyleSheet,\n  Platform,\n  ScrollView,\n  Alert,\n} from \"react-native\";\nimport { Text, TextInput, Button, Checkbox } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport useInput from \"../hooks/use-input\";\nimport * as Validators from \"../helpers/validators\";\nimport { useDispatch } from \"react-redux\";\nimport * as authActions from \"../store/actions/auth\";\nimport { DotIndicator } from \"react-native-indicators\";\n\nexport default function Register(props) {\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const [isPageLoading, setIsPageLoaded] = useState(true);\n\n  useEffect(() => {\n    setIsPageLoaded(false);\n  }, []);\n\n  const onChangeScreen = (screen) => {\n    props.navigation.navigate(screen);\n  };\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert(\"Authentication Failed!\", error, [{ text: \"Okay\" }]);\n    }\n  }, [error]);\n\n  const {\n    value: name,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput(\"\", Validators.isValidString);\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(\"\", Validators.isEmail);\n\n  const {\n    value: mobileNumber,\n    isValid: mobileNumberIsValid,\n    hasError: mobileNumberHasError,\n    valueChangeHandler: mobileNumberChangeHandler,\n    inputBlurHandler: mobileNumberBlurHandler,\n    reset: resetMobileNumber,\n  } = useInput(\"\", Validators.isMobileNumber);\n\n  const {\n    value: password,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(\"\", Validators.isPassword);\n\n  const {\n    value: confirmPassword,\n    isValid: confirmPasswordIsValid,\n    hasError: confirmPasswordHasError,\n    valueChangeHandler: confirmPasswordChangeHandler,\n    inputBlurHandler: confirmPasswordBlurHandler,\n    reset: resetConfirmPassword,\n  } = useInput(\"\", Validators.isConfirmPassword.bind(null, password));\n\n  let formIsValid = false;\n  if (\n    nameIsValid &&\n    emailIsValid &&\n    mobileNumberIsValid &&\n    passwordIsValid &&\n    confirmPasswordIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const submitForm = async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      await dispatch(\n        authActions.signup(name, email, mobileNumber, password, confirmPassword)\n      );\n      // props.navigation.navigate(\"Shop\");\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  // const submitForm = (event) => {\n  //   let url;\n  //\n  //   url =\n  //     \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCpQbjXMSb_MTPw0_Y7h_A4jqwO-oyUqYg\";\n  //   event.preventDefault();\n  //   fetch(url, {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       email: email,\n  //       password: password,\n  //       confirmPassword: confirmPassword,\n  //       name: name,\n  //       phoneNumber: mobileNumber,\n  //       returnSecureToken: true,\n  //     }),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   })\n  //     .then((res) => {\n  //       if (res.ok) {\n  //         return res.json();\n  //       } else {\n  //         return res.json().then((data) => {\n  //           let errorMessage = data.error.message;\n  //\n  //           if (errorMessage === \"EMAIL_EXISTS\") {\n  //             errorMessage = \"Email Already Exists.\";\n  //           }\n  //           throw new Error(errorMessage);\n  //         });\n  //       }\n  //     })\n  //     .then((data) => {\n  //       console.log(data);\n  //     })\n  //     .catch((err) => {\n  //       alert(err.message);\n  //     });\n  // };\n\n  if (isPageLoading) {\n    return <DotIndicator color={ColorsApp.PRIMARY} />;\n  }\n  return (\n    <SafeAreaView style={Styles.AuthPage}>\n      <ScrollView\n        contentContainerStyle={{\n          flexGrow: 1,\n          justifyContent: \"center\",\n          paddingBottom: 30,\n          paddingTop: 30,\n        }}\n      >\n        <Image\n          source={require(\"../assets/images/logo.png\")}\n          resizeMode={\"contain\"}\n          style={Styles.AuthLogo}\n        />\n\n        <View style={Styles.AuthContent}>\n          <TextInput\n            label=\"Name\"\n            mode=\"flat\"\n            style={Styles.AuthInput}\n            onChangeText={nameChangeHandler}\n            onBlur={nameBlurHandler}\n            value={name}\n          />\n\n          {nameHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>\n                *Name should contain at least 5 characters.\n              </Text>\n            </View>\n          )}\n          <TextInput\n            label=\"Email\"\n            mode=\"flat\"\n            autoCapitalize=\"none\"\n            style={Styles.AuthInput}\n            onChangeText={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={email}\n            keyboardType=\"email-address\"\n          />\n\n          {emailHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>*Incorrect Email </Text>\n            </View>\n          )}\n\n          <TextInput\n            label=\"Mobile Number\"\n            mode=\"flat\"\n            style={Styles.AuthInput}\n            onChangeText={mobileNumberChangeHandler}\n            onBlur={mobileNumberBlurHandler}\n            value={mobileNumber}\n            keyboardType=\"phone-pad\"\n          />\n\n          {mobileNumberHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>*Invalid mobile number </Text>\n            </View>\n          )}\n          <TextInput\n            label=\"Password\"\n            mode=\"flat\"\n            secureTextEntry={true}\n            style={Styles.AuthInput}\n            onChangeText={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n            value={password}\n          />\n\n          {passwordHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>\n                *6 minimum characters with uppercase & number\n              </Text>\n            </View>\n          )}\n          <TextInput\n            label=\"Confirm Password\"\n            mode=\"flat\"\n            secureTextEntry={true}\n            style={Styles.AuthInput}\n            onChangeText={confirmPasswordChangeHandler}\n            onBlur={confirmPasswordBlurHandler}\n            value={confirmPassword}\n          />\n\n          {confirmPasswordHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>*Password does not match </Text>\n            </View>\n          )}\n\n          {isLoading ? (\n            <View style={{ height: 72 }}>\n              <DotIndicator color={ColorsApp.PRIMARY} />\n            </View>\n          ) : (\n            <Button\n              mode=\"contained\"\n              onPress={submitForm}\n              style={{\n                ...Styles.AuthButton,\n                backgroundColor: formIsValid ? ColorsApp.PRIMARY : \"grey\",\n              }}\n              contentStyle={Styles.AuthButtonContent}\n              labelStyle={Styles.AuthButtonLabel}\n              disabled={!formIsValid}\n            >\n              Register\n            </Button>\n          )}\n\n          <View style={Styles.AuthBottomContent}>\n            <TouchableOpacity\n              activeOpacity={0.9}\n              onPress={() => onChangeScreen(\"Login\")}\n            >\n              <Text style={Styles.AuthBottomText}>\n                Already have an account?{\"  \"}\n                <Text style={{ fontWeight: \"bold\" }}>Sign In</Text>\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  Error: {\n    flexDirection: \"row\",\n    // alignItems: \"center\",\n    // justifyContent: \"center\",\n  },\n\n  ErrorMessage: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"left\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}