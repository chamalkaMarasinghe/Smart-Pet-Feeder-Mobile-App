{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppLoading from \"expo-app-loading\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport * as Font from \"expo-font\";\nimport { Images, products, materialTheme } from \"./constants/\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navigation from \"./navigation/Navigation\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport scheduleReducer from \"./store/reducer/schedules\";\nimport statusReducer from \"./store/reducer/status\";\nimport historyReducer from \"./store/reducer/history\";\nimport { enableScreens } from \"react-native-screens\";\nimport { useFonts } from \"expo-font\";\nenableScreens();\nvar rootReducer = combineReducers({\n  schedules: scheduleReducer,\n  status: statusReducer,\n  history: historyReducer\n});\nvar store = createStore(rootReducer);\nvar assetImages = [Images.Pro, Images.Profile, Images.Avatar, Images.Onboarding];\nproducts.map(function (product) {\n  return assetImages.push(product.image);\n});\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n    \"bebas-neue\": require(\"./assets/fonts/BebasNeue-Regular.ttf\"),\n    galio: require(\"./assets/fonts/galioExtra.ttf\"),\n    loobster: require(\"./assets/fonts/Lobster-Regular.ttf\")\n  });\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isLoadingComplete: false\n    };\n\n    _this._loadResourcesAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              useFonts();\n              return _context.abrupt(\"return\", Promise.all(_toConsumableArray(cacheImages(assetImages))));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleLoadingError = function (error) {\n      console.warn(error);\n    };\n\n    _this._handleFinishLoading = function () {\n      _this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadResourcesAsync && fetchFonts,\n          onError: this._handleLoadingError,\n          onFinish: this._handleFinishLoading,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(Provider, {\n          store: store,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        }, React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, React.createElement(GalioProvider, {\n          theme: materialTheme,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }\n        }, React.createElement(StatusBar, {\n          translucent: true,\n          backgroundColor: \"transparent\",\n          barStyle: \"light-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        }), React.createElement(Navigation, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/App.js"],"names":["React","AppLoading","Asset","Block","GalioProvider","Font","Images","products","materialTheme","NavigationContainer","Navigation","createStore","combineReducers","Provider","scheduleReducer","statusReducer","historyReducer","enableScreens","useFonts","rootReducer","schedules","status","history","store","assetImages","Pro","Profile","Avatar","Onboarding","map","product","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","fetchFonts","loadAsync","require","galio","loobster","App","state","isLoadingComplete","_loadResourcesAsync","Promise","all","_handleLoadingError","error","console","warn","_handleFinishLoading","setState","props","skipLoadingScreen","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Platform,\n  StatusBar,\n  Image,\n  SafeAreaView,\n  StyleSheet,\n} from \"react-native\";\nimport AppLoading from \"expo-app-loading\";\nimport { Asset } from \"expo-asset\";\nimport { Block, GalioProvider } from \"galio-framework\";\nimport * as Font from \"expo-font\";\n\nimport { Images, products, materialTheme } from \"./constants/\";\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navigation from \"./navigation/Navigation\";\n\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport scheduleReducer from \"./store/reducer/schedules\";\nimport statusReducer from \"./store/reducer/status\";\nimport historyReducer from \"./store/reducer/history\";\n\n// Before rendering any navigation stack\nimport { enableScreens } from \"react-native-screens\";\nimport { useFonts } from \"expo-font\";\n\nenableScreens();\n\nconst rootReducer = combineReducers({\n  schedules: scheduleReducer,\n  status: statusReducer,\n  history: historyReducer,\n});\nconst store = createStore(rootReducer);\n\n// cache app images\nconst assetImages = [\n  Images.Pro,\n  Images.Profile,\n  Images.Avatar,\n  Images.Onboarding,\n];\n\n// cache product images\nproducts.map((product) => assetImages.push(product.image));\n\nfunction cacheImages(images) {\n  return images.map((image) => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nconst fetchFonts = () => {\n  // Asynchronous func\n  return Font.loadAsync({\n    // fonts\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n    \"bebas-neue\": require(\"./assets/fonts/BebasNeue-Regular.ttf\"),\n    galio: require(\"./assets/fonts/galioExtra.ttf\"),\n    loobster: require(\"./assets/fonts/Lobster-Regular.ttf\"),\n  });\n};\n\nexport default class App extends React.Component {\n  state = {\n    isLoadingComplete: false,\n  };\n\n  render() {\n    if (!this.state.isLoadingComplete && !this.props.skipLoadingScreen) {\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync && fetchFonts}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n      return (\n        <Provider store={store}>\n          <NavigationContainer>\n            <GalioProvider theme={materialTheme}>\n              {/*<Block flex>*/}\n              {/*  {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}*/}\n              {/*</Block>*/}\n              <StatusBar\n                translucent\n                backgroundColor=\"transparent\"\n                barStyle={\"light-content\"}\n              />\n\n              <Navigation />\n            </GalioProvider>\n          </NavigationContainer>\n        </Provider>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    useFonts();\n    return Promise.all([...cacheImages(assetImages)]);\n  };\n\n  _handleLoadingError = (error) => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    this.setState({ isLoadingComplete: true });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}