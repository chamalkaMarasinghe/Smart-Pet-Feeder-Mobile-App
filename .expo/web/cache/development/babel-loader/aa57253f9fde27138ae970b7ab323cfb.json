{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/LatestRecipes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Styles from \"../config/Styles\";\nimport { getLatestRecipes } from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from \"./Heading\";\nimport { map, size } from \"lodash\";\nimport { Avatar, Button, Card, Badge, List, Title, Text, IconButton } from \"react-native-paper\";\nimport Strings from \"../config/Strings\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport LoadMoreButton from \"./LoadMoreButton\";\nimport EmptyResults from \"./EmptyResults\";\nexport default function LatestProperties() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showButton = _useState6[0],\n      setshowButton = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate(\"recipe\", {\n      id: id,\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    getLatestRecipes().then(function (response) {\n      setItems(response);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getLatestRecipes(page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 10,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      width: \"100%\",\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, map(items, function (item, i) {\n    return React.createElement(TouchableOpacity, {\n      key: i,\n      activeOpacity: 1,\n      onPress: function onPress() {\n        return onChangeScreen(item.id, item.title);\n      },\n      activeScale: 0.98,\n      tension: 100,\n      friction: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: item.image\n      },\n      style: Styles.background_card,\n      imageStyle: {\n        borderRadius: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, React.createElement(LinearGradient, {\n      colors: [\"rgba(0,0,0,0.1)\", \"rgba(0,0,0,0.7)\"],\n      style: Styles.gradient_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Styles.totalLikes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      color: \"red\",\n      size: 18,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: \"#fff\",\n        marginLeft: 5,\n        fontWeight: \"600\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, item.total_likes)), React.createElement(Text, {\n      numberOfLines: 2,\n      style: Styles.title_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, item.title), React.createElement(Text, {\n      numberOfLines: 2,\n      style: Styles.subtitle_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, React.createElement(Icon, {\n      style: Styles.ColProps3Icon,\n      name: \"account-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), \" \", item.servings, \" \", Strings.ST26, \"    \", React.createElement(Icon, {\n      style: Styles.ColProps3Icon,\n      name: \"clock-time-three-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), \" \", item.time))));\n  }), renderButton());\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/LatestRecipes.js"],"names":["React","useState","useEffect","Styles","getLatestRecipes","ConfigApp","Heading","map","size","Avatar","Button","Card","Badge","List","Title","Text","IconButton","Strings","LinearGradient","Grid","Row","Col","Icon","useNavigation","LoadMoreButton","EmptyResults","LatestProperties","items","setItems","page","setPage","showButton","setshowButton","loading","setLoading","navigation","onChangeScreen","id","title","navigate","then","response","loadMore","length","renderButton","width","marginTop","item","i","uri","image","background_card","borderRadius","gradient_card","totalLikes","color","marginLeft","fontWeight","total_likes","title_card","subtitle_card","ColProps3Icon","servings","ST26","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ScrollView,\n  View,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport Styles from \"../config/Styles\";\nimport { getLatestRecipes } from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from \"./Heading\";\n// import TouchableScale from 'react-native-touchable-scale';\nimport { map, size } from \"lodash\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  Badge,\n  List,\n  Title,\n  Text,\n  IconButton,\n} from \"react-native-paper\";\nimport Strings from \"../config/Strings\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Grid, Row, Col } from \"react-native-easy-grid\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport LoadMoreButton from \"./LoadMoreButton\";\nimport EmptyResults from \"./EmptyResults\";\n\nexport default function LatestProperties() {\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showButton, setshowButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n\n  const onChangeScreen = (id, title) => {\n    navigation.navigate(\"recipe\", { id, title });\n  };\n\n  useEffect(() => {\n    getLatestRecipes().then((response) => {\n      setItems(response);\n    });\n  }, []);\n\n  const loadMore = () => {\n    setLoading(true);\n    setPage(page + 1);\n\n    getLatestRecipes(page + 1).then((response) => {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n    });\n  };\n\n  const renderButton = () => {\n    return (\n      <LoadMoreButton\n        Indicator={loading}\n        showButton={showButton}\n        Items={items}\n        Num={10}\n        Click={() => loadMore()}\n      />\n    );\n  };\n\n  return (\n    <View style={{ width: \"100%\", marginTop: 20 }}>\n      {map(items, (item, i) => (\n        <TouchableOpacity\n          key={i}\n          activeOpacity={1}\n          onPress={() => onChangeScreen(item.id, item.title)}\n          activeScale={0.98}\n          tension={100}\n          friction={10}\n        >\n          <ImageBackground\n            source={{ uri: item.image }}\n            style={Styles.background_card}\n            imageStyle={{ borderRadius: 8 }}\n          >\n            <LinearGradient\n              colors={[\"rgba(0,0,0,0.1)\", \"rgba(0,0,0,0.7)\"]}\n              style={Styles.gradient_card}\n            >\n              <View style={Styles.totalLikes}>\n                <Icon name=\"heart\" color=\"red\" size={18}></Icon>\n                <Text\n                  style={{ color: \"#fff\", marginLeft: 5, fontWeight: \"600\" }}\n                >\n                  {item.total_likes}\n                </Text>\n              </View>\n\n              <Text numberOfLines={2} style={Styles.title_card}>\n                {item.title}\n              </Text>\n              <Text numberOfLines={2} style={Styles.subtitle_card}>\n                <Icon style={Styles.ColProps3Icon} name=\"account-outline\" />{\" \"}\n                {item.servings} {Strings.ST26}\n                {\"    \"}\n                <Icon\n                  style={Styles.ColProps3Icon}\n                  name=\"clock-time-three-outline\"\n                />{\" \"}\n                {item.time}\n              </Text>\n            </LinearGradient>\n          </ImageBackground>\n        </TouchableOpacity>\n      ))}\n\n      {renderButton()}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}