{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DotIndicator } from \"react-native-indicators\";\nimport { Text, TextInput, Button } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport useInput from \"../hooks/use-input\";\nimport * as Validators from \"../helpers/validators\";\nimport * as authActions from \"../store/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../store/actions/auth\";\nexport default function Login(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\", Validators.isEmail),\n      email = _useInput.value,\n      emailIsValid = _useInput.isValid,\n      emailHasError = _useInput.hasError,\n      emailChangeHandler = _useInput.valueChangeHandler,\n      emailBlurHandler = _useInput.inputBlurHandler,\n      resetEmail = _useInput.reset;\n\n  var _useInput2 = useInput(\"\", Validators.isNotEmpty),\n      password = _useInput2.value,\n      passwordIsValid = _useInput2.isValid,\n      passwordHasError = _useInput2.hasError,\n      passwordChangeHandler = _useInput2.valueChangeHandler,\n      passwordBlurHandler = _useInput2.inputBlurHandler,\n      resetPassword = _useInput2.reset;\n\n  var formIsValid = false;\n\n  if (emailIsValid && passwordIsValid) {\n    formIsValid = true;\n  }\n\n  useEffect(function () {\n    if (error) {\n      Alert.alert(\"Authentication Failed!\", error, [{\n        text: \"Okay\"\n      }]);\n    }\n  }, [error]);\n\n  var submitForm = function submitForm() {\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setError(null);\n            setIsLoading(true);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(dispatch(authActions.login(email, password)));\n\n          case 5:\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0.message);\n            setIsLoading(false);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Styles.AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/logo.png\"),\n    resizeMode: \"contain\",\n    style: _objectSpread(_objectSpread({}, Styles.AuthLogo), {}, {\n      marginBottom: 50\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: Styles.AuthContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"Email\",\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.AuthInput,\n    onChangeText: emailChangeHandler,\n    onBlur: emailBlurHandler,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), emailHasError && React.createElement(View, {\n    style: styles.Error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Invalid Email \")), React.createElement(TextInput, {\n    label: \"Password\",\n    mode: \"flat\",\n    secureTextEntry: true,\n    style: Styles.AuthInput,\n    onChangeText: passwordChangeHandler,\n    onBlur: passwordBlurHandler,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.ForgotPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Forgot Password?\")), isLoading ? React.createElement(View, {\n    style: {\n      height: 72\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, React.createElement(DotIndicator, {\n    color: ColorsApp.PRIMARY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  })) : React.createElement(Button, {\n    mode: \"contained\",\n    onPress: submitForm,\n    style: _objectSpread(_objectSpread({}, Styles.AuthButton), {}, {\n      backgroundColor: formIsValid ? ColorsApp.PRIMARY : \"grey\"\n    }),\n    contentStyle: Styles.AuthButtonContent,\n    labelStyle: Styles.AuthButtonLabel,\n    disabled: !formIsValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: Styles.AuthBottomContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen(\"Register\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.AuthBottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Don't have an account?\", \"  \", React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Register\")))))));\n}\nvar styles = StyleSheet.create({\n  Error: {\n    flexDirection: \"row\"\n  },\n  ErrorMessage: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"left\"\n  }\n});","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Login.js"],"names":["React","useState","useContext","useEffect","DotIndicator","Text","TextInput","Button","Styles","ColorsApp","useInput","Validators","authActions","useDispatch","login","Login","props","error","setError","isLoading","setIsLoading","dispatch","isEmail","email","value","emailIsValid","isValid","emailHasError","hasError","emailChangeHandler","valueChangeHandler","emailBlurHandler","inputBlurHandler","resetEmail","reset","isNotEmpty","password","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","formIsValid","Alert","alert","text","submitForm","message","onChangeScreen","screen","navigation","navigate","flex","justifyContent","AuthPage","require","AuthLogo","marginBottom","AuthContent","AuthInput","styles","Error","ErrorMessage","ForgotPass","height","PRIMARY","AuthButton","backgroundColor","AuthButtonContent","AuthButtonLabel","AuthBottomContent","AuthBottomText","fontWeight","StyleSheet","create","flexDirection","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Alert,\n  TouchableOpacity,\n  Image,\n  StyleSheet,\n} from \"react-native\";\n\nimport { DotIndicator } from \"react-native-indicators\";\n\nimport { Text, TextInput, Button } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport useInput from \"../hooks/use-input\";\nimport * as Validators from \"../helpers/validators\";\nimport * as authActions from \"../store/actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../store/actions/auth\";\n\nexport default function Login(props) {\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    value: email,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(\"\", Validators.isEmail);\n\n  const {\n    value: password,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(\"\", Validators.isNotEmpty);\n\n  let formIsValid = false;\n  if (emailIsValid && passwordIsValid) {\n    formIsValid = true;\n  }\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert(\"Authentication Failed!\", error, [{ text: \"Okay\" }]);\n    }\n  }, [error]);\n\n  const submitForm = async () => {\n    setError(null);\n    setIsLoading(true);\n    try {\n      await dispatch(authActions.login(email, password));\n      // props.navigation.navigate(\"Shop\");\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  // const submitForm = (event) => {\n  //   let url;\n  //   url =\n  //     \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCpQbjXMSb_MTPw0_Y7h_A4jqwO-oyUqYg\";\n  //\n  //   event.preventDefault();\n  //\n  //   fetch(url, {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       email: email,\n  //       password: password,\n  //       returnSecureToken: true,\n  //     }),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   })\n  //     .then((res) => {\n  //       if (res.ok) {\n  //         return res.json();\n  //       } else {\n  //         return res.json().then((data) => {\n  //           let errorMessage = \"Invalid Email or Password!\";\n  //           // if (data && data.error && data.error.message) {\n  //           //   errorMessage = data.error.message;\n  //           // }\n  //\n  //           throw new Error(errorMessage);\n  //         });\n  //       }\n  //     })\n  //     .then((data) => {\n  //       console.log(data);\n  //       const expirationTime = new Date(\n  //         new Date().getTime() + +data.expiresIn * 1000\n  //       );\n  //       console.log(data.expiresIn);\n  //       // authCtx.login(data.idToken, expirationTime.toISOString());\n  //     })\n  //     .catch((err) => {\n  //       alert(err.message);\n  //     });\n  // };\n\n  const onChangeScreen = (screen) => {\n    props.navigation.navigate(screen);\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n      <View style={Styles.AuthPage}>\n        <Image\n          source={require(\"../assets/images/logo.png\")}\n          resizeMode={\"contain\"}\n          style={{ ...Styles.AuthLogo, marginBottom: 50 }}\n        />\n\n        <View style={Styles.AuthContent}>\n          <TextInput\n            label=\"Email\"\n            mode=\"flat\"\n            autoCapitalize=\"none\"\n            style={Styles.AuthInput}\n            onChangeText={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={email}\n          />\n\n          {emailHasError && (\n            <View style={styles.Error}>\n              <Text style={styles.ErrorMessage}>Invalid Email </Text>\n            </View>\n          )}\n\n          <TextInput\n            label=\"Password\"\n            mode=\"flat\"\n            secureTextEntry={true}\n            style={Styles.AuthInput}\n            onChangeText={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n            value={password}\n          />\n\n          <TouchableOpacity activeOpacity={0.9}>\n            <Text style={Styles.ForgotPass}>Forgot Password?</Text>\n          </TouchableOpacity>\n\n          {isLoading ? (\n            <View style={{ height: 72 }}>\n              <DotIndicator color={ColorsApp.PRIMARY} />\n            </View>\n          ) : (\n            <Button\n              mode=\"contained\"\n              onPress={submitForm}\n              style={{\n                ...Styles.AuthButton,\n                backgroundColor: formIsValid ? ColorsApp.PRIMARY : \"grey\",\n              }}\n              contentStyle={Styles.AuthButtonContent}\n              labelStyle={Styles.AuthButtonLabel}\n              disabled={!formIsValid}\n            >\n              Login\n            </Button>\n          )}\n\n          <View style={Styles.AuthBottomContent}>\n            <TouchableOpacity\n              activeOpacity={0.9}\n              onPress={() => onChangeScreen(\"Register\")}\n            >\n              <Text style={Styles.AuthBottomText}>\n                Don't have an account?{\"  \"}\n                <Text style={{ fontWeight: \"bold\" }}>Register</Text>\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  Error: {\n    flexDirection: \"row\",\n    // alignItems: \"center\",\n    // justifyContent: \"center\",\n  },\n\n  ErrorMessage: {\n    color: \"red\",\n    fontSize: 12,\n    textAlign: \"left\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}