{"ast":null,"code":"var _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/CustomButton.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Styles from \"../config/Styles\";\nimport { Text } from 'react-native-paper';\nimport Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from '@react-navigation/native';\nimport TouchableScale from 'react-native-touchable-scale';\nexport default function CustomButton(props) {\n  var Icon = props.Icon,\n      Label = props.Label,\n      Click = props.Click;\n  var navigation = useNavigation();\n  return React.createElement(TouchableScale, {\n    activeOpacity: 1,\n    activeScale: 0.98,\n    tension: 100,\n    friction: 10,\n    onPress: Click,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: Styles.Button1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, React.createElement(Icons, {\n    name: Icon,\n    style: Styles.Button1IconLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: Styles.Button1Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, Label), React.createElement(Icons, {\n    name: I18nManager.isRTL ? \"chevron-left\" : \"chevron-right\",\n    style: Styles.Button1IconRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/CustomButton.js"],"names":["React","Styles","Text","Icons","useNavigation","TouchableScale","CustomButton","props","Icon","Label","Click","navigation","Button1","Button1IconLeft","Button1Text","I18nManager","isRTL","Button1IconRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,KAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAE1C,MAAOC,IAAP,GAA6BD,KAA7B,CAAOC,IAAP;AAAA,MAAaC,KAAb,GAA6BF,KAA7B,CAAaE,KAAb;AAAA,MAAoBC,KAApB,GAA6BH,KAA7B,CAAoBG,KAApB;AAEA,MAAMC,UAAU,GAAGP,aAAa,EAAhC;AAEA,SACC,oBAAC,cAAD;AAAgB,IAAA,aAAa,EAAE,CAA/B;AAAkC,IAAA,WAAW,EAAE,IAA/C;AAAqD,IAAA,OAAO,EAAE,GAA9D;AAAmE,IAAA,QAAQ,EAAE,EAA7E;AAAiF,IAAA,OAAO,EAAEM,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACW,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,IAAb;AAAmB,IAAA,KAAK,EAAEP,MAAM,CAACY,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCL,KAAlC,CAFA,EAGA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEM,WAAW,CAACC,KAAZ,GAAoB,cAApB,GAAqC,eAAlD;AAAmE,IAAA,KAAK,EAAEf,MAAM,CAACgB,gBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADA,CADD;AASD","sourcesContent":["import React from 'react';\nimport {View, TouchableOpacity, I18nManager} from 'react-native';\nimport Styles from '../config/Styles';\nimport { Text } from 'react-native-paper';\nimport Icons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport TouchableScale from 'react-native-touchable-scale';\n\nexport default function CustomButton(props) {\n\n\t\tconst {Icon, Label, Click} = props;\n\n\t\tconst navigation = useNavigation();\n\n\t\treturn(\n\t\t\t<TouchableScale activeOpacity={1} activeScale={0.98} tension={100} friction={10} onPress={Click}>\n\t\t\t<View style={Styles.Button1}>\n\t\t\t<Icons name={Icon} style={Styles.Button1IconLeft} />\n\t\t\t<Text style={Styles.Button1Text}>{Label}</Text>\n\t\t\t<Icons name={I18nManager.isRTL ? \"chevron-left\" : \"chevron-right\"} style={Styles.Button1IconRight} />\n\t\t\t</View>\n\t\t\t</TouchableScale>\n\t\t\t);\n}"]},"metadata":{},"sourceType":"module"}