{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sachi/Desktop/Mobile App/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Asset } from \"expo-asset\";\nimport AppLoading from \"expo-app-loading\";\nimport Loading from \"./application/components/AppLoading\";\nimport AdmobBanner from \"./application/components/AdmobBanner\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Provider as PaperProvider, DefaultTheme as DefaultThemePaper } from \"react-native-paper\";\nimport { NavigationContainer, DefaultTheme as DefaultThemeNav } from \"@react-navigation/native\";\nimport Navigation from \"./application/navigation/Navigation\";\nimport ColorsApp from \"./application/config/ColorsApp\";\nimport ConfigApp from \"./application/config/ConfigApp\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { checkUserApi, getUserData, setUserData, getLogged, setLogged } from \"./application/config/DataApp\";\nimport UserContext from \"./application/context/UserContext\";\nimport AdmobConfig from \"./application/config/AdmobConfig\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./application/store/reducers/auth\";\nvar rootReducer = combineReducers({\n  meals: authReducer\n});\nvar store = createStore(rootReducer);\nDefaultThemePaper.colors.primary = ColorsApp.PRIMARY;\nDefaultThemePaper.colors.placeholder = \"#959595\";\nDefaultThemePaper.colors.accent = ColorsApp.PRIMARY;\nDefaultThemeNav.colors.background = ColorsApp.BACKGROUND;\nDefaultThemeNav.colors.card = ColorsApp.HEADER;\nDefaultThemePaper.roundness = 6;\n\nvar cacheImages = function cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n};\n\nvar loadAssetsAsync = function loadAssetsAsync() {\n  var imageAssets;\n  return _regeneratorRuntime.async(function loadAssetsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          imageAssets = cacheImages([require(\"./assets/header.jpg\"), require(\"./assets/logo.png\"), require(\"./assets/logo-white.png\")]);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (!isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: loadAssetsAsync,\n      onError: console.warn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (isReady) {\n    return React.createElement(Provider, {\n      store: store,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, React.createElement(PaperProvider, {\n      theme: DefaultThemePaper,\n      settings: {\n        icon: function icon(props) {\n          return React.createElement(MaterialIcons, _extends({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 40\n            }\n          }));\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, React.createElement(StatusBar, {\n      translucent: true,\n      backgroundColor: \"transparent\",\n      barStyle: \"light-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), React.createElement(NavigationContainer, {\n      theme: DefaultThemeNav,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, React.createElement(Navigation, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), React.createElement(AdmobBanner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }))));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/App.js"],"names":["React","useState","useEffect","LogBox","Asset","AppLoading","Loading","AdmobBanner","AsyncStorage","Provider","PaperProvider","DefaultTheme","DefaultThemePaper","NavigationContainer","DefaultThemeNav","Navigation","ColorsApp","ConfigApp","MaterialIcons","checkUserApi","getUserData","setUserData","getLogged","setLogged","UserContext","AdmobConfig","createStore","combineReducers","authReducer","rootReducer","meals","store","colors","primary","PRIMARY","placeholder","accent","background","BACKGROUND","card","HEADER","roundness","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","loadAssetsAsync","imageAssets","require","Promise","all","App","isReady","setIsReady","console","warn","icon","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { LogBox, StatusBar } from \"react-native\";\nimport { Asset } from \"expo-asset\";\nimport AppLoading from \"expo-app-loading\";\nimport Loading from \"./application/components/AppLoading\";\nimport AdmobBanner from \"./application/components/AdmobBanner\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {\n  Provider as PaperProvider,\n  DefaultTheme as DefaultThemePaper,\n} from \"react-native-paper\";\nimport {\n  NavigationContainer,\n  DefaultTheme as DefaultThemeNav,\n} from \"@react-navigation/native\";\nimport Navigation from \"./application/navigation/Navigation\";\nimport ColorsApp from \"./application/config/ColorsApp\";\nimport ConfigApp from \"./application/config/ConfigApp\";\nimport MaterialIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport {\n  checkUserApi,\n  getUserData,\n  setUserData,\n  getLogged,\n  setLogged,\n} from \"./application/config/DataApp\";\nimport UserContext from \"./application/context/UserContext\";\nimport AdmobConfig from \"./application/config/AdmobConfig\";\n\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport authReducer from \"./application/store/reducers/auth\";\n\nconst rootReducer = combineReducers({\n  meals: authReducer,\n});\n\nconst store = createStore(rootReducer);\n\nDefaultThemePaper.colors.primary = ColorsApp.PRIMARY;\nDefaultThemePaper.colors.placeholder = \"#959595\";\nDefaultThemePaper.colors.accent = ColorsApp.PRIMARY;\nDefaultThemeNav.colors.background = ColorsApp.BACKGROUND;\nDefaultThemeNav.colors.card = ColorsApp.HEADER;\nDefaultThemePaper.roundness = 6;\n\n// LogBox.ignoreAllLogs();\n\nconst cacheImages = (images) => {\n  return images.map((image) => {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n};\n\nconst loadAssetsAsync = async () => {\n  const imageAssets = cacheImages([\n    require(\"./assets/header.jpg\"),\n    require(\"./assets/logo.png\"),\n    require(\"./assets/logo-white.png\"),\n  ]);\n\n  await Promise.all([...imageAssets]);\n};\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(false);\n  // const [loaded, setLoaded] = useState(false);\n  // const [user, setUser] = useState([]);\n\n  // const updateValue = (user) => {\n  //   setUser(user);\n  // };\n\n  // const checkUser = async () => {\n  //   try {\n  //     await getUserData().then((resp) => {\n  //       if (resp.length >= 1) {\n  //         const email = resp[0][\"user_email\"];\n  //\n  //         setUser(resp[0]);\n  //         updateValue(resp[0]);\n  //\n  //         checkUserApi(email).then((response) => {\n  //           if (response !== \"error\") {\n  //             setUserData(response).then((response) => {\n  //               setLogged(true);\n  //             });\n  //           } else if (response === \"error\") {\n  //             setLogged(false);\n  //           }\n  //         });\n  //       } else {\n  //         setLogged(false);\n  //       }\n  //     });\n  //   } catch (error) {\n  //     setLogged(false);\n  //     // console.log(\"Error\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   //moment.locale(\"es\");\n  //\n  //   LogBox.ignoreLogs([\"VirtualizedLists should never be nested\"]);\n  //\n  //   checkUser();\n  //   setTimeout(() => {\n  //     setLoaded(true);\n  //   }, 1500);\n  //\n  //   AdmobConfig.ShowInterstitial();\n  // }, []);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={loadAssetsAsync}\n        // onFinish={() => setIsReady(true)}\n        onError={console.warn}\n      />\n    );\n  }\n\n  if (isReady) {\n    return (\n      <Provider store={store}>\n        <PaperProvider\n          theme={DefaultThemePaper}\n          settings={{ icon: (props) => <MaterialIcons {...props} /> }}\n        >\n          <StatusBar\n            translucent\n            backgroundColor=\"transparent\"\n            barStyle={\"light-content\"}\n          />\n          <NavigationContainer theme={DefaultThemeNav}>\n            <Navigation />\n            <AdmobBanner />\n          </NavigationContainer>\n        </PaperProvider>\n      </Provider>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}