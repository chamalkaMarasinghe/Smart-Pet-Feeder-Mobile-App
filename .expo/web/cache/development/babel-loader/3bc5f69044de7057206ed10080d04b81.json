{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Login.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nimport { signInApi, setUserData, setLogged } from \"../config/DataApp\";\nimport UserContext from \"../context/UserContext\";\nexport default function Login(props) {\n  var contextState = useContext(UserContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  var updateValue = function updateValue(user) {\n    setUser(user);\n  };\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (email, password) {\n              signInApi(email, password).then(function (response) {\n                if (response != 'error' && response != 'incomplete') {\n                  setUserData(response);\n                  contextState.updateValue(response[0]);\n                  setLoading(false);\n                  setLogged(true);\n                  props.navigation.navigate('home');\n                } else if (response === 'error') {\n                  setUserData([]);\n                  setLoading(false);\n                  setLogged(false);\n                  Alert.alert(Strings.ST104, Strings.ST32);\n                } else if (response === 'incomplete') {\n                  setLoading(false);\n                  Alert.alert(Strings.ST104, Strings.ST33);\n                }\n              });\n            } else {\n              setLoading(false);\n              Alert.alert(Strings.ST104, Strings.ST33);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Styles.AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/logo.png\"),\n    resizeMode: \"contain\",\n    style: Styles.AuthLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: Styles.AuthContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: Strings.ST19,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.AuthInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: Strings.ST20,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    mode: \"flat\",\n    secureTextEntry: true,\n    style: Styles.AuthInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen('forgot');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Styles.ForgotPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, Strings.ST15)), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return login();\n    },\n    style: Styles.AuthButton,\n    contentStyle: Styles.AuthButtonContent,\n    labelStyle: Styles.AuthButtonLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, !loading ? Strings.ST17 : Strings.ST31), React.createElement(View, {\n    style: Styles.AuthBottomContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen('register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Styles.AuthBottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, Strings.ST12, \" \", React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }\n  }, Strings.ST35)))))));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Login.js"],"names":["React","useState","useContext","Text","TextInput","Button","Styles","Strings","signInApi","setUserData","setLogged","UserContext","Login","props","contextState","loading","setLoading","email","setEmail","password","setPassword","onChangeScreen","screen","navigation","navigate","updateValue","user","setUser","login","then","response","Alert","alert","ST104","ST32","ST33","flex","justifyContent","AuthPage","require","AuthLogo","AuthContent","ST19","text","AuthInput","ST20","ForgotPass","ST15","AuthButton","AuthButtonContent","AuthButtonLabel","ST17","ST31","AuthBottomContent","AuthBottomText","ST12","fontWeight","ST35"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { SafeAreaView, View, Alert, TouchableOpacity, Image, ScrollView } from 'react-native';\nimport { Text, TextInput, Button } from 'react-native-paper';\nimport Styles from '../config/Styles';\nimport Strings from '../config/Strings';\nimport { signInApi, setUserData, setLogged } from \"../config/DataApp\";\nimport UserContext from '../context/UserContext';\n\nexport default function Login(props) {\n\n    const contextState = useContext(UserContext);\n    const [loading, setLoading] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const onChangeScreen = (screen) => {\n        props.navigation.navigate(screen);\n    };\n\n  const updateValue = (user) => {\n    setUser(user);\n  }\n\n  const login = async () => {\n\n    setLoading(true);\n    \n    if (email, password) {\n\n        signInApi(email, password).then(response => {\n              \n              if (response != 'error' && response != 'incomplete') {\n                setUserData(response);\n                contextState.updateValue(response[0]);\n                setLoading(false);\n                setLogged(true);\n                props.navigation.navigate('home');\n\n              }else if(response === 'error'){\n\n                setUserData([]);\n                setLoading(false);\n                setLogged(false);\n                Alert.alert(Strings.ST104, Strings.ST32);\n\n              }else if(response === 'incomplete'){\n                setLoading(false);\n                Alert.alert(Strings.ST104, Strings.ST33);\n              }\n\n        });\n\n      }else{\n            setLoading(false);\n            Alert.alert(Strings.ST104, Strings.ST33);\n          }\n      }\n\n      return (\n\n\n        <SafeAreaView style={{flex: 1, justifyContent: 'center'}}>\n        <View style={Styles.AuthPage}>\n\n        <Image source={require('../../assets/logo.png')} resizeMode={\"contain\"} style={Styles.AuthLogo} />\n\n        <View style={Styles.AuthContent}>\n\n        <TextInput label={Strings.ST19} onChangeText={text => setEmail(text)} mode=\"flat\" autoCapitalize=\"none\" style={Styles.AuthInput} />\n        <TextInput label={Strings.ST20} onChangeText={text => setPassword(text)} mode=\"flat\" secureTextEntry={true} style={Styles.AuthInput} />\n        <TouchableOpacity activeOpacity={0.9} onPress={() => onChangeScreen('forgot')}>\n        <Text style={Styles.ForgotPass}>{Strings.ST15}</Text>\n        </TouchableOpacity>\n        <Button mode=\"contained\" onPress={()=> login()} style={Styles.AuthButton} contentStyle={Styles.AuthButtonContent} labelStyle={Styles.AuthButtonLabel}>\n        {!loading ? Strings.ST17 : Strings.ST31}\n        </Button>\n\n        <View style={Styles.AuthBottomContent}>\n        <TouchableOpacity activeOpacity={0.9} onPress={() => onChangeScreen('register')}>\n        <Text style={Styles.AuthBottomText}>\n        {Strings.ST12} <Text style={{fontWeight: 'bold'}}>{Strings.ST35}</Text>\n        </Text>\n        </TouchableOpacity>\n        </View>\n\n        </View>\n        </View>\n        </SafeAreaView>\n\n\n        );\n  }\n"]},"metadata":{},"sourceType":"module"}