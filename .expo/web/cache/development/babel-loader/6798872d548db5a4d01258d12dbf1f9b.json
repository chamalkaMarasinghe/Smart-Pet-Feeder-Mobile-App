{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Terms.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getStrings } from \"../config/DataApp\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { HTMLStyles } from \"../config/HTMLStyles\";\nimport HTMLView from 'react-native-htmlview';\nimport Styles from \"../config/Styles\";\nimport AppLoading from \"../components/AppLoading\";\nimport Strings from \"../config/Strings\";\nexport default function Terms() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      item = _useState4[0],\n      setItem = _useState4[1];\n\n  useEffect(function () {\n    getStrings().then(function (response) {\n      setItem(response[0]);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 2\n      }\n    }, React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: Styles.TermsAboutPageScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, React.createElement(HTMLView, {\n      value: item.tr_termsandconds,\n      stylesheet: HTMLStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }))));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Terms.js"],"names":["React","useState","useEffect","getStrings","HTMLStyles","HTMLView","Styles","AppLoading","Strings","Terms","isLoaded","setIsLoaded","item","setItem","then","response","TermsAboutPageScreen","tr_termsandconds"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT;;;;AAEA,SAASC,UAAT;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE/B,kBAAgCR,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AAEDX,EAAAA,SAAS,CAAC,YAAM;AAEdC,IAAAA,UAAU,GAAGW,IAAb,CAAkB,UAACC,QAAD,EAAc;AAC9BF,MAAAA,OAAO,CAACE,QAAQ,CAAC,CAAD,CAAT,CAAP;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD;AAKD,GAPQ,EAON,EAPM,CAAT;;AASE,MAAID,QAAJ,EAAc;AAEf,WAEA,oBAAC,UAAD;AAAY,MAAA,8BAA8B,EAAE,KAA5C;AAAmD,MAAA,4BAA4B,EAAE,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACU,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,IAAI,CAACK,gBAAtB;AAAwC,MAAA,UAAU,EAAEb,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,CADH,CAFA;AAYI,GAdH,MAcO;AACN,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;AAED","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getStrings } from \"../config/DataApp\";\nimport { View, ScrollView, SafeAreaView } from 'react-native';\nimport { HTMLStyles } from '../config/HTMLStyles';\nimport HTMLView from 'react-native-htmlview';\nimport Styles from '../config/Styles';\nimport AppLoading from '../components/AppLoading';\nimport Strings from '../config/Strings';\n\nexport default function Terms() {\n\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [item, setItem] = useState('');\n\nuseEffect(() => {\n\n  getStrings().then((response) => {\n    setItem(response[0]);\n    setIsLoaded(true);\n  });\n\n}, []);\n\n  if (isLoaded) {\n\n return (\n\n\t<ScrollView showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\n    <SafeAreaView>\n    <View style={Styles.TermsAboutPageScreen}>\n    <HTMLView value={item.tr_termsandconds} stylesheet={HTMLStyles}/>\n    </View>\n    </SafeAreaView>\n    </ScrollView>\n\n      );\n\n    }else{\n   return (\n     <AppLoading/>\n     );\n }\n \n}\n\n"]},"metadata":{},"sourceType":"module"}