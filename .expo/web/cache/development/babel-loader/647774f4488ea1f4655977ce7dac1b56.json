{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Members.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AppLoading from \"../components/AppLoading\";\nimport { getMembers } from \"../config/DataApp\";\nimport Heading from \"../components/Heading\";\nimport { map, size } from \"lodash\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport { Text, List, Avatar } from 'react-native-paper';\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport EmptyResults from \"../components/EmptyResults\";\nexport default function Members(props) {\n  var _this = this;\n\n  var route = props.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showButton = _useState6[0],\n      setshowButton = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoaded = _useState10[0],\n      setIsLoaded = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      total = _useState12[0],\n      setTotal = _useState12[1];\n\n  var onChangeScreen = function onChangeScreen(id, name) {\n    props.navigation.navigate('singlemember', {\n      id: id,\n      name: name\n    });\n  };\n\n  useEffect(function () {\n    getMembers(page).then(function (response) {\n      setItems(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getMembers(page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 10,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    });\n  };\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: Styles.MembersScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, map(items, function (item, i) {\n      return React.createElement(List.Item, {\n        key: i,\n        title: item.name,\n        description: item.username,\n        titleStyle: {\n          fontWeight: 'bold',\n          marginBottom: 3\n        },\n        descriptionStyle: {\n          fontSize: 16\n        },\n        onPress: function onPress() {\n          return onChangeScreen(item.id, item.name);\n        },\n        activeOpacity: 1,\n        titleNumberOfLines: 2,\n        underlayColor: \"#ffffff\",\n        rippleColor: \"rgba(0, 0, 0, .01)\",\n        left: function left(props) {\n          return React.createElement(Avatar.Image, {\n            size: 80,\n            style: {\n              marginRight: 10\n            },\n            source: {\n              uri: item.avatar\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 24\n            }\n          });\n        },\n        right: function right(props) {\n          return React.createElement(List.Icon, _extends({}, props, {\n            icon: \"chevron-right\",\n            style: {\n              alignSelf: 'center',\n              opacity: 0.3\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      });\n    }), renderButton()), React.createElement(View, {\n      style: {\n        height: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Members.js"],"names":["React","useState","useEffect","AppLoading","getMembers","Heading","map","size","Styles","Strings","ColorsApp","Text","List","Avatar","LoadMoreButton","EmptyResults","Members","props","route","items","setItems","page","setPage","showButton","setshowButton","loading","setLoading","isLoaded","setIsLoaded","total","setTotal","onChangeScreen","id","name","navigation","navigate","then","response","loadMore","length","renderButton","MembersScreen","item","i","username","fontWeight","marginBottom","fontSize","marginRight","uri","avatar","alignSelf","opacity","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet, ImageBackground, TouchableOpacity, SafeAreaView } from 'react-native';\nimport AppLoading from '../components/AppLoading';\nimport {getMembers} from \"../config/DataApp\";\nimport Heading from '../components/Heading';\nimport { map, size } from \"lodash\";\nimport Styles from '../config/Styles';\nimport Strings from '../config/Strings';\nimport ColorsApp from '../config/ColorsApp';\nimport { Text, List, Avatar } from 'react-native-paper';\nimport LoadMoreButton from '../components/LoadMoreButton';\nimport EmptyResults from '../components/EmptyResults';\n\nexport default function Members(props) {\n\n  const { route } = props;\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showButton, setshowButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [total, setTotal] = useState('');\n\n  const onChangeScreen = (id, name) => {\n    props.navigation.navigate('singlemember', {id, name});\n  };\n\n  useEffect(() => {\n    getMembers(page).then((response) => {\n        setItems(response);\n        setIsLoaded(true);\n    });\n  }, []);\n\n\n  const loadMore = () => {\n\n    setLoading(true);\n    setPage(page+1);\n\n    getMembers(page+1).then((response) => {\n\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      }else{\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n\n    });\n\n  };\n\n  const renderButton = () => {\n\n    return (\n      <LoadMoreButton\n      Indicator={loading}\n      showButton={showButton}\n      Items={items}\n      Num={10}\n      Click={() => loadMore()}/>\n      )\n  }\n\n  if (isLoaded) {\n\n      return(\n\n    <ScrollView showsVerticalScrollIndicator={false} showsHorizontalScrollIndicator={false}>\n    <View style={Styles.MembersScreen}>\n\n        {map(items, (item, i) => (\n\n        <List.Item\n        key={i}\n        title={item.name}\n        description={item.username}\n        titleStyle={{fontWeight: 'bold', marginBottom: 3}}\n        descriptionStyle={{fontSize: 16}}\n        onPress={() => onChangeScreen(item.id, item.name)}\n        activeOpacity={1}\n        titleNumberOfLines={2}\n        underlayColor=\"#ffffff\"\n        rippleColor=\"rgba(0, 0, 0, .01)\"\n        left={props => <Avatar.Image size={80} style={{marginRight: 10}} source={{uri: item.avatar}} />}\n        right={props => <List.Icon {...props} icon=\"chevron-right\" style={{alignSelf: 'center', opacity: 0.3}} />}\n      />\n\n          ))}\n\n        {renderButton()}\n\n    </View>\n\n    <View style={{height: 80}}></View>\n\n    </ScrollView>\n\n        );\n\n  }else{\n   return (\n     <AppLoading/>\n     );\n }\n \n}\n\n"]},"metadata":{},"sourceType":"module"}