{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Favorites.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Avatar, List, IconButton } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { map, size } from 'lodash';\nimport Strings from \"../config/Strings\";\nimport Styles from \"../config/Styles\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport { getFavorites, submitUnLike } from \"../config/DataApp\";\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport Empty from \"../components/Empty\";\nimport EmptyResults from \"../components/EmptyResults\";\nimport UserContext from \"../context/UserContext\";\nexport default function Favorites(props) {\n  var _this = this;\n\n  var contextState = useContext(UserContext);\n  var userInfo = contextState.user;\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoaded = _useState6[0],\n      setIsLoaded = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showButton = _useState8[0],\n      setshowButton = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate('recipe', {\n      id: id,\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    getFavorites(userInfo.user_id).then(function (response) {\n      setItems(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  var removeBookmark = function removeBookmark(UserId, itemId) {\n    return _regeneratorRuntime.async(function removeBookmark$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            submitUnLike(UserId, itemId).then(function (token) {\n              if (token === 'unliked') {\n                getFavorites(userInfo.user_id).then(function (response) {\n                  setItems(response);\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getFavorites(userInfo.user_id, page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 6,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderProperties = function renderProperties() {\n    if (!items || size(items) < 1) {\n      return null;\n    } else {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }\n      }, map(items, function (item, index) {\n        return React.createElement(List.Item, {\n          key: index,\n          title: item.title,\n          titleStyle: {\n            fontWeight: 'bold',\n            marginBottom: 3\n          },\n          onPress: function onPress() {\n            return onChangeScreen(item.id, item.title);\n          },\n          activeOpacity: 1,\n          titleNumberOfLines: 2,\n          underlayColor: \"#ffffff\",\n          rippleColor: \"rgba(0, 0, 0, .01)\",\n          left: function left(props) {\n            return React.createElement(Avatar.Image, {\n              size: 80,\n              style: {\n                marginRight: 10\n              },\n              source: {\n                uri: item.image\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 27\n              }\n            });\n          },\n          right: function right(props) {\n            return React.createElement(IconButton, _extends({\n              icon: \"trash-can-outline\"\n            }, props, {\n              style: {\n                alignSelf: 'center'\n              },\n              animated: true,\n              color: \"red\",\n              onPress: function onPress() {\n                return removeBookmark(userInfo.user_id, item.id);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 22\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 6\n          }\n        });\n      }));\n    }\n  };\n\n  if (size(items) < 1) {\n    return React.createElement(Empty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 4\n      }\n    });\n  } else {\n    return React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 1\n      }\n    }, React.createElement(View, {\n      style: Styles.FullHeightScreen2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 4\n      }\n    }, React.createElement(List.Section, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 4\n      }\n    }, renderProperties(), renderButton())));\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Favorites.js"],"names":["React","useState","useEffect","useContext","Avatar","List","IconButton","AsyncStorage","map","size","Strings","Styles","ConfigApp","getFavorites","submitUnLike","LoadMoreButton","Empty","EmptyResults","UserContext","Favorites","props","contextState","userInfo","user","navigation","items","setItems","page","setPage","isLoaded","setIsLoaded","showButton","setshowButton","loading","setLoading","onChangeScreen","id","title","navigate","user_id","then","response","removeBookmark","UserId","itemId","token","loadMore","length","renderButton","renderProperties","item","index","fontWeight","marginBottom","marginRight","uri","image","alignSelf","FullHeightScreen2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { Avatar, List, IconButton } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {map, size} from 'lodash';\nimport Strings from '../config/Strings';\nimport Styles from '../config/Styles';\nimport ConfigApp from '../config/ConfigApp';\nimport { getFavorites, submitUnLike } from \"../config/DataApp\";\nimport LoadMoreButton from '../components/LoadMoreButton';\nimport Empty from '../components/Empty';\nimport EmptyResults from '../components/EmptyResults';\nimport UserContext from '../context/UserContext';\n\nexport default function Favorites(props) {\n\n\tconst contextState = useContext(UserContext);\n\tconst userInfo = contextState.user;\n\n  \tconst { navigation } = props;\n\tconst [items, setItems] = useState([]);\n  \tconst [page, setPage] = useState(1);\n  \tconst [isLoaded, setIsLoaded] = useState(false);\n  \tconst [showButton, setshowButton] = useState(true);\n  \tconst [loading, setLoading] = useState(false);\n\n\n  const onChangeScreen = (id, title) => {\n    navigation.navigate('recipe', {id, title});\n  };\n\n\tuseEffect(() => {\n\n\t\tgetFavorites(userInfo.user_id).then((response) => {\n\t\t\tsetItems(response);\n\t\t\tsetIsLoaded(true);\n\t\t});\n\n\t}, []);\n\nconst removeBookmark = async (UserId, itemId) => {\n\n submitUnLike(UserId, itemId).then(token => {\n  if (token === 'unliked') {\n\t\tgetFavorites(userInfo.user_id).then((response) => {\n\t\t\tsetItems(response);\n\t\t});\n  }\n});\n\n};\n\n  const loadMore = () => {\n\n    setLoading(true);\n    setPage(page+1);\n\n    getFavorites(userInfo.user_id, page+1).then((response) => {\n\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      }else{\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n\n    });\n\n  };\n\n  const renderButton = () => {\n\n    return (\n      <LoadMoreButton\n      Indicator={loading}\n      showButton={showButton}\n      Items={items}\n      Num={6}\n      Click={() => loadMore()}/>\n      )\n  }\n\n\tconst renderProperties = () => {\n\n\t\tif (!items || size(items) < 1 ) {\n\n\t\t\treturn null;\n\n\t\t}else {\n\n\t\t\treturn (\n\t\t\t\t<View>\n\n\t\t\t\t{map(items, (item, index) => (\n\t\t\t\t\t<List.Item\n\t\t\t        key={index}\n\t\t\t        title={item.title}\n\t\t\t        titleStyle={{fontWeight: 'bold', marginBottom: 3}}\n\t\t\t        onPress={() => onChangeScreen(item.id, item.title)}\n\t\t\t        activeOpacity={1}\n\t\t\t        titleNumberOfLines={2}\n\t\t\t        underlayColor=\"#ffffff\"\n        \t\t\trippleColor=\"rgba(0, 0, 0, .01)\"\n\t\t\t        left={props => <Avatar.Image size={80} style={{marginRight: 10}} source={{uri: item.image}} />}\n\t\t\t\t\tright={props => <IconButton icon={\"trash-can-outline\"} {...props} style={{alignSelf: 'center'}} animated={true} color=\"red\" onPress={() => removeBookmark(userInfo.user_id, item.id)}/>}\n\t\t\t      />\n\n\t\t\t\t\t))}\n\n\t\t\t\t</View>\n\t\t\t\t);\n\t\t}\n\n\t};\n\n\tif (size(items) < 1) {\n\n\t\treturn(\n\t\t\t<Empty/>\n\t\t\t);\n\n\t}else{\n\t\treturn (\n\n<ScrollView\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}\n          >\n\t\t\t<View style={Styles.FullHeightScreen2}>\n\t\t\t<List.Section>\n\t\t\t{renderProperties()}\n        \t{renderButton()}\n\n\t\t\t</List.Section>\n\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t\t);\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}