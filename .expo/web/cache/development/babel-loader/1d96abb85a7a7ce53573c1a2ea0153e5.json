{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Submit.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Button } from 'react-native-paper';\nimport { WebView } from 'react-native-webview';\nimport { getLogged } from \"../config/DataApp\";\nimport Styles from \"../config/Styles\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport Strings from \"../config/Strings\";\nimport UserContext from \"../context/UserContext\";\nexport default function Submit(props) {\n  var contextState = useContext(UserContext);\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogged = _useState2[0],\n      setisLogged = _useState2[1];\n\n  var checkLogged = function checkLogged() {\n    var response;\n    return _regeneratorRuntime.async(function checkLogged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getLogged());\n\n          case 2:\n            response = _context.sent;\n            setisLogged(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    navigation.navigate(screen);\n  };\n\n  useEffect(function () {\n    checkLogged();\n  }, []);\n\n  if (isLogged === 'true') {\n    return React.createElement(WebView, {\n      source: {\n        uri: ConfigApp.URL + 'submit-recipe'\n      },\n      javaScriptEnabled: true,\n      domStorageEnabled: true,\n      renderLoading: this.ActivityIndicatorLoadingView,\n      startInLoadingState: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, React.createElement(Icon, {\n      name: \"account-lock\",\n      color: \"black\",\n      size: 100,\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }), React.createElement(Button, {\n      mode: \"contained\",\n      style: {\n        borderRadius: 100\n      },\n      contentStyle: Styles.SignButtonContent,\n      labelStyle: Styles.SignButtonLabel,\n      onPress: function onPress() {\n        return onChangeScreen(\"login\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, Strings.ST10), React.createElement(TouchableOpacity, {\n      activeOpacity: 0.9,\n      onPress: function onPress() {\n        return onChangeScreen('register');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: Styles.SignButtonTextContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, Strings.ST12, \" \", React.createElement(Text, {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, Strings.ST35))));\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Submit.js"],"names":["React","useState","useEffect","useContext","Text","Button","WebView","getLogged","Styles","Icon","ConfigApp","ColorsApp","Strings","UserContext","Submit","props","contextState","navigation","isLogged","setisLogged","checkLogged","response","onChangeScreen","screen","navigate","uri","URL","ActivityIndicatorLoadingView","flex","justifyContent","alignContent","alignItems","marginBottom","borderRadius","SignButtonContent","SignButtonLabel","ST10","SignButtonTextContent","ST12","fontWeight","ST35"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { SafeAreaView, ScrollView, View, Image, TouchableOpacity } from 'react-native';\nimport { Text, Button} from 'react-native-paper';\nimport {WebView} from 'react-native-webview';\nimport { getLogged } from \"../config/DataApp\";\nimport Styles from '../config/Styles';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport ConfigApp from '../config/ConfigApp';\nimport ColorsApp from '../config/ColorsApp';\nimport Strings from '../config/Strings';\nimport UserContext from '../context/UserContext';\n\nexport default function Submit(props) {\n\n  \tconst contextState = useContext(UserContext);\n\tconst {navigation} = props;\n\tconst [isLogged, setisLogged] = useState('');\n\n\tconst checkLogged = async () => {\n\t\tconst response = await getLogged();\n\t\tsetisLogged(response);\n\t}\n\n\tconst onChangeScreen = (screen) => {\n\t\tnavigation.navigate(screen);\n\t};\n\n\n\tuseEffect(() => {\n\n\t\tcheckLogged();\n\n\t}, []);\n\n\tif (isLogged === 'true') {\n\n\t\treturn (\n\n \t\t<WebView \n         source={{uri: ConfigApp.URL+'submit-recipe'}} \n         javaScriptEnabled={true}\n         domStorageEnabled={true}\n         renderLoading={this.ActivityIndicatorLoadingView} \n         startInLoadingState={false}  \n         />\n\n\t\t\t);\n\n\t}else{\n\n\t\treturn (\n\n\t\t\t<View style={{flex: 1, justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n\t\t\t<Icon name=\"account-lock\" color=\"black\" size={100} style={{marginBottom: 20}}/>\n\t\t\t<Button mode=\"contained\" style={{borderRadius: 100}} contentStyle={Styles.SignButtonContent} labelStyle={Styles.SignButtonLabel} onPress={() => onChangeScreen(\"login\")}>\n\t\t\t{Strings.ST10}\n\t\t\t</Button>\n\n\t\t\t<TouchableOpacity activeOpacity={0.9} onPress={() => onChangeScreen('register')}>\n\t\t\t<Text style={Styles.SignButtonTextContent}>\n\t\t\t{Strings.ST12} <Text style={{fontWeight: 'bold'}}>{Strings.ST35}</Text>\n\t\t\t</Text>\n\t\t\t</TouchableOpacity>\n\n\t\t\t</View>\n\t\t\t\n\t\t\t);\n\n\t}\n\n}\n\n"]},"metadata":{},"sourceType":"module"}