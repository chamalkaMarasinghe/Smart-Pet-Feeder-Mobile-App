{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/SingleCategory.js\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Divider, Avatar, List, Button } from 'react-native-paper';\nimport { getRecipesByCategory } from \"../config/DataApp\";\nimport Styles from \"../config/Styles\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Strings from \"../config/Strings\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport { map } from 'lodash';\nimport AppLoading from \"../components/AppLoading\";\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport Empty from \"../components/Empty\";\nimport EmptyResults from \"../components/EmptyResults\";\nimport UserContext from \"../context/UserContext\";\nexport default function SingleCategory(props) {\n  var _this = this;\n\n  var contextState = useContext(UserContext);\n  var userInfo = contextState.user;\n  var route = props.route;\n  var navigation = props.navigation;\n  var _route$params = route.params,\n      id = _route$params.id,\n      name = _route$params.name;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showButton = _useState8[0],\n      setshowButton = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate('recipe', {\n      id: id,\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    props.navigation.setOptions({\n      title: name\n    });\n  }, []);\n  useEffect(function () {\n    getRecipesByCategory(id).then(function (response) {\n      setData(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getRecipesByCategory(id, page + 1).then(function (response) {\n      if (!data) {\n        setData(response);\n        setLoading(false);\n      } else {\n        setData([].concat(_toConsumableArray(data), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: data,\n      Num: 10,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    });\n  };\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: Styles.PageScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, map(data, function (item, i) {\n      return React.createElement(List.Item, {\n        key: i,\n        title: item.title,\n        titleStyle: {\n          fontWeight: 'bold',\n          marginBottom: 3\n        },\n        onPress: function onPress() {\n          return onChangeScreen(item.id, item.title);\n        },\n        activeOpacity: 1,\n        titleNumberOfLines: 2,\n        underlayColor: \"#ffffff\",\n        rippleColor: \"rgba(0, 0, 0, .01)\",\n        left: function left(props) {\n          return React.createElement(Avatar.Image, {\n            size: 80,\n            style: {\n              marginRight: 10\n            },\n            source: {\n              uri: item.image\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 24\n            }\n          });\n        },\n        right: function right(props) {\n          return React.createElement(List.Icon, _extends({}, props, {\n            icon: \"chevron-right\",\n            style: {\n              alignSelf: 'center',\n              opacity: 0.3\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      });\n    }), renderButton(), React.createElement(View, {\n      style: {\n        height: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/SingleCategory.js"],"names":["React","useState","useEffect","useRef","useContext","Text","Divider","Avatar","List","Button","getRecipesByCategory","Styles","ConfigApp","Strings","ColorsApp","map","AppLoading","Col","Grid","Icon","LoadMoreButton","Empty","EmptyResults","UserContext","SingleCategory","props","contextState","userInfo","user","route","navigation","params","id","name","page","setPage","isLoaded","setIsLoaded","data","setData","showButton","setshowButton","loading","setLoading","onChangeScreen","title","navigate","setOptions","then","response","loadMore","length","renderButton","PageScreen","item","i","fontWeight","marginBottom","marginRight","uri","image","alignSelf","opacity","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { View, Animated, ScrollView, Alert, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Text, Divider, Avatar, List, Button} from 'react-native-paper';\nimport { getRecipesByCategory } from \"../config/DataApp\";\nimport Styles from '../config/Styles';\nimport ConfigApp from '../config/ConfigApp';\nimport Strings from '../config/Strings';\nimport ColorsApp from '../config/ColorsApp';\nimport {map} from 'lodash';\nimport AppLoading from '../components/AppLoading';\nimport { Col, Grid } from \"react-native-easy-grid\";\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport LoadMoreButton from '../components/LoadMoreButton';\nimport Empty from '../components/Empty';\nimport EmptyResults from '../components/EmptyResults';\nimport UserContext from '../context/UserContext';\n\nexport default function SingleCategory(props) {\n\n  const contextState = useContext(UserContext);\n  const userInfo = contextState.user;\n\n  const { route } = props;\n  const { navigation } = props;\n  const { id, name } = route.params;\n  const [page, setPage] = useState(1);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const [showButton, setshowButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const onChangeScreen = (id, title) => {\n    navigation.navigate('recipe', {id, title});\n  };\n\nuseEffect(() => {\n\n  props.navigation.setOptions({\n    title:name,\n  });\n\n}, []);\n\n  useEffect(() => {\n\n    getRecipesByCategory(id).then(response => {\n        setData(response);\n        setIsLoaded(true);\n    })\n\n  }, []);\n\n  const loadMore = () => {\n\n    setLoading(true);\n    setPage(page+1);\n\n    getRecipesByCategory(id, page+1).then((response) => {\n\n      if (!data) {\n        setData(response);\n        setLoading(false);\n      }else{\n        setData([...data, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n\n    });\n\n  };\n\n\n  const renderButton = () => {\n\n    return (\n      <LoadMoreButton\n      Indicator={loading}\n      showButton={showButton}\n      Items={data}\n      Num={10}\n      Click={() => loadMore()}/>\n      )\n  }\n\n  if (isLoaded) {\n\n   return (\n    <ScrollView\n    showsHorizontalScrollIndicator={false}\n    showsVerticalScrollIndicator={false}\n    >\n\n    <View style={Styles.PageScreen}>\n\n\n        {map(data, (item, i) => (\n\n        <List.Item\n        key={i}\n        title={item.title}\n        titleStyle={{fontWeight: 'bold', marginBottom: 3}}\n        onPress={() => onChangeScreen(item.id, item.title)}\n        activeOpacity={1}\n        titleNumberOfLines={2}\n        underlayColor=\"#ffffff\"\n        rippleColor=\"rgba(0, 0, 0, .01)\"\n        left={props => <Avatar.Image size={80} style={{marginRight: 10}} source={{uri: item.image}} />}\n        right={props => <List.Icon {...props} icon=\"chevron-right\" style={{alignSelf: 'center', opacity: 0.3}} />}\n      />\n\n        ))}\n\n\n        {renderButton()}\n\n    <View style={{height: 50}}></View>\n\n    </View>\n\n    </ScrollView>\n\n    );\n\n }else{\n   return (\n     <AppLoading/>\n     );\n }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}