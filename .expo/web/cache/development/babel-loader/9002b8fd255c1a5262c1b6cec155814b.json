{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/Replies.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Styles from \"../config/Styles\";\nimport { getReplies } from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from \"./Heading\";\nimport { map, size } from \"lodash\";\nimport { Text, List, IconButton, Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\nimport Strings from \"../config/Strings\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport MoreReplies from \"./MoreReplies\";\nimport moment from \"moment\";\nimport EmptyResults from \"./EmptyResults\";\nexport default function Replies(props) {\n  var _this = this;\n\n  var Id = props.Id,\n      showReply = props.showReply;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showButton = _useState6[0],\n      setshowButton = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    getReplies(Id).then(function (response) {\n      setItems(response);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getReplies(Id, page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(MoreReplies, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 3,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, map(items, function (item, i) {\n    return React.createElement(Card, {\n      key: i,\n      style: {\n        marginBottom: 20,\n        backgroundColor: \"rgba(0,0,0,0.01)\",\n        marginLeft: 20,\n        borderColor: \"rgba(0,0,0,0.05)\",\n        borderWidth: 1,\n        elevation: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Title, {\n      title: item.user_name,\n      titleStyle: {\n        fontSize: 16\n      },\n      subtitleStyle: {\n        marginTop: -6\n      },\n      subtitle: moment(item.created).fromNow(),\n      left: function left(props) {\n        return React.createElement(Avatar.Image, {\n          size: 45,\n          source: {\n            uri: item.user_avatar\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, React.createElement(Paragraph, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, item.body)));\n  }), renderButton());\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/Replies.js"],"names":["React","useState","useEffect","Styles","getReplies","ConfigApp","Heading","map","size","Text","List","IconButton","Avatar","Button","Card","Title","Paragraph","Strings","Icon","useNavigation","MoreReplies","moment","EmptyResults","Replies","props","Id","showReply","items","setItems","page","setPage","showButton","setshowButton","loading","setLoading","navigation","then","response","loadMore","length","renderButton","width","item","i","marginBottom","backgroundColor","marginLeft","borderColor","borderWidth","elevation","user_name","fontSize","marginTop","created","fromNow","uri","user_avatar","body"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ScrollView,\n  View,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\nimport Styles from \"../config/Styles\";\nimport { getReplies } from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from \"./Heading\";\n// import TouchableScale from 'react-native-touchable-scale';\nimport { map, size } from \"lodash\";\nimport {\n  Text,\n  List,\n  IconButton,\n  Avatar,\n  Button,\n  Card,\n  Title,\n  Paragraph,\n} from \"react-native-paper\";\nimport Strings from \"../config/Strings\";\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport MoreReplies from \"./MoreReplies\";\nimport moment from \"moment\";\nimport EmptyResults from \"./EmptyResults\";\n\nexport default function Replies(props) {\n  const { Id, showReply } = props;\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showButton, setshowButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    getReplies(Id).then((response) => {\n      setItems(response);\n    });\n  }, []);\n\n  const loadMore = () => {\n    setLoading(true);\n    setPage(page + 1);\n\n    getReplies(Id, page + 1).then((response) => {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n    });\n  };\n\n  const renderButton = () => {\n    return (\n      <MoreReplies\n        Indicator={loading}\n        showButton={showButton}\n        Items={items}\n        Num={3}\n        Click={() => loadMore()}\n      />\n    );\n  };\n\n  return (\n    <View style={{ width: \"100%\" }}>\n      {map(items, (item, i) => (\n        <Card\n          key={i}\n          style={{\n            marginBottom: 20,\n            backgroundColor: \"rgba(0,0,0,0.01)\",\n            marginLeft: 20,\n            borderColor: \"rgba(0,0,0,0.05)\",\n            borderWidth: 1,\n            elevation: 0,\n          }}\n        >\n          <Card.Title\n            title={item.user_name}\n            titleStyle={{ fontSize: 16 }}\n            subtitleStyle={{ marginTop: -6 }}\n            subtitle={moment(item.created).fromNow()}\n            left={(props) => (\n              <Avatar.Image size={45} source={{ uri: item.user_avatar }} />\n            )}\n          />\n          <Card.Content>\n            <Paragraph>{item.body}</Paragraph>\n          </Card.Content>\n        </Card>\n      ))}\n\n      {renderButton()}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}