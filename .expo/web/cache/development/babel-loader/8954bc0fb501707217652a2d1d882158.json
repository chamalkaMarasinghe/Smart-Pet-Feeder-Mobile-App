{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/FeaturedCategories.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Styles from \"../config/Styles\";\nimport { map } from 'lodash';\nimport { getFeaturedCategories } from \"../config/DataApp\";\nimport TouchableScale from 'react-native-touchable-scale';\nimport { Text, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport ConfigApp from \"../config/ConfigApp\";\nimport ColorsApp from \"../config/ColorsApp\";\nimport Strings from \"../config/Strings\";\nexport default function FeaturedCategories() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genres = _useState4[0],\n      setGenres = _useState4[1];\n\n  useEffect(function () {\n    getFeaturedCategories().then(function (response) {\n      setIsLoaded(true);\n      setGenres(response);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      marginVertical: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: '100%'\n    },\n    contentContainerStyle: {\n      flexGrow: 1,\n      paddingRight: 20\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, map(genres, function (item, index) {\n    return React.createElement(RenderItem, {\n      key: index,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    });\n  })));\n}\n\nfunction RenderItem(props) {\n  var navigation = useNavigation();\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate('singlecategory', {\n      id: id,\n      name: title\n    });\n  };\n\n  var item = props.item;\n  var id = item.id,\n      title = item.title;\n  return React.createElement(View, {\n    style: Styles.card2View,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableScale, {\n    onPress: function onPress() {\n      return onChangeScreen(id, title);\n    },\n    activeOpacity: 1,\n    activeScale: 0.98,\n    tension: 100,\n    friction: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Styles.card2Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Avatar.Image, {\n    source: {\n      uri: item.image\n    },\n    size: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: Styles.card2Title,\n    numberOfLines: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, item.title))));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/FeaturedCategories.js"],"names":["React","useState","useEffect","Styles","map","getFeaturedCategories","TouchableScale","Text","Avatar","useNavigation","ConfigApp","ColorsApp","Strings","FeaturedCategories","isLoaded","setIsLoaded","genres","setGenres","then","response","marginVertical","width","flexGrow","paddingRight","item","index","RenderItem","props","navigation","onChangeScreen","id","title","navigate","name","card2View","card2Content","uri","image","card2Title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ScrollView, View} from 'react-native';\nimport Styles from '../config/Styles';\nimport {map} from 'lodash';\nimport {getFeaturedCategories} from \"../config/DataApp\";\nimport TouchableScale from 'react-native-touchable-scale';\nimport { Text, Avatar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport ConfigApp from '../config/ConfigApp';\nimport ColorsApp from '../config/ColorsApp';\nimport Strings from '../config/Strings';\n\nexport default function FeaturedCategories() {\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [genres, setGenres] = useState([]);\n\n\n  useEffect(() => {\n    getFeaturedCategories().then((response) => {\n        setIsLoaded(true);\n        setGenres(response);\n    });\n  }, []);\n\n    return(\n\n      <View style={{marginVertical: 20}}>\n      <ScrollView\n          style={{width: '100%'}}\n          contentContainerStyle={{ flexGrow: 1, paddingRight: 20 }}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n        >\n        {map(genres, (item, index) => (\n        <RenderItem key={index} item={item} />\n\n          ))}\n      </ScrollView>\n      </View>\n\n      );\n\n}\n\nfunction RenderItem(props) {\n\n    const navigation = useNavigation();\n\n    const onChangeScreen = (id, title) => {\n    navigation.navigate('singlecategory', {\n      id: id,\n      name: title\n    });    \n  };\n\n    const { item } = props;\n    const { id, title } = item;\n\n      return (\n    <View style={Styles.card2View}>\n    <TouchableScale onPress={() => onChangeScreen(id, title)} activeOpacity={1} activeScale={0.98} tension={100} friction={10}>\n      <View style={Styles.card2Content}>\n      <Avatar.Image source={{ uri: item.image }} size={80} />\n      <Text style={Styles.card2Title} numberOfLines={1}>{item.title}</Text>\n      </View>\n    </TouchableScale>\n      </View>\n\n      )\n\n}"]},"metadata":{},"sourceType":"module"}