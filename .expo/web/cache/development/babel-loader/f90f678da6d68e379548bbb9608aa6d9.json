{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/About.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getStrings } from \"../config/DataApp\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { HTMLStyles } from \"../config/HTMLStyles\";\nimport AppLoading from \"../components/AppLoading\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nexport default function About() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      item = _useState4[0],\n      setItem = _useState4[1];\n\n  useEffect(function () {\n    getStrings().then(function (response) {\n      setItem(response[0]);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  if (isLoaded) {\n    return React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Styles.TermsAboutPageScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/logo.png\"),\n      resizeMode: \"contain\",\n      style: Styles.PageLogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/About.js"],"names":["React","useState","useEffect","getStrings","HTMLStyles","AppLoading","Styles","Strings","About","isLoaded","setIsLoaded","item","setItem","then","response","TermsAboutPageScreen","require","PageLogo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT;;;;AAGA,SAASC,UAAT;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,kBAAgCP,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,UAAU,GAAGU,IAAb,CAAkB,UAACC,QAAD,EAAc;AAC9BF,MAAAA,OAAO,CAACE,QAAQ,CAAC,CAAD,CAAT,CAAP;AACAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,QAAJ,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,8BAA8B,EAAE,KADlC;AAEE,MAAA,4BAA4B,EAAE,KAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACS,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAEC,OAAO,yBADjB;AAEE,MAAA,UAAU,EAAE,SAFd;AAGE,MAAA,KAAK,EAAEV,MAAM,CAACW,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAeD,GAhBD,MAgBO;AACL,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getStrings } from \"../config/DataApp\";\nimport { View, ScrollView, Image } from \"react-native\";\n// import HTMLView from \"react-native-htmlview\";\nimport { HTMLStyles } from \"../config/HTMLStyles\";\nimport AppLoading from \"../components/AppLoading\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\n\nexport default function About() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [item, setItem] = useState(\"\");\n\n  useEffect(() => {\n    getStrings().then((response) => {\n      setItem(response[0]);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  if (isLoaded) {\n    return (\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <View style={Styles.TermsAboutPageScreen}>\n          <Image\n            source={require(\"../../assets/logo.png\")}\n            resizeMode={\"contain\"}\n            style={Styles.PageLogo}\n          />\n          {/*<HTMLView value={item.tr_aboutus} stylesheet={HTMLStyles} />*/}\n        </View>\n      </ScrollView>\n    );\n  } else {\n    return <AppLoading />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}