{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/components/Home/ScheduleForm.js\";\n\nimport React, { useReducer, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-modal\";\nimport { TextInput, Button, Avatar, IconButton } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport useInput from \"../../hooks/use-input\";\nimport * as Validators from \"../../helpers/validators\";\nimport * as ScheduleActions from \"../../store/actions/schedules\";\nimport Icon from \"react-native-dynamic-vector-icons/lib/Icon\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as Functions from \"../../helpers/functions\";\n\nvar ScheduleForm = function ScheduleForm(props) {\n  var _useState = useState(\"date\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var dispatch = useDispatch();\n  var schedule = null;\n\n  if (props.isUpdate) {\n    schedule = useSelector(function (state) {\n      return state.schedules.schedules.find(function (prod) {\n        return prod.id === props.id;\n      });\n    });\n  }\n\n  var currentDate = new Date();\n\n  var _useState5 = useState(new Date(schedule ? new Date(schedule.date_time) : currentDate.setHours(23))),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateOrTime = _useState6[0],\n      setDateOrTime = _useState6[1];\n\n  var _useState7 = useState(Validators.isValidDateTime(dateOrTime)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isValidDateTime = _useState8[0],\n      setIsValidDateTime = _useState8[1];\n\n  var _useInput = useInput(schedule ? schedule.title : \"\", Validators.isNotEmpty),\n      title = _useInput.value,\n      titleIsValid = _useInput.isValid,\n      titleHasError = _useInput.hasError,\n      titleChangeHandler = _useInput.valueChangeHandler,\n      titleBlurHandler = _useInput.inputBlurHandler,\n      resetTitle = _useInput.reset;\n\n  var isFormValid = titleIsValid && isValidDateTime;\n\n  var submitHandler = function submitHandler() {\n    if (!isFormValid) {\n      return;\n    }\n\n    if (schedule) {\n      dispatch(ScheduleActions.updateSchedule(schedule.id, title, dateOrTime));\n    } else {\n      dispatch(ScheduleActions.createSchedule(title, dateOrTime));\n    }\n\n    props.hideModal();\n  };\n\n  var onChangeDateOrTime = function onChangeDateOrTime(event, selectedDate) {\n    if (event.type === \"dismissed\") {\n      setShow(false);\n      return;\n    }\n\n    var currentDate = selectedDate || dateOrTime;\n    setShow(Platform.OS === \"ios\");\n    setDateOrTime(currentDate);\n\n    if (Validators.isValidDateTime(currentDate)) {\n      setIsValidDateTime(true);\n    } else {\n      setIsValidDateTime(false);\n    }\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode(\"date\");\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode(\"time\");\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    isVisible: props.isModalVisible,\n    backdropOpacity: 0.8,\n    onBackdropPress: props.hideModal,\n    animationInTiming: 1,\n    animationOutTiming: 1,\n    hasBackdrop: true,\n    backdropTransitionInTiming: 1,\n    backdropTransitionOutTiming: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Styles.Container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: Styles.Details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: Styles.Inline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    label: \"Title\",\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    value: title,\n    onChangeText: titleChangeHandler,\n    onBlur: titleBlurHandler,\n    style: Styles.Input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), titleHasError && React.createElement(View, {\n    style: Styles.Error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Title cannot be empty\")), React.createElement(View, {\n    style: Styles.Inline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    label: \"Date\",\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.Input,\n    value: Functions.extractDate(dateOrTime),\n    editable: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: Styles.Button,\n    size: 30,\n    onPress: showDatepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, React.createElement(Icon, {\n    name: \"calendar\",\n    type: \"AntDesign\",\n    size: 26,\n    color: \"purple\",\n    onPress: function onPress() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  })))), React.createElement(View, {\n    style: Styles.Inline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    label: \"Time\",\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.Input,\n    value: Functions.extractTime(dateOrTime),\n    editable: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: Styles.Button,\n    size: 30,\n    onPress: showTimepicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, React.createElement(Icon, {\n    name: \"clockcircleo\",\n    type: \"AntDesign\",\n    size: 26,\n    color: \"purple\",\n    onPress: function onPress() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  })))), !isValidDateTime && React.createElement(View, {\n    style: Styles.Error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"Invalid Date & Time\")), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: dateOrTime,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChangeDateOrTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: Styles.ActionButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.hideModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar.Icon, {\n    icon: \"close\",\n    size: 40,\n    backgroundColor: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: submitHandler,\n    disabled: !isFormValid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar.Icon, {\n    icon: \"check\",\n    size: 40,\n    backgroundColor: !isFormValid ? \"grey\" : \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nvar Styles = StyleSheet.create({\n  Container: {\n    marginLeft: \"5%\",\n    width: \"90%\",\n    height: 400,\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  Details: {\n    marginHorizontal: 50\n  },\n  Input: {\n    marginBottom: 10,\n    backgroundColor: \"#fff\"\n  },\n  Inline: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\"\n  },\n  ActionButton: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    paddingTop: 20\n  },\n  Button: {\n    height: 30,\n    width: 30\n  },\n  Error: {\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  }\n});\nexport default ScheduleForm;","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/components/Home/ScheduleForm.js"],"names":["React","useReducer","useState","Modal","TextInput","Button","Avatar","IconButton","DateTimePicker","useInput","Validators","ScheduleActions","Icon","useSelector","useDispatch","Functions","ScheduleForm","props","mode","setMode","show","setShow","dispatch","schedule","isUpdate","state","schedules","find","prod","id","currentDate","Date","date_time","setHours","dateOrTime","setDateOrTime","isValidDateTime","setIsValidDateTime","title","isNotEmpty","value","titleIsValid","isValid","titleHasError","hasError","titleChangeHandler","valueChangeHandler","titleBlurHandler","inputBlurHandler","resetTitle","reset","isFormValid","submitHandler","updateSchedule","createSchedule","hideModal","onChangeDateOrTime","event","selectedDate","type","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","flex","isModalVisible","justifyContent","Styles","Container","Details","Inline","Input","Error","color","extractDate","extractTime","ActionButton","StyleSheet","create","marginLeft","width","height","backgroundColor","marginHorizontal","marginBottom","flexDirection","alignItems","flexWrap","paddingTop"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\nimport {\n  Alert,\n  Image,\n  Keyboard,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Modal from \"react-native-modal\";\nimport { TextInput, Button, Avatar, IconButton } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport useInput from \"../../hooks/use-input\";\nimport * as Validators from \"../../helpers/validators\";\nimport * as ScheduleActions from \"../../store/actions/schedules\";\nimport Icon from \"react-native-dynamic-vector-icons/lib/Icon\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport * as Functions from \"../../helpers/functions\";\n\nconst ScheduleForm = (props) => {\n  const [mode, setMode] = useState(\"date\");\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n\n  let schedule = null;\n  if (props.isUpdate) {\n    schedule = useSelector((state) => {\n      return state.schedules.schedules.find((prod) => prod.id === props.id);\n    });\n  }\n\n  const currentDate = new Date();\n  const [dateOrTime, setDateOrTime] = useState(\n    new Date(schedule ? new Date(schedule.date_time) : currentDate.setHours(23))\n  );\n  const [isValidDateTime, setIsValidDateTime] = useState(\n    Validators.isValidDateTime(dateOrTime)\n  );\n  const {\n    value: title,\n    isValid: titleIsValid,\n    hasError: titleHasError,\n    valueChangeHandler: titleChangeHandler,\n    inputBlurHandler: titleBlurHandler,\n    reset: resetTitle,\n  } = useInput(schedule ? schedule.title : \"\", Validators.isNotEmpty);\n\n  const isFormValid = titleIsValid && isValidDateTime;\n  const submitHandler = () => {\n    if (!isFormValid) {\n      return;\n    }\n\n    if (schedule) {\n      dispatch(ScheduleActions.updateSchedule(schedule.id, title, dateOrTime));\n    } else {\n      dispatch(ScheduleActions.createSchedule(title, dateOrTime));\n    }\n\n    props.hideModal();\n  };\n\n  const onChangeDateOrTime = (event, selectedDate) => {\n    if (event.type === \"dismissed\") {\n      setShow(false);\n      return;\n    }\n    const currentDate = selectedDate || dateOrTime;\n    setShow(Platform.OS === \"ios\");\n    setDateOrTime(currentDate);\n    if (Validators.isValidDateTime(currentDate)) {\n      setIsValidDateTime(true);\n    } else {\n      setIsValidDateTime(false);\n    }\n  };\n\n  const showMode = (currentMode) => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode(\"date\");\n  };\n\n  const showTimepicker = () => {\n    showMode(\"time\");\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Modal\n        isVisible={props.isModalVisible}\n        backdropOpacity={0.8}\n        onBackdropPress={props.hideModal}\n        animationInTiming={1}\n        animationOutTiming={1}\n        // coverScreen={true}\n        hasBackdrop={true}\n        backdropTransitionInTiming={1}\n        backdropTransitionOutTiming={1}\n      >\n        <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n          <View style={Styles.Container}>\n            <View style={Styles.Details}>\n              <View style={Styles.Inline}>\n                <View style={{ flex: 10 }}>\n                  <TextInput\n                    label=\"Title\"\n                    // onChangeText={(text) => setEmail(text)}\n                    mode=\"flat\"\n                    autoCapitalize=\"none\"\n                    value={title}\n                    onChangeText={titleChangeHandler}\n                    onBlur={titleBlurHandler}\n                    style={Styles.Input}\n                  />\n                </View>\n\n                <View style={{ flex: 1 }} />\n              </View>\n\n              {titleHasError && (\n                <View style={Styles.Error}>\n                  <Text style={{ color: \"red\" }}>Title cannot be empty</Text>\n                </View>\n              )}\n\n              <View style={Styles.Inline}>\n                <View style={{ flex: 10 }}>\n                  <TextInput\n                    label=\"Date\"\n                    // onChangeText={(text) => setEmail(text)}\n                    mode=\"flat\"\n                    autoCapitalize=\"none\"\n                    style={Styles.Input}\n                    value={Functions.extractDate(dateOrTime)}\n                    editable={false}\n                  />\n                </View>\n\n                <View style={{ flex: 1 }}>\n                  <Button\n                    style={Styles.Button}\n                    size={30}\n                    onPress={showDatepicker}\n                  >\n                    <Icon\n                      name=\"calendar\"\n                      type=\"AntDesign\"\n                      size={26}\n                      color=\"purple\"\n                      onPress={() => {}}\n                    />\n                  </Button>\n                </View>\n              </View>\n\n              <View style={Styles.Inline}>\n                <View style={{ flex: 10 }}>\n                  <TextInput\n                    label=\"Time\"\n                    mode=\"flat\"\n                    autoCapitalize=\"none\"\n                    style={Styles.Input}\n                    value={Functions.extractTime(dateOrTime)}\n                    editable={false}\n                  />\n                </View>\n\n                <View style={{ flex: 1 }}>\n                  <Button\n                    style={Styles.Button}\n                    size={30}\n                    onPress={showTimepicker}\n                  >\n                    <Icon\n                      name=\"clockcircleo\"\n                      type=\"AntDesign\"\n                      size={26}\n                      color=\"purple\"\n                      onPress={() => {}}\n                    />\n                  </Button>\n                </View>\n              </View>\n\n              {!isValidDateTime && (\n                <View style={Styles.Error}>\n                  <Text style={{ color: \"red\" }}>Invalid Date & Time</Text>\n                </View>\n              )}\n\n              {show && (\n                <DateTimePicker\n                  testID=\"dateTimePicker\"\n                  value={dateOrTime}\n                  mode={mode}\n                  is24Hour={true}\n                  display=\"default\"\n                  onChange={onChangeDateOrTime}\n                />\n              )}\n\n              <View style={Styles.ActionButton}>\n                <TouchableOpacity onPress={props.hideModal}>\n                  <Avatar.Icon icon=\"close\" size={40} backgroundColor={\"red\"} />\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  onPress={submitHandler}\n                  disabled={!isFormValid}\n                >\n                  <Avatar.Icon\n                    icon=\"check\"\n                    size={40}\n                    backgroundColor={!isFormValid ? \"grey\" : \"green\"}\n                  />\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </SafeAreaView>\n      </Modal>\n    </View>\n  );\n};\n\nconst Styles = StyleSheet.create({\n  Container: {\n    marginLeft: \"5%\",\n    width: \"90%\",\n    height: 400,\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\",\n  },\n\n  Details: {\n    marginHorizontal: 50,\n  },\n\n  Input: {\n    marginBottom: 10,\n    backgroundColor: \"#fff\",\n  },\n\n  Inline: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  ActionButton: {\n    flexDirection: \"row\",\n    // alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    paddingTop: 20,\n  },\n\n  Button: {\n    height: 30,\n    width: 30,\n  },\n\n  Error: {\n    flexDirection: \"row\",\n    // alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nexport default ScheduleForm;\n"]},"metadata":{},"sourceType":"module"}