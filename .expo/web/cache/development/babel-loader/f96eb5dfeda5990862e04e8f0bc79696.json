{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/components/LatestRecipes.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Styles from \"../config/Styles\";\nimport { getLatestRecipes } from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from \"./Heading\";\nimport TouchableScale from 'react-native-touchable-scale';\nimport { map, size } from \"lodash\";\nimport { Avatar, Button, Card, Badge, List, Title, Text, IconButton } from 'react-native-paper';\nimport Strings from \"../config/Strings\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { useNavigation } from '@react-navigation/native';\nimport LoadMoreButton from \"./LoadMoreButton\";\nimport EmptyResults from \"./EmptyResults\";\nexport default function LatestProperties() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showButton = _useState6[0],\n      setshowButton = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var onChangeScreen = function onChangeScreen(id, title) {\n    navigation.navigate('recipe', {\n      id: id,\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    getLatestRecipes().then(function (response) {\n      setItems(response);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getLatestRecipes(page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 10,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, map(items, function (item, i) {\n    return React.createElement(TouchableScale, {\n      key: i,\n      activeOpacity: 1,\n      onPress: function onPress() {\n        return onChangeScreen(item.id, item.title);\n      },\n      activeScale: 0.98,\n      tension: 100,\n      friction: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: item.image\n      },\n      style: Styles.background_card,\n      imageStyle: {\n        borderRadius: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, React.createElement(LinearGradient, {\n      colors: ['rgba(0,0,0,0.1)', 'rgba(0,0,0,0.7)'],\n      style: Styles.gradient_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: Styles.totalLikes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      color: \"red\",\n      size: 18,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: '#fff',\n        marginLeft: 5,\n        fontWeight: '600'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, item.total_likes)), React.createElement(Text, {\n      numberOfLines: 2,\n      style: Styles.title_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, item.title), React.createElement(Text, {\n      numberOfLines: 2,\n      style: Styles.subtitle_card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, React.createElement(Icon, {\n      style: Styles.ColProps3Icon,\n      name: \"account-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), ' ', item.servings, \" \", Strings.ST26, '    ', React.createElement(Icon, {\n      style: Styles.ColProps3Icon,\n      name: \"clock-time-three-outline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), ' ', item.time))));\n  }), renderButton());\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/components/LatestRecipes.js"],"names":["React","useState","useEffect","Styles","getLatestRecipes","ConfigApp","Heading","TouchableScale","map","size","Avatar","Button","Card","Badge","List","Title","Text","IconButton","Strings","LinearGradient","Grid","Row","Col","Icon","useNavigation","LoadMoreButton","EmptyResults","LatestProperties","items","setItems","page","setPage","showButton","setshowButton","loading","setLoading","navigation","onChangeScreen","id","title","navigate","then","response","loadMore","length","renderButton","width","marginTop","item","i","uri","image","background_card","borderRadius","gradient_card","totalLikes","color","marginLeft","fontWeight","total_likes","title_card","subtitle_card","ColProps3Icon","servings","ST26","time"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAOC,MAAP;AACA,SAAQC,gBAAR;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,QAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyDC,UAAzD,QAA0E,oBAA1E;AACA,OAAOC,OAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,GAAnB,QAA8B,wBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEzC,kBAA0B1B,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO2B,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwB5B,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAO6B,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAoC9B,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAO+B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA8BhC,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOiC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU,GAAGZ,aAAa,EAAhC;;AAEA,MAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAKC,KAAL,EAAe;AACpCH,IAAAA,UAAU,CAACI,QAAX,CAAoB,QAApB,EAA8B;AAACF,MAAAA,EAAE,EAAFA,EAAD;AAAKC,MAAAA,KAAK,EAALA;AAAL,KAA9B;AACD,GAFD;;AAIArC,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,gBAAgB,GAAGqC,IAAnB,CAAwB,UAACC,QAAD,EAAc;AAClCb,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACH,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErBR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AAEA1B,IAAAA,gBAAgB,CAAC0B,IAAI,GAAC,CAAN,CAAhB,CAAyBW,IAAzB,CAA8B,UAACC,QAAD,EAAc;AAE1C,UAAI,CAACd,KAAL,EAAY;AACVC,QAAAA,QAAQ,CAACa,QAAD,CAAR;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD,MAGK;AACHN,QAAAA,QAAQ,8BAAKD,KAAL,sBAAec,QAAf,GAAR;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,UAAIO,QAAQ,CAACE,MAAT,IAAmB,CAAvB,EAA0B;AACxBX,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AAEF,KAdD;AAgBD,GArBD;;AAuBA,MAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEzB,WACE,oBAAC,cAAD;AACA,MAAA,SAAS,EAAEX,OADX;AAEA,MAAA,UAAU,EAAEF,UAFZ;AAGA,MAAA,KAAK,EAAEJ,KAHP;AAIA,MAAA,GAAG,EAAE,EAJL;AAKA,MAAA,KAAK,EAAE;AAAA,eAAMe,QAAQ,EAAd;AAAA,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GAVD;;AAYE,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGvC,GAAG,CAACoB,KAAD,EAAQ,UAACoB,IAAD,EAAOC,CAAP;AAAA,WAEZ,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,CAArB;AAAwB,MAAA,aAAa,EAAE,CAAvC;AAA0C,MAAA,OAAO,EAAE;AAAA,eAAMZ,cAAc,CAACW,IAAI,CAACV,EAAN,EAAUU,IAAI,CAACT,KAAf,CAApB;AAAA,OAAnD;AAA8F,MAAA,WAAW,EAAE,IAA3G;AAAiH,MAAA,OAAO,EAAE,GAA1H;AAA+H,MAAA,QAAQ,EAAE,EAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAE;AAACW,QAAAA,GAAG,EAAEF,IAAI,CAACG;AAAX,OAAzB;AAA4C,MAAA,KAAK,EAAEhD,MAAM,CAACiD,eAA1D;AAA2E,MAAA,UAAU,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CAAxB;AAAgE,MAAA,KAAK,EAAElD,MAAM,CAACmD,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEnD,MAAM,CAACoD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,IAAI,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,UAAU,EAAE,CAA5B;AAA+BC,QAAAA,UAAU,EAAE;AAA3C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiEV,IAAI,CAACW,WAAtE,CAFA,CAFA,EAOE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,CAArB;AAAwB,MAAA,KAAK,EAAExD,MAAM,CAACyD,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDZ,IAAI,CAACT,KAAxD,CAPF,EAQE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,CAArB;AAAwB,MAAA,KAAK,EAAEpC,MAAM,CAAC0D,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1D,MAAM,CAAC2D,aAApB;AAAmC,MAAA,IAAI,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAC6D,GAD7D,EACkEd,IAAI,CAACe,QADvE,OACkF7C,OAAO,CAAC8C,IAD1F,EAEC,MAFD,EAGA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE7D,MAAM,CAAC2D,aAApB;AAAmC,MAAA,IAAI,EAAC,0BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAGsE,GAHtE,EAG2Ed,IAAI,CAACiB,IAHhF,CARF,CADF,CADA,CAFY;AAAA,GAAR,CAFN,EA0BGpB,YAAY,EA1Bf,CAFF;AAmCH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ScrollView, View, TouchableOpacity, ImageBackground} from 'react-native';\nimport Styles from '../config/Styles';\nimport {getLatestRecipes} from \"../config/DataApp\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport Heading from './Heading';\nimport TouchableScale from 'react-native-touchable-scale';\nimport { map, size } from \"lodash\";\nimport { Avatar, Button, Card, Badge, List, Title, Text, IconButton} from 'react-native-paper';\nimport Strings from '../config/Strings';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { useNavigation } from '@react-navigation/native';\nimport LoadMoreButton from './LoadMoreButton';\nimport EmptyResults from './EmptyResults';\n\nexport default function LatestProperties() {\n\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showButton, setshowButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const navigation = useNavigation();\n  \n  const onChangeScreen = (id, title) => {\n    navigation.navigate('recipe', {id, title});\n  };\n  \n  useEffect(() => {\n    getLatestRecipes().then((response) => {\n        setItems(response);\n    });\n  }, []);\n\n  const loadMore = () => {\n\n    setLoading(true);\n    setPage(page+1);\n\n    getLatestRecipes(page+1).then((response) => {\n\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      }else{\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n    });\n\n  };\n\n  const renderButton = () => {\n\n    return (\n      <LoadMoreButton\n      Indicator={loading}\n      showButton={showButton}\n      Items={items}\n      Num={10}\n      Click={() => loadMore()}/>\n      )\n  }\n\n    return(\n\n      <View style={{width: '100%', marginTop: 20}}>\n\n        {map(items, (item, i) => (\n\n        <TouchableScale key={i} activeOpacity={1} onPress={() => onChangeScreen(item.id, item.title)} activeScale={0.98} tension={100} friction={10}>\n        <ImageBackground source={{uri: item.image}} style={Styles.background_card} imageStyle={{borderRadius: 8}}>\n          <LinearGradient colors={['rgba(0,0,0,0.1)', 'rgba(0,0,0,0.7)']} style={Styles.gradient_card}>\n\n          <View style={Styles.totalLikes}>\n          <Icon name=\"heart\" color=\"red\" size={18}></Icon>\n          <Text style={{color: '#fff', marginLeft: 5, fontWeight: '600'}}>{item.total_likes}</Text>\n          </View>\n          \n            <Text numberOfLines={2} style={Styles.title_card}>{item.title}</Text>\n            <Text numberOfLines={2} style={Styles.subtitle_card}>\n            <Icon style={Styles.ColProps3Icon} name=\"account-outline\" />{' '}{item.servings} {Strings.ST26}\n            {'    '}\n            <Icon style={Styles.ColProps3Icon} name=\"clock-time-three-outline\" />{' '}{item.time}\n            </Text>\n\n          </LinearGradient>\n        </ImageBackground>\n        </TouchableScale>\n\n          ))}\n\n        {renderButton()}\n\n\n      </View>\n\n      );\n\n}"]},"metadata":{},"sourceType":"module"}