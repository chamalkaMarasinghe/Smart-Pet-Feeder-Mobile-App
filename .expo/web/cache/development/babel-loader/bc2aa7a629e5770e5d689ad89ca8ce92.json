{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\n\nvar useInput = function useInput(initialVal, validateValue) {\n  var _useState = useState(initialVal),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTouched = _useState4[0],\n      setIsTouched = _useState4[1];\n\n  var valueIsValid = validateValue(enteredValue);\n  var hasError = !valueIsValid && isTouched;\n\n  var valueChangeHandler = function valueChangeHandler(value) {\n    setEnteredValue(value);\n  };\n\n  var inputBlurHandler = function inputBlurHandler(event) {\n    setIsTouched(true);\n  };\n\n  var reset = function reset() {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler: valueChangeHandler,\n    inputBlurHandler: inputBlurHandler,\n    reset: reset\n  };\n};\n\nexport default useInput;","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/hooks/use-input.js"],"names":["useState","useInput","initialVal","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","value","inputBlurHandler","event","reset","isValid"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,aAAb,EAA+B;AAC9C,kBAAwCH,QAAQ,CAACE,UAAD,CAAhD;AAAA;AAAA,MAAOE,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAkCL,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,MAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;AAEA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpCN,IAAAA,eAAe,CAACM,KAAD,CAAf;AACD,GAFD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClCN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,MAAMO,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBT,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLI,IAAAA,KAAK,EAAEP,YADF;AAELW,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAAQ,EAARA,QAHK;AAILC,IAAAA,kBAAkB,EAAlBA,kBAJK;AAKLE,IAAAA,gBAAgB,EAAhBA,gBALK;AAMLE,IAAAA,KAAK,EAALA;AANK,GAAP;AAQD,CA5BD;;AA8BA,eAAeb,QAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useInput = (initialVal, validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(initialVal);\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (value) => {\n    setEnteredValue(value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}