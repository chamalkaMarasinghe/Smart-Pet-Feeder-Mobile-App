{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/Mobile App/application/screens/Feed.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, List, IconButton, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { map, size } from 'lodash';\nimport Strings from \"../config/Strings\";\nimport Styles from \"../config/Styles\";\nimport ConfigApp from \"../config/ConfigApp\";\nimport { getFeed } from \"../config/DataApp\";\nimport LoadMoreButton from \"../components/LoadMoreButton\";\nimport AppLoading from \"../components/AppLoading\";\nimport Empty from \"../components/Empty\";\nimport EmptyResults from \"../components/EmptyResults\";\nimport UserContext from \"../context/UserContext\";\nimport moment from \"moment\";\nexport default function Feed(props) {\n  var _this = this;\n\n  var contextState = useContext(UserContext);\n  var userInfo = contextState.user;\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likes = _useState4[0],\n      setLikes = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoaded = _useState8[0],\n      setIsLoaded = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showButton = _useState10[0],\n      setshowButton = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var onClickRecipe = function onClickRecipe(id, title) {\n    navigation.navigate('recipe', {\n      id: id,\n      title: title\n    });\n  };\n\n  var onClickMember = function onClickMember(id, name) {\n    props.navigation.navigate('singlemember', {\n      id: id,\n      name: name\n    });\n  };\n\n  var onClickComments = function onClickComments(id) {\n    props.navigation.navigate('comments', {\n      id: id\n    });\n  };\n\n  useEffect(function () {\n    getFeed(userInfo.user_id).then(function (response) {\n      setItems(response);\n      setIsLoaded(true);\n    });\n  }, []);\n\n  var loadMore = function loadMore() {\n    setLoading(true);\n    setPage(page + 1);\n    getFeed(userInfo.user_id, page + 1).then(function (response) {\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      } else {\n        setItems([].concat(_toConsumableArray(items), _toConsumableArray(response)));\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n    });\n  };\n\n  var renderButton = function renderButton() {\n    return React.createElement(LoadMoreButton, {\n      Indicator: loading,\n      showButton: showButton,\n      Items: items,\n      Num: 10,\n      Click: function Click() {\n        return loadMore();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderItems = function renderItems() {\n    if (!items || size(items) < 1) {\n      return null;\n    } else {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, map(items, function (item, index) {\n        return React.createElement(Card, {\n          key: index,\n          mode: \"outlined\",\n          style: {\n            borderColor: '#eee',\n            marginBottom: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 5\n          }\n        }, React.createElement(Card.Title, {\n          title: item.author,\n          titleNumberOfLines: 2,\n          subtitle: moment(item.date).fromNow(),\n          titleStyle: {\n            fontSize: 16,\n            marginVertical: 0\n          },\n          subtitleStyle: {\n            marginTop: -6\n          },\n          left: function left(props) {\n            return React.createElement(TouchableOpacity, {\n              activeOpacity: 1,\n              onPress: function onPress() {\n                return onClickMember(item.author_id, item.author);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }\n            }, React.createElement(Avatar.Image, _extends({}, props, {\n              size: 45,\n              source: {\n                uri: item.author_avatar\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 118\n              }\n            })));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 7\n          }\n        }), React.createElement(TouchableOpacity, {\n          activeOpacity: 0.9,\n          onPress: function onPress() {\n            return onClickRecipe(item.id, item.title);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }\n        }, React.createElement(Card.Cover, {\n          source: {\n            uri: item.image\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }\n        }), React.createElement(Card.Content, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }\n        }, React.createElement(Title, {\n          style: {\n            marginTop: 15,\n            fontSize: 18,\n            fontWeight: '600',\n            paddingHorizontal: 4\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        }, item.title))), React.createElement(Card.Actions, {\n          style: {\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n            paddingTop: 0\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }\n        }, React.createElement(Button, {\n          icon: \"heart\",\n          mode: \"text\",\n          color: \"#959595\",\n          labelStyle: Styles.feedActionLabel,\n          uppercase: false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }\n        }, item.total_likes), React.createElement(Button, {\n          icon: \"comment\",\n          mode: \"text\",\n          color: \"#959595\",\n          onPress: function onPress() {\n            return onClickComments(item.id);\n          },\n          labelStyle: Styles.feedActionLabel,\n          uppercase: false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }\n        }, item.total_comments)));\n      }));\n    }\n  };\n\n  if (isLoaded) {\n    if (size(items) < 1) {\n      return React.createElement(Empty, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      });\n    } else {\n      return React.createElement(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: Styles.FullHeightScreen2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, React.createElement(List.Section, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }, renderItems(), renderButton())));\n    }\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 10\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/screens/Feed.js"],"names":["React","useState","useEffect","useContext","Avatar","List","IconButton","Button","Card","Title","Paragraph","map","size","Strings","Styles","ConfigApp","getFeed","LoadMoreButton","AppLoading","Empty","EmptyResults","UserContext","moment","Feed","props","contextState","userInfo","user","navigation","items","setItems","likes","setLikes","page","setPage","isLoaded","setIsLoaded","showButton","setshowButton","loading","setLoading","onClickRecipe","id","title","navigate","onClickMember","name","onClickComments","user_id","then","response","loadMore","length","renderButton","renderItems","item","index","borderColor","marginBottom","author","date","fromNow","fontSize","marginVertical","marginTop","author_id","uri","author_avatar","image","fontWeight","paddingHorizontal","marginHorizontal","paddingTop","feedActionLabel","total_likes","total_comments","FullHeightScreen2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { View, ScrollView, TouchableOpacity } from 'react-native';\nimport { Avatar, List, IconButton, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport {map, size} from 'lodash';\nimport Strings from '../config/Strings';\nimport Styles from '../config/Styles';\nimport ConfigApp from '../config/ConfigApp';\nimport { getFeed } from \"../config/DataApp\";\nimport LoadMoreButton from '../components/LoadMoreButton';\nimport AppLoading from '../components/AppLoading';\nimport Empty from '../components/Empty';\nimport EmptyResults from '../components/EmptyResults';\nimport UserContext from '../context/UserContext';\nimport moment from \"moment\";\n\nexport default function Feed(props) {\n\n  const contextState = useContext(UserContext);\n  const userInfo = contextState.user;\n\n    const { navigation } = props;\n    const [items, setItems] = useState([]);\n    const [likes, setLikes] = useState([]);\n    const [page, setPage] = useState(1);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [showButton, setshowButton] = useState(true);\n    const [loading, setLoading] = useState(false);\n\n\n  const onClickRecipe = (id, title) => {\n    navigation.navigate('recipe', {id, title});\n  };\n\n  const onClickMember = (id, name) => {\n    props.navigation.navigate('singlemember', {id, name});\n  };\n\n  const onClickComments = (id) => {\n    props.navigation.navigate('comments', {id});\n  };\n\n  useEffect(() => {\n\n    getFeed(userInfo.user_id).then((response) => {\n      setItems(response);\n      setIsLoaded(true);\n    });\n\n  }, []);\n\n  const loadMore = () => {\n\n    setLoading(true);\n    setPage(page+1);\n\n    getFeed(userInfo.user_id, page+1).then((response) => {\n\n      if (!items) {\n        setItems(response);\n        setLoading(false);\n      }else{\n        setItems([...items, ...response]);\n        setLoading(false);\n      }\n\n      if (response.length <= 0) {\n        setshowButton(false);\n      }\n\n      setIsLoaded(true);\n\n    });\n\n  };\n\n  const renderButton = () => {\n\n    return (\n      <LoadMoreButton\n      Indicator={loading}\n      showButton={showButton}\n      Items={items}\n      Num={10}\n      Click={() => loadMore()}/>\n      )\n  }\n\n  const renderItems = () => {\n\n    if (!items || size(items) < 1 ) {\n\n      return null;\n\n    }else {\n\n      return (\n        <View>\n\n        {map(items, (item, index) => (\n\n    <Card key={index} mode=\"outlined\" style={{borderColor: '#eee', marginBottom: 20}}>\n      <Card.Title\n      title={item.author}\n      titleNumberOfLines={2}\n      subtitle={moment(item.date).fromNow()}\n      titleStyle={{fontSize: 16, marginVertical: 0}}\n      subtitleStyle={{marginTop: -6}}\n      left={props =>  <TouchableOpacity activeOpacity={1} onPress={() => onClickMember(item.author_id, item.author)}><Avatar.Image {...props} size={45} source={{uri: item.author_avatar}} /></TouchableOpacity>} />\n      <TouchableOpacity activeOpacity={0.9} onPress={() => onClickRecipe(item.id, item.title)}>\n      <Card.Cover source={{ uri: item.image }} />\n      <Card.Content>\n        <Title style={{marginTop: 15, fontSize: 18, fontWeight: '600', paddingHorizontal: 4}}>{item.title}</Title>\n      </Card.Content>\n      </TouchableOpacity>\n      <Card.Actions style={{marginHorizontal: 0, paddingHorizontal: 0, paddingTop: 0}}>\n      <Button icon=\"heart\" mode=\"text\" color={\"#959595\"} labelStyle={Styles.feedActionLabel} uppercase={false}>{item.total_likes}</Button>\n      <Button icon=\"comment\" mode=\"text\" color=\"#959595\" onPress={() => onClickComments(item.id)} labelStyle={Styles.feedActionLabel} uppercase={false}>{item.total_comments}</Button>\n      </Card.Actions>\n    </Card>\n\n          ))}\n\n        </View>\n        );\n    }\n\n  };\n\n      if (isLoaded) {\n\n  if (size(items) < 1) {\n\n    return(\n      <Empty/>\n      );\n\n  }else{\n    return (\n\n<ScrollView\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}\n          >\n      <View style={Styles.FullHeightScreen2}>\n      <List.Section>\n      {renderItems()}\n          {renderButton()}\n\n      </List.Section>\n      </View>\n      </ScrollView>\n      );\n  }\n\n     }else{\n       return (\n         <AppLoading/>\n         );\n     }\n\n}\n"]},"metadata":{},"sourceType":"module"}