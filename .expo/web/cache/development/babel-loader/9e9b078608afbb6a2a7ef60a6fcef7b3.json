{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, TextInput, Button } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\nexport default function Login(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onChangeScreen = function onChangeScreen(screen) {\n    props.navigation.navigate(screen);\n  };\n\n  var updateValue = function updateValue(user) {\n    setUser(user);\n  };\n\n  var login = function login() {\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n\n            if (email, password) {\n              signInApi(email, password).then(function (response) {\n                if (response !== \"error\" && response !== \"incomplete\") {\n                  contextState.updateValue(response[0]);\n                  props.navigation.navigate(\"home\");\n                } else if (response === \"error\") {\n                  Alert.alert(Strings.ST104, Strings.ST32);\n                } else if (response === \"incomplete\") {\n                  setLoading(false);\n                  Alert.alert(Strings.ST104, Strings.ST33);\n                }\n              });\n            } else {\n              setLoading(false);\n              Alert.alert(Strings.ST104, Strings.ST33);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Styles.AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/logo.png\"),\n    resizeMode: \"contain\",\n    style: Styles.AuthLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: Styles.AuthContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: Strings.ST19,\n    mode: \"flat\",\n    autoCapitalize: \"none\",\n    style: Styles.AuthInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    label: Strings.ST20,\n    mode: \"flat\",\n    secureTextEntry: true,\n    style: Styles.AuthInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen(\"forgot\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Styles.ForgotPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, Strings.ST15)), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return null;\n    },\n    style: Styles.AuthButton,\n    contentStyle: Styles.AuthButtonContent,\n    labelStyle: Styles.AuthButtonLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, !loading ? Strings.ST17 : Strings.ST31), React.createElement(View, {\n    style: Styles.AuthBottomContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return onChangeScreen(\"register\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Styles.AuthBottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, Strings.ST12, \" \", React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, Strings.ST35)))))));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/screens/Profile.js"],"names":["React","useState","useContext","Text","TextInput","Button","Styles","Strings","Login","props","loading","setLoading","email","setEmail","password","setPassword","onChangeScreen","screen","navigation","navigate","updateValue","user","setUser","login","signInApi","then","response","contextState","Alert","alert","ST104","ST32","ST33","flex","justifyContent","AuthPage","require","AuthLogo","AuthContent","ST19","AuthInput","ST20","ForgotPass","ST15","AuthButton","AuthButtonContent","AuthButtonLabel","ST17","ST31","AuthBottomContent","AuthBottomText","ST12","fontWeight","ST35"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Alert,\n  TouchableOpacity,\n  Image,\n  ScrollView,\n} from \"react-native\";\nimport { Text, TextInput, Button } from \"react-native-paper\";\nimport Styles from \"../config/Styles\";\nimport Strings from \"../config/Strings\";\n// import { signInApi, setUserData, setLogged } from \"../config/DataApp\";\n// import UserContext from '../context/UserContext';\n\nexport default function Login(props) {\n  // const contextState = useContext(UserContext);\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onChangeScreen = (screen) => {\n    props.navigation.navigate(screen);\n  };\n\n  const updateValue = (user) => {\n    setUser(user);\n  };\n\n  const login = async () => {\n    setLoading(true);\n\n    if ((email, password)) {\n      signInApi(email, password).then((response) => {\n        if (response !== \"error\" && response !== \"incomplete\") {\n          // setUserData(response);\n          contextState.updateValue(response[0]);\n          // setLoading(false);\n          // setLogged(true);\n          props.navigation.navigate(\"home\");\n        } else if (response === \"error\") {\n          //\n          // setUserData([]);\n          // setLoading(false);\n          // setLogged(false);\n          Alert.alert(Strings.ST104, Strings.ST32);\n        } else if (response === \"incomplete\") {\n          setLoading(false);\n          Alert.alert(Strings.ST104, Strings.ST33);\n        }\n      });\n    } else {\n      setLoading(false);\n      Alert.alert(Strings.ST104, Strings.ST33);\n    }\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n      <View style={Styles.AuthPage}>\n        <Image\n          source={require(\"../assets/images/logo.png\")}\n          resizeMode={\"contain\"}\n          style={Styles.AuthLogo}\n        />\n\n        <View style={Styles.AuthContent}>\n          <TextInput\n            label={Strings.ST19}\n            // onChangeText={(text) => setEmail(text)}\n            mode=\"flat\"\n            autoCapitalize=\"none\"\n            style={Styles.AuthInput}\n          />\n          <TextInput\n            label={Strings.ST20}\n            // onChangeText={(text) => setPassword(text)}\n            mode=\"flat\"\n            secureTextEntry={true}\n            style={Styles.AuthInput}\n          />\n          <TouchableOpacity\n            activeOpacity={0.9}\n            onPress={() => onChangeScreen(\"forgot\")}\n          >\n            <Text style={Styles.ForgotPass}>{Strings.ST15}</Text>\n          </TouchableOpacity>\n          <Button\n            mode=\"contained\"\n            onPress={() => null}\n            style={Styles.AuthButton}\n            contentStyle={Styles.AuthButtonContent}\n            labelStyle={Styles.AuthButtonLabel}\n          >\n            {!loading ? Strings.ST17 : Strings.ST31}\n          </Button>\n\n          <View style={Styles.AuthBottomContent}>\n            <TouchableOpacity\n              activeOpacity={0.9}\n              onPress={() => onChangeScreen(\"register\")}\n            >\n              <Text style={Styles.AuthBottomText}>\n                {Strings.ST12}{\" \"}\n                <Text style={{ fontWeight: \"bold\" }}>{Strings.ST35}</Text>\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}