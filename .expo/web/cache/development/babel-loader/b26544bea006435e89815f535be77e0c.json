{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/navigation/ModalNavigation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { createStackNavigator, TransitionPresets } from \"@react-navigation/stack\";\nimport { IconButton } from \"react-native-paper\";\nimport StackNavigation from \"./StackNavigation\";\nimport AuthNavigation from \"./AuthNavigation\";\nimport { useSelector } from \"react-redux\";\nvar Stack = createStackNavigator();\nexport default function ModalNavigation(props) {\n  var _this = this;\n\n  var isSignedIn = useSelector(function (state) {\n    return !!state.auth.token;\n  });\n  useEffect(function () {\n    console.log(isSignedIn);\n  }, [isSignedIn]);\n  var navigation = props.navigation;\n\n  var navigatorOptions = _objectSpread({\n    headerStyle: {\n      backgroundColor: \"#fff\",\n      shadowColor: \"transparent\",\n      elevation: 0,\n      shadowOpacity: 0\n    },\n    headerTintColor: \"#000\",\n    headerTitleStyle: {\n      fontWeight: \"bold\",\n      fontSize: 18\n    },\n    headerTitleAlign: \"center\",\n    gestureEnabled: true,\n    cardOverlayEnabled: true\n  }, TransitionPresets.ModalPresentationIOS);\n\n  var buttonBack = function buttonBack() {\n    return React.createElement(IconButton, {\n      icon: \"close\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var buttonBackDark = function buttonBackDark() {\n    return React.createElement(IconButton, {\n      icon: \"close\",\n      color: \"white\",\n      size: 24,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(Stack.Navigator, {\n    mode: \"modal\",\n    screenOptions: function screenOptions(route) {\n      return navigatorOptions;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, isSignedIn ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: StackNavigation,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: AuthNavigation,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/sachi/Desktop/e17-3yp-Smart-Pet-Feeder/MobileApp/navigation/ModalNavigation.js"],"names":["React","useEffect","useState","createStackNavigator","TransitionPresets","IconButton","StackNavigation","AuthNavigation","useSelector","Stack","ModalNavigation","props","isSignedIn","state","auth","token","console","log","navigation","navigatorOptions","headerStyle","backgroundColor","shadowColor","elevation","shadowOpacity","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerTitleAlign","gestureEnabled","cardOverlayEnabled","ModalPresentationIOS","buttonBack","goBack","buttonBackDark","route","headerShown"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,oBADF,EAEEC,iBAFF,QAGO,yBAHP;AAIA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AACA,eAAe,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAMC,UAAU,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAW,CAAC,CAACA,KAAK,CAACC,IAAN,CAAWC,KAAxB;AAAA,GAAD,CAA9B;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,MAAQM,UAAR,GAAuBP,KAAvB,CAAQO,UAAR;;AAEA,MAAMC,gBAAgB;AACpBC,IAAAA,WAAW,EAAE;AACXC,MAAAA,eAAe,EAAE,MADN;AAEXC,MAAAA,WAAW,EAAE,aAFF;AAGXC,MAAAA,SAAS,EAAE,CAHA;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KADO;AAOpBC,IAAAA,eAAe,EAAE,MAPG;AAQpBC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,UAAU,EAAE,MADI;AAEhBC,MAAAA,QAAQ,EAAE;AAFM,KARE;AAYpBC,IAAAA,gBAAgB,EAAE,QAZE;AAapBC,IAAAA,cAAc,EAAE,IAbI;AAcpBC,IAAAA,kBAAkB,EAAE;AAdA,KAejB3B,iBAAiB,CAAC4B,oBAfD,CAAtB;;AAkBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,IAAI,EAAE,EAA/B;AAAmC,MAAA,OAAO,EAAE;AAAA,eAAMf,UAAU,CAACgB,MAAX,EAAN;AAAA,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,WACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,OAFT;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMjB,UAAU,CAACgB,MAAX,EAAN;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATD;;AAWA,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,aAAa,EAAE,uBAACE,KAAD,EAAW;AACxB,aAAOjB,gBAAP;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,UAAU,GACT,0CACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEN,eAFb;AAGE,IAAA,OAAO,EAAE;AAAE+B,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADS,GAST,0CACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAE9B,cAFb;AAGE,IAAA,OAAO,EAAE;AAEP8B,MAAAA,WAAW,EAAE;AAFN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfJ,CADF;AA+ED","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  createStackNavigator,\n  TransitionPresets,\n} from \"@react-navigation/stack\";\nimport { IconButton } from \"react-native-paper\";\nimport StackNavigation from \"./StackNavigation\";\nimport AuthNavigation from \"./AuthNavigation\";\nimport { useSelector } from \"react-redux\";\n\nconst Stack = createStackNavigator();\nexport default function ModalNavigation(props) {\n  const isSignedIn = useSelector((state) => !!state.auth.token);\n\n  useEffect(() => {\n    console.log(isSignedIn);\n  }, [isSignedIn]);\n\n  const { navigation } = props;\n\n  const navigatorOptions = {\n    headerStyle: {\n      backgroundColor: \"#fff\",\n      shadowColor: \"transparent\",\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTintColor: \"#000\",\n    headerTitleStyle: {\n      fontWeight: \"bold\",\n      fontSize: 18,\n    },\n    headerTitleAlign: \"center\",\n    gestureEnabled: true,\n    cardOverlayEnabled: true,\n    ...TransitionPresets.ModalPresentationIOS,\n  };\n\n  const buttonBack = () => {\n    return (\n      <IconButton icon=\"close\" size={24} onPress={() => navigation.goBack()} />\n    );\n  };\n\n  const buttonBackDark = () => {\n    return (\n      <IconButton\n        icon=\"close\"\n        color={\"white\"}\n        size={24}\n        onPress={() => navigation.goBack()}\n      />\n    );\n  };\n\n  return (\n    <Stack.Navigator\n      mode=\"modal\"\n      screenOptions={(route) => {\n        return navigatorOptions;\n      }}\n    >\n      {isSignedIn ? (\n        <>\n          <Stack.Screen\n            name=\"Main\"\n            component={StackNavigation}\n            options={{ headerShown: false }}\n          />\n        </>\n      ) : (\n        <>\n          <Stack.Screen\n            name=\"Auth\"\n            component={AuthNavigation}\n            options={{\n              // title: \"Register\",\n              headerShown: false,\n              // headerLeft: () => buttonBack(),\n            }}\n          />\n\n          {/*<Stack.Screen*/}\n          {/*  name=\"Login\"*/}\n          {/*  component={Login}*/}\n          {/*  options={{*/}\n          {/*    title: \"Login\",*/}\n          {/*    headerTransparent: true,*/}\n          {/*    // headerLeft: () => buttonBack(),*/}\n          {/*  }}*/}\n          {/*/>*/}\n        </>\n      )}\n\n      {/*<Stack.Screen*/}\n      {/*  name=\"History\"*/}\n      {/*  component={History}*/}\n      {/*  options={{*/}\n      {/*    title: \"History\",*/}\n      {/*    headerTransparent: true,*/}\n      {/*    headerLeft: () => buttonBack(),*/}\n      {/*  }}*/}\n      {/*/>*/}\n      {/*<Stack.Screen*/}\n      {/*  name=\"History\"*/}\n      {/*  component={History}*/}\n      {/*  options={{*/}\n      {/*    title: \"History\",*/}\n      {/*    headerTransparent: true,*/}\n      {/*    headerLeft: () => buttonBack(),*/}\n      {/*  }}*/}\n      {/*/>*/}\n      {/*<Stack.Screen*/}\n      {/*  name=\"comments\"*/}\n      {/*  component={Comments}*/}\n      {/*  options={{ title: Strings.ST88, headerLeft: () => buttonBack() }}*/}\n      {/*/>*/}\n      {/*<Stack.Screen*/}\n      {/*  name=\"comment\"*/}\n      {/*  component={Comment}*/}\n      {/*  options={{ title: Strings.ST91, headerLeft: () => buttonBack() }}*/}\n      {/*/>*/}\n      {/*<Stack.Screen*/}\n      {/*  name=\"aboutus\"*/}\n      {/*  component={About}*/}\n      {/*  options={{ title: Strings.ST110, headerLeft: () => buttonBack() }}*/}\n      {/*/>*/}\n      {/*<Stack.Screen*/}\n      {/*  name=\"terms\"*/}\n      {/*  component={Terms}*/}\n      {/*  options={{ title: Strings.ST8, headerLeft: () => buttonBack() }}*/}\n      {/*/>*/}\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}