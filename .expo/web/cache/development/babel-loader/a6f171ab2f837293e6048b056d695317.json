{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AdMobInterstitial, setTestDeviceIDAsync } from 'expo-ads-admob';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ConfigApp from \"./ConfigApp\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar AdmobConfig = {\n  ShowInterstitial: initAds = function initAds() {\n    var INTERSTITIAL_ID, value, temp;\n    return _regeneratorRuntime.async(function initAds$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            INTERSTITIAL_ID = Platform.OS == \"ios\" ? ConfigApp.IOS_INTERSTITIAL_ID : ConfigApp.ANDROID_INTERSTITIAL_ID;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('showAd'));\n\n          case 4:\n            value = _context.sent;\n\n            if (!(value !== null)) {\n              _context.next = 23;\n              break;\n            }\n\n            if (!(value == \"10\")) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('showAd', \"1\"));\n\n          case 9:\n            AdMobInterstitial.setAdUnitID(INTERSTITIAL_ID);\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(setTestDeviceIDAsync(ConfigApp.TESTDEVICE_ID));\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.requestAdAsync({\n              servePersonalizedAds: true\n            }));\n\n          case 14:\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.showAdAsync());\n\n          case 16:\n            _context.next = 21;\n            break;\n\n          case 18:\n            temp = parseInt(value) + 1;\n            _context.next = 21;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('showAd', temp.toString()));\n\n          case 21:\n            _context.next = 32;\n            break;\n\n          case 23:\n            _context.next = 25;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('showAd', \"1\"));\n\n          case 25:\n            AdMobInterstitial.setAdUnitID(INTERSTITIAL_ID);\n            _context.next = 28;\n            return _regeneratorRuntime.awrap(setTestDeviceIDAsync(ConfigApp.TESTDEVICE_ID));\n\n          case 28:\n            _context.next = 30;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.requestAdAsync({\n              servePersonalizedAds: true\n            }));\n\n          case 30:\n            _context.next = 32;\n            return _regeneratorRuntime.awrap(AdMobInterstitial.showAdAsync());\n\n          case 32:\n            _context.next = 37;\n            break;\n\n          case 34:\n            _context.prev = 34;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 34]], Promise);\n  }\n};\nexport default AdmobConfig;","map":{"version":3,"sources":["/Users/sachi/Desktop/Mobile App/application/config/AdmobConfig.js"],"names":["AdMobInterstitial","setTestDeviceIDAsync","ConfigApp","AsyncStorage","AdmobConfig","ShowInterstitial","initAds","INTERSTITIAL_ID","Platform","OS","IOS_INTERSTITIAL_ID","ANDROID_INTERSTITIAL_ID","getItem","value","setItem","setAdUnitID","TESTDEVICE_ID","requestAdAsync","servePersonalizedAds","showAdAsync","temp","parseInt","toString","console","log"],"mappings":";AAAA,SAAQA,iBAAR,EAA2BC,oBAA3B,QAAsD,gBAAtD;;AAEA,OAAOC,SAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,WAAW,GAAG;AAEhBC,EAAAA,gBAAgB,EAElBC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIAC,YAAAA,eAJA,GAIkBC,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuBP,SAAS,CAACQ,mBAAjC,GAAuDR,SAAS,CAACS,uBAJnF;AAAA;AAAA,6CAMcR,YAAY,CAACS,OAAb,CAAqB,QAArB,CANd;;AAAA;AAMAC,YAAAA,KANA;;AAAA,kBAQHA,KAAK,KAAK,IARP;AAAA;AAAA;AAAA;;AAAA,kBASCA,KAAK,IAAI,IATV;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWIV,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA+B,GAA/B,CAXJ;;AAAA;AAYFd,YAAAA,iBAAiB,CAACe,WAAlB,CAA8BR,eAA9B;AAZE;AAAA,6CAaIN,oBAAoB,CAACC,SAAS,CAACc,aAAX,CAbxB;;AAAA;AAAA;AAAA,6CAcIhB,iBAAiB,CAACiB,cAAlB,CAAiC;AAAEC,cAAAA,oBAAoB,EAAE;AAAxB,aAAjC,CAdJ;;AAAA;AAAA;AAAA,6CAeIlB,iBAAiB,CAACmB,WAAlB,EAfJ;;AAAA;AAAA;AAAA;;AAAA;AAkBKC,YAAAA,IAlBL,GAkBYC,QAAQ,CAACR,KAAD,CAAR,GAAgB,CAlB5B;AAAA;AAAA,6CAmBOV,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA+BM,IAAI,CAACE,QAAL,EAA/B,CAnBP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAsBInB,YAAY,CAACW,OAAb,CAAqB,QAArB,EAA+B,GAA/B,CAtBJ;;AAAA;AAuBFd,YAAAA,iBAAiB,CAACe,WAAlB,CAA8BR,eAA9B;AAvBE;AAAA,6CAwBIN,oBAAoB,CAACC,SAAS,CAACc,aAAX,CAxBxB;;AAAA;AAAA;AAAA,6CAyBIhB,iBAAiB,CAACiB,cAAlB,CAAiC;AAAEC,cAAAA,oBAAoB,EAAE;AAAxB,aAAjC,CAzBJ;;AAAA;AAAA;AAAA,6CA0BIlB,iBAAiB,CAACmB,WAAlB,EA1BJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8BJI,YAAAA,OAAO,CAACC,GAAR;;AA9BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJQ,CAApB;AAyCA,eAAepB,WAAf","sourcesContent":["import {AdMobInterstitial, setTestDeviceIDAsync} from 'expo-ads-admob';\nimport { Platform} from 'react-native';\nimport ConfigApp from './ConfigApp';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AdmobConfig = {\n  \n    ShowInterstitial: \n\n  initAds = async () => {\n\n  try {\n\n      const INTERSTITIAL_ID = Platform.OS == \"ios\" ? ConfigApp.IOS_INTERSTITIAL_ID : ConfigApp.ANDROID_INTERSTITIAL_ID;\n\n      const value = await AsyncStorage.getItem('showAd');\n\n      if(value !== null) {\n          if(value == \"10\"){ \n\n          await AsyncStorage.setItem('showAd', \"1\");\n          AdMobInterstitial.setAdUnitID(INTERSTITIAL_ID);\n          await setTestDeviceIDAsync(ConfigApp.TESTDEVICE_ID);\n          await AdMobInterstitial.requestAdAsync({ servePersonalizedAds: true});\n          await AdMobInterstitial.showAdAsync();\n\n          }else{\n             var temp = parseInt(value)+1;\n             await AsyncStorage.setItem('showAd', temp.toString() );\n          }\n      }else{\n          await AsyncStorage.setItem('showAd', \"1\");\n          AdMobInterstitial.setAdUnitID(INTERSTITIAL_ID);\n          await setTestDeviceIDAsync(ConfigApp.TESTDEVICE_ID);\n          await AdMobInterstitial.requestAdAsync({ servePersonalizedAds: true});\n          await AdMobInterstitial.showAdAsync();\n\n          }\n      }catch(e) {\n        console.log(e);\n      }\n\n\t},\n\n}\n\nexport default AdmobConfig;"]},"metadata":{},"sourceType":"module"}